// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ValuesSchema normalization can use a function to determine the schema when normalizing 1`] = `
{
  "entities": {
    "Cat": {
      "1": {
        "id": "1",
        "type": "cat",
      },
    },
    "Dog": {
      "1": {
        "id": "1",
        "type": "dog",
      },
    },
  },
  "entitiesMeta": {
    "Cat": {
      "1": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
    },
    "Dog": {
      "1": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
    },
  },
  "indexes": {},
  "result": {
    "fido": {
      "id": "1",
      "schema": "dogs",
    },
    "fluffy": {
      "id": "1",
      "schema": "cats",
    },
    "jim": {
      "id": "2",
      "type": "lizard",
    },
  },
}
`;

exports[`ValuesSchema normalization can use a function to determine the schema when normalizing 2`] = `
[
  [
    "Schema attribute "lizards" is not expected.
Expected one of: "dogs", "cats"

Value: {
  "id": "2",
  "type": "lizard"
}",
  ],
]
`;

exports[`ValuesSchema normalization filters out null and undefined values 1`] = `
{
  "entities": {
    "Cat": {
      "1": {
        "id": "1",
        "type": "cats",
      },
    },
  },
  "entitiesMeta": {
    "Cat": {
      "1": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
    },
  },
  "indexes": {},
  "result": {
    "fluffy": {
      "id": "1",
      "schema": "cats",
    },
  },
}
`;

exports[`ValuesSchema normalization normalizes the values of an object with the given schema 1`] = `
{
  "entities": {
    "Cat": {
      "1": {
        "id": "1",
        "type": "cats",
      },
    },
    "Dog": {
      "1": {
        "id": "1",
        "type": "dogs",
      },
    },
  },
  "entitiesMeta": {
    "Cat": {
      "1": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
    },
    "Dog": {
      "1": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
    },
  },
  "indexes": {},
  "result": {
    "fido": {
      "id": "1",
      "schema": "dogs",
    },
    "fluffy": {
      "id": "1",
      "schema": "cats",
    },
  },
}
`;

exports[`ValuesSchema normalization normalizes without schemaAttribute 1`] = `
{
  "entities": {
    "MyEntity": {
      "1": {
        "id": "1",
        "name": "first thing",
      },
      "2": {
        "id": "2",
        "name": "second thing",
      },
    },
  },
  "entitiesMeta": {
    "MyEntity": {
      "1": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
      "2": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
    },
  },
  "indexes": {},
  "result": {
    "first": "1",
    "second": "2",
  },
}
`;

exports[`ValuesSchema normalization works on complex object 1`] = `
{
  "entities": {
    "Estimate": {
      "BTC": {
        "coinbase_fees": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "confirmation_duration": 900,
        "exchange": {
          "crypto": "BTC",
          "local": "USD",
          "rate": "6820.07",
        },
        "exchange_to_proceeds": {
          "crypto": "BTC",
          "local": "EUR",
          "rate": "6820.07",
        },
        "fee": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "fee_per_kb": {
          "amount": "0.00016566",
          "currency": "BTC",
        },
        "min_order_size": {
          "amount": "0.001",
          "currency": "BTC",
        },
        "priority": "fast",
        "recipient_value": {
          "amount": "0.00054147",
          "currency": "BTC",
        },
      },
      "ETH": {
        "coinbase_fees": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "confirmation_duration": 900,
        "exchange": {
          "crypto": "ETH",
          "local": "USD",
          "rate": "197.07",
        },
        "exchange_to_proceeds": {
          "crypto": "BTC",
          "local": "EUR",
          "rate": "6820.07",
        },
        "fee": {
          "amount": "0.03795",
          "currency": "ETH",
        },
        "fee_per_kb": {
          "amount": "0.00086",
          "currency": "ETH",
        },
        "min_order_size": {
          "amount": "0.001",
          "currency": "BTC",
        },
        "priority": "fast",
        "recipient_value": {
          "amount": "2.53",
          "currency": "ETH",
        },
      },
    },
  },
  "entitiesMeta": {
    "Estimate": {
      "BTC": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
      "ETH": {
        "date": 1557831718135,
        "expiresAt": Infinity,
        "fetchedAt": 0,
      },
    },
  },
  "indexes": {},
  "result": {
    "data": {
      "estimates": {
        "BTC": "BTC",
        "ETH": "ETH",
      },
    },
  },
}
`;

exports[`input (direct) ValuesSchema denormalization (current) denormalizes the values of an object with the given schema 1`] = `
{
  "fido": Dog {
    "id": "1",
    "type": "dogs",
  },
  "fluffy": Cat {
    "id": "1",
    "type": "cats",
  },
}
`;

exports[`input (direct) ValuesSchema denormalization (current) denormalizes with deleted entity should just remove them 1`] = `
{
  "fido": Dog {
    "id": "1",
    "type": "dogs",
  },
  "fluffy": Cat {
    "id": "1",
    "type": "cats",
  },
}
`;

exports[`input (direct) ValuesSchema denormalization (current) denormalizes with missing entity should have false second value 1`] = `
{
  "fido": Dog {
    "id": "1",
    "type": "dogs",
  },
  "fluffy": Cat {
    "id": "1",
    "type": "cats",
  },
}
`;

exports[`input (direct) ValuesSchema denormalization (current) denormalizes without schemaAttribute 1`] = `
{
  "first": MyEntity {
    "id": "1",
    "name": "first thing",
  },
  "second": MyEntity {
    "id": "2",
    "name": "second thing",
  },
}
`;

exports[`input (direct) ValuesSchema denormalization (current) works on complex object 1`] = `
{
  "data": {
    "estimates": {
      "BTC": Estimate {
        "coinbase_fees": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "confirmation_duration": 900,
        "exchange": {
          "crypto": "BTC",
          "local": "USD",
          "rate": "6820.07",
        },
        "exchange_to_proceeds": {
          "crypto": "BTC",
          "local": "EUR",
          "rate": "6820.07",
        },
        "fee": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "fee_per_kb": {
          "amount": "0.00016566",
          "currency": "BTC",
        },
        "min_order_size": {
          "amount": "0.001",
          "currency": "BTC",
        },
        "priority": "fast",
        "recipient_value": {
          "amount": "0.00054147",
          "currency": "BTC",
        },
      },
      "ETH": Estimate {
        "coinbase_fees": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "confirmation_duration": 900,
        "exchange": {
          "crypto": "ETH",
          "local": "USD",
          "rate": "197.07",
        },
        "exchange_to_proceeds": {
          "crypto": "BTC",
          "local": "EUR",
          "rate": "6820.07",
        },
        "fee": {
          "amount": "0.03795",
          "currency": "ETH",
        },
        "fee_per_kb": {
          "amount": "0.00086",
          "currency": "ETH",
        },
        "min_order_size": {
          "amount": "0.001",
          "currency": "BTC",
        },
        "priority": "fast",
        "recipient_value": {
          "amount": "2.53",
          "currency": "ETH",
        },
      },
    },
  },
}
`;

exports[`input (immutable) ValuesSchema denormalization (current) denormalizes the values of an object with the given schema 1`] = `
{
  "fido": Dog {
    "id": "1",
    "type": "dogs",
  },
  "fluffy": Cat {
    "id": "1",
    "type": "cats",
  },
}
`;

exports[`input (immutable) ValuesSchema denormalization (current) denormalizes with deleted entity should just remove them 1`] = `
{
  "fido": Dog {
    "id": "1",
    "type": "dogs",
  },
  "fluffy": Cat {
    "id": "1",
    "type": "cats",
  },
}
`;

exports[`input (immutable) ValuesSchema denormalization (current) denormalizes with missing entity should have false second value 1`] = `
{
  "fido": Dog {
    "id": "1",
    "type": "dogs",
  },
  "fluffy": Cat {
    "id": "1",
    "type": "cats",
  },
}
`;

exports[`input (immutable) ValuesSchema denormalization (current) denormalizes without schemaAttribute 1`] = `
{
  "first": MyEntity {
    "id": "1",
    "name": "first thing",
  },
  "second": MyEntity {
    "id": "2",
    "name": "second thing",
  },
}
`;

exports[`input (immutable) ValuesSchema denormalization (current) works on complex object 1`] = `
{
  "data": {
    "estimates": {
      "BTC": Estimate {
        "coinbase_fees": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "confirmation_duration": 900,
        "exchange": {
          "crypto": "BTC",
          "local": "USD",
          "rate": "6820.07",
        },
        "exchange_to_proceeds": {
          "crypto": "BTC",
          "local": "EUR",
          "rate": "6820.07",
        },
        "fee": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "fee_per_kb": {
          "amount": "0.00016566",
          "currency": "BTC",
        },
        "min_order_size": {
          "amount": "0.001",
          "currency": "BTC",
        },
        "priority": "fast",
        "recipient_value": {
          "amount": "0.00054147",
          "currency": "BTC",
        },
      },
      "ETH": Estimate {
        "coinbase_fees": {
          "amount": "0.00002270",
          "currency": "BTC",
        },
        "confirmation_duration": 900,
        "exchange": {
          "crypto": "ETH",
          "local": "USD",
          "rate": "197.07",
        },
        "exchange_to_proceeds": {
          "crypto": "BTC",
          "local": "EUR",
          "rate": "6820.07",
        },
        "fee": {
          "amount": "0.03795",
          "currency": "ETH",
        },
        "fee_per_kb": {
          "amount": "0.00086",
          "currency": "ETH",
        },
        "min_order_size": {
          "amount": "0.001",
          "currency": "BTC",
        },
        "priority": "fast",
        "recipient_value": {
          "amount": "2.53",
          "currency": "ETH",
        },
      },
    },
  },
}
`;
