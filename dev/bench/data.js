window.BENCHMARK_DATA = {
  "lastUpdate": 1759716855032,
  "repoUrl": "https://github.com/reactive/data-client",
  "entries": {
    "Benchmark": [
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8ef6cfbd476ef5e045b4d09d5ee75ae028a6048e",
          "message": "internal: Benchmark CI (#706)",
          "timestamp": "2021-03-31T22:11:20-07:00",
          "tree_id": "7398d267377f15bd734fb142f6d01de1b9958c46",
          "url": "https://github.com/coinbase/rest-hooks/commit/8ef6cfbd476ef5e045b4d09d5ee75ae028a6048e"
        },
        "date": 1617254007818,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 65.18,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 25.68,
            "range": "±2.96%",
            "unit": "ops/sec",
            "extra": "47 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6253ead9d681f5f617e4ede2202253f5155467c",
          "message": "internal(pkg): bump @anansi/babel-preset from 2.2.6 to 2.3.0 (#711)\n\nBumps [@anansi/babel-preset](https://github.com/ntucker/anansi/tree/HEAD/packages/babel-preset-anansi) from 2.2.6 to 2.3.0.\r\n- [Release notes](https://github.com/ntucker/anansi/releases)\r\n- [Changelog](https://github.com/ntucker/anansi/blob/master/packages/babel-preset-anansi/CHANGELOG.md)\r\n- [Commits](https://github.com/ntucker/anansi/commits/@anansi/babel-preset@2.3.0/packages/babel-preset-anansi)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-04-01T22:17:16-07:00",
          "tree_id": "dd071b1904cb2e03f5d23a6f8fb4a9abcd03541c",
          "url": "https://github.com/coinbase/rest-hooks/commit/f6253ead9d681f5f617e4ede2202253f5155467c"
        },
        "date": 1617340729460,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 81.64,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 30.58,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "55 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6e20f3c46350e2554fd15e5eefa0666341887a0",
          "message": "internal(pkg): bump @commitlint/config-conventional (#710)\n\nBumps [@commitlint/config-conventional](https://github.com/conventional-changelog/commitlint) from 12.0.1 to 12.1.1.\r\n- [Release notes](https://github.com/conventional-changelog/commitlint/releases)\r\n- [Changelog](https://github.com/conventional-changelog/commitlint/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/conventional-changelog/commitlint/compare/v12.0.1...v12.1.1)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-04-01T23:21:54-07:00",
          "tree_id": "c354d8fe9e4d773485806578a5864defad80dfec",
          "url": "https://github.com/coinbase/rest-hooks/commit/f6e20f3c46350e2554fd15e5eefa0666341887a0"
        },
        "date": 1617344626148,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 72.6,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.24,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "51 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "eef19ee0d11d013bd3271bdeec72af007c168285",
          "message": "internal(pkg): bump @commitlint/cli from 12.0.1 to 12.1.1 (#709)\n\nBumps [@commitlint/cli](https://github.com/conventional-changelog/commitlint) from 12.0.1 to 12.1.1.\n- [Release notes](https://github.com/conventional-changelog/commitlint/releases)\n- [Changelog](https://github.com/conventional-changelog/commitlint/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/conventional-changelog/commitlint/compare/v12.0.1...v12.1.1)\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-04-02T05:52:09-05:00",
          "tree_id": "3512602e7816c2d2710e8906a6613395e491becc",
          "url": "https://github.com/coinbase/rest-hooks/commit/eef19ee0d11d013bd3271bdeec72af007c168285"
        },
        "date": 1617360840517,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 78.8,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.34,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d13535147464f011aa761130fd3596a37c8ba266",
          "message": "internal(fix): Fix github action syntax for benchmark (#717)",
          "timestamp": "2021-04-03T18:20:21-07:00",
          "tree_id": "cf8093ce4144b9eff145a40fbf6e168f4283872a",
          "url": "https://github.com/coinbase/rest-hooks/commit/d13535147464f011aa761130fd3596a37c8ba266"
        },
        "date": 1617499329509,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.04,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.29,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b8c64438bb34bc1f9e9bc1461bd7e4d3bb4e330e",
          "message": "enhance: All schema members are optional by default (#716)\n\nPreviously failing or deleting results will\r\nnow work:\r\n- Arrays no longer delete items where members are missing\r\n- Results missing members will return what they have\r\n\r\nAlso:\r\n- Results in cache are always 'ready', and thus ignore found\r\n- We only infer results, and not entities, thus entities' nested members are always 'found'",
          "timestamp": "2021-04-04T20:38:36-07:00",
          "tree_id": "2221639ae749508807dd828c848b6161c0f8721a",
          "url": "https://github.com/coinbase/rest-hooks/commit/b8c64438bb34bc1f9e9bc1461bd7e4d3bb4e330e"
        },
        "date": 1617594058704,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 61.93,
            "range": "±4.14%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.45,
            "range": "±5.38%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f0964dfce749e830a11721f80c8c8b825ad715f5",
          "message": "internal(pkg): bump cross-fetch from 3.1.3 to 3.1.4 (#718)\n\nBumps [cross-fetch](https://github.com/lquixada/cross-fetch) from 3.1.3 to 3.1.4.\n- [Release notes](https://github.com/lquixada/cross-fetch/releases)\n- [Commits](https://github.com/lquixada/cross-fetch/compare/v3.1.3...v3.1.4)\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-04-05T00:46:07-05:00",
          "tree_id": "8bb746658341941731fe83fde0de532d44eaaf3a",
          "url": "https://github.com/coinbase/rest-hooks/commit/f0964dfce749e830a11721f80c8c8b825ad715f5"
        },
        "date": 1617601683008,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 63.73,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 25.66,
            "range": "±4.04%",
            "unit": "ops/sec",
            "extra": "47 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d5c706cd20986cffc117515ad25df617fa3a7fbe",
          "message": "internal(pkg): bump typescript from 4.2.3 to 4.2.4 (#720)\n\nBumps [typescript](https://github.com/Microsoft/TypeScript) from 4.2.3 to 4.2.4.\r\n- [Release notes](https://github.com/Microsoft/TypeScript/releases)\r\n- [Commits](https://github.com/Microsoft/TypeScript/commits)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-04-07T22:34:44-07:00",
          "tree_id": "d56993b1099c97ec0334a5e454ff1d2f6cbde0bf",
          "url": "https://github.com/coinbase/rest-hooks/commit/d5c706cd20986cffc117515ad25df617fa3a7fbe"
        },
        "date": 1617860192283,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.27,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 30.62,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "54 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "92a3d6cb190a08d543ef825b6c9dd426a4e3ea02",
          "message": "internal(pkg): bump core-js from 3.10.0 to 3.10.1 (#721)\n\nBumps [core-js](https://github.com/zloirock/core-js/tree/HEAD/packages/core-js) from 3.10.0 to 3.10.1.\n- [Release notes](https://github.com/zloirock/core-js/releases)\n- [Changelog](https://github.com/zloirock/core-js/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/zloirock/core-js/commits/v3.10.1/packages/core-js)\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-04-08T05:45:43-05:00",
          "tree_id": "11abbdfb592450d53da76bacb968c1777e3f61fb",
          "url": "https://github.com/coinbase/rest-hooks/commit/92a3d6cb190a08d543ef825b6c9dd426a4e3ea02"
        },
        "date": 1617878852705,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 71.89,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.56,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "51 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "99317d17db8293d6bf987d1cbfa99691cf58903e",
          "message": "fix: schema.Values singleSchema denormalization (#723)",
          "timestamp": "2021-04-08T14:43:19-07:00",
          "tree_id": "076802474a96177361c634d745b74cd7a4961ad1",
          "url": "https://github.com/coinbase/rest-hooks/commit/99317d17db8293d6bf987d1cbfa99691cf58903e"
        },
        "date": 1617918314045,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.66,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.07,
            "range": "±3.08%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "409cbce1fc29058ddbaba76e2f06d90f7f971892",
          "message": "internal(fix): Fix bench action (#725)",
          "timestamp": "2021-04-08T20:02:35-07:00",
          "tree_id": "98f6a94bfd743f615e03e49f9d3659a105e62c7e",
          "url": "https://github.com/coinbase/rest-hooks/commit/409cbce1fc29058ddbaba76e2f06d90f7f971892"
        },
        "date": 1617937467321,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 73.44,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.72,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "50 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4db2522b9060a7f7aaba4a93c3cf1694eb3d5364",
          "message": "enhance: Support TypeScript 3, while using TypeScript 4 features (#726)",
          "timestamp": "2021-04-08T22:54:18-07:00",
          "tree_id": "b1239a3967a7cb930edab8c57d2f2dfd3764df84",
          "url": "https://github.com/coinbase/rest-hooks/commit/4db2522b9060a7f7aaba4a93c3cf1694eb3d5364"
        },
        "date": 1617947773490,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 69.3,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.03,
            "range": "±3.19%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0890bef70c7b1f153ffff13b8b184468ec494e42",
          "message": "internal(fix): Add branch name to both (#730)",
          "timestamp": "2021-04-08T23:10:56-07:00",
          "tree_id": "e41d37b5889179285de7c5b248a54cd8c6de3b59",
          "url": "https://github.com/coinbase/rest-hooks/commit/0890bef70c7b1f153ffff13b8b184468ec494e42"
        },
        "date": 1617948754528,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 81.65,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.64,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "56 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7ff0996dc19e86ac3b3d0b2c205ff8ec189963ec",
          "message": "internal(pkg): bump rollup from 2.44.0 to 2.45.0 (#729)\n\nBumps [rollup](https://github.com/rollup/rollup) from 2.44.0 to 2.45.0.\n- [Release notes](https://github.com/rollup/rollup/releases)\n- [Changelog](https://github.com/rollup/rollup/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/rollup/rollup/compare/v2.44.0...v2.45.0)\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-04-09T01:16:18-05:00",
          "tree_id": "e032106835117a7f56b8235f9263521872b62121",
          "url": "https://github.com/coinbase/rest-hooks/commit/7ff0996dc19e86ac3b3d0b2c205ff8ec189963ec"
        },
        "date": 1617949099734,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 70.43,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.41,
            "range": "±2.91%",
            "unit": "ops/sec",
            "extra": "50 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f3e727b76a41577f46510c113210bd487744936",
          "message": "internal(pkg): bump @babel/core from 7.13.14 to 7.13.15 (#728)\n\nBumps [@babel/core](https://github.com/babel/babel/tree/HEAD/packages/babel-core) from 7.13.14 to 7.13.15.\n- [Release notes](https://github.com/babel/babel/releases)\n- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/babel/babel/commits/v7.13.15/packages/babel-core)\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-04-09T07:43:43-05:00",
          "tree_id": "8f389977a0fe3d5df7e3d2d7508919cf6d8deb1a",
          "url": "https://github.com/coinbase/rest-hooks/commit/5f3e727b76a41577f46510c113210bd487744936"
        },
        "date": 1617972317506,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 87.18,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.48,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "59 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "848e63f3f600ee639a7d941d855eb91047f51881",
          "message": "internal(pkg): bump eslint-plugin-react from 7.23.1 to 7.23.2 (#727)\n\nBumps [eslint-plugin-react](https://github.com/yannickcr/eslint-plugin-react) from 7.23.1 to 7.23.2.\n- [Release notes](https://github.com/yannickcr/eslint-plugin-react/releases)\n- [Changelog](https://github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/yannickcr/eslint-plugin-react/compare/v7.23.1...v7.23.2)\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-04-09T07:48:08-05:00",
          "tree_id": "993435baf91decec36791bf73631fd33fdbf4d7e",
          "url": "https://github.com/coinbase/rest-hooks/commit/848e63f3f600ee639a7d941d855eb91047f51881"
        },
        "date": 1617972595612,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.87,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.02,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "50 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1a77a03a5c06b352feb467958be2e6e3f8f91003",
          "message": "fix: Inferring schema.Values() (#732)",
          "timestamp": "2021-04-10T15:12:48-07:00",
          "tree_id": "b6f628918f35c1d0c34783855f09ea52a7c10ad6",
          "url": "https://github.com/coinbase/rest-hooks/commit/1a77a03a5c06b352feb467958be2e6e3f8f91003"
        },
        "date": 1618092885157,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.75,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.97,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83382cce716ec22949127cc0f190bbeddf5a3722",
          "message": "enhance: Use namedtuples for denormalize (#733)",
          "timestamp": "2021-04-10T15:20:18-07:00",
          "tree_id": "dba2c94fa79ac9558f8452bb7abe09edf068aab6",
          "url": "https://github.com/coinbase/rest-hooks/commit/83382cce716ec22949127cc0f190bbeddf5a3722"
        },
        "date": 1618093322020,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 70.2,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.89,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "50 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e34526d5dde5a2cc317cd9428ededc6a9893dc41",
          "message": "enhance: Refined deleteShape() definition (#734)",
          "timestamp": "2021-04-10T15:24:49-07:00",
          "tree_id": "95c8601a4bfadb295f74d0b9a7d10d2872e94877",
          "url": "https://github.com/coinbase/rest-hooks/commit/e34526d5dde5a2cc317cd9428ededc6a9893dc41"
        },
        "date": 1618093610474,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 71.62,
            "range": "±3.28%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.82,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fc380a941e2af32b4ed4730cd006d38ffacd02a",
          "message": "fix: Denormalizing polymoprhic with undefined no longer crashes (#735)",
          "timestamp": "2021-04-12T05:46:57-07:00",
          "tree_id": "7d6b3e34caca8de04fef2f321b8e2a8a40f9d790",
          "url": "https://github.com/coinbase/rest-hooks/commit/5fc380a941e2af32b4ed4730cd006d38ffacd02a"
        },
        "date": 1618231732721,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 87.25,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.34,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "57 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "541e633972b3e286a480f0a5a43db702194e9ac7",
          "message": "internal(pkg): bump @anansi/babel-preset from 2.3.0 to 2.5.1 (#739)\n\nBumps [@anansi/babel-preset](https://github.com/ntucker/anansi/tree/HEAD/packages/babel-preset-anansi) from 2.3.0 to 2.5.1.\r\n- [Release notes](https://github.com/ntucker/anansi/releases)\r\n- [Changelog](https://github.com/ntucker/anansi/blob/master/packages/babel-preset-anansi/CHANGELOG.md)\r\n- [Commits](https://github.com/ntucker/anansi/commits/@anansi/babel-preset@2.5.1/packages/babel-preset-anansi)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-04-12T05:50:51-07:00",
          "tree_id": "c0cee30ed1c7509ae0cf52d77df6b1dd9ac54296",
          "url": "https://github.com/coinbase/rest-hooks/commit/541e633972b3e286a480f0a5a43db702194e9ac7"
        },
        "date": 1618231979486,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 66.5,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.77,
            "range": "±3.18%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b9373fda639f9a2b1fb33635f7a3acde01e4b5c6",
          "message": "internal(pkg): bump rollup from 2.45.0 to 2.45.1 (#737)\n\nBumps [rollup](https://github.com/rollup/rollup) from 2.45.0 to 2.45.1.\r\n- [Release notes](https://github.com/rollup/rollup/releases)\r\n- [Changelog](https://github.com/rollup/rollup/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/rollup/rollup/compare/v2.45.0...v2.45.1)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-04-12T05:55:31-07:00",
          "tree_id": "98b0a2d2cdbcc662269316396e62189efcccee9b",
          "url": "https://github.com/coinbase/rest-hooks/commit/b9373fda639f9a2b1fb33635f7a3acde01e4b5c6"
        },
        "date": 1618232239784,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 73.51,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.64,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "52 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0029a7b8729f7106ab4c3e6d9f7346add4105218",
          "message": "internal(pkg): bump eslint from 7.23.0 to 7.24.0 (#738)\n\nBumps [eslint](https://github.com/eslint/eslint) from 7.23.0 to 7.24.0.\r\n- [Release notes](https://github.com/eslint/eslint/releases)\r\n- [Changelog](https://github.com/eslint/eslint/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/eslint/eslint/compare/v7.23.0...v7.24.0)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-04-12T06:03:53-07:00",
          "tree_id": "e40ac5f964eecfb1510d34daeefc8106400f363e",
          "url": "https://github.com/coinbase/rest-hooks/commit/0029a7b8729f7106ab4c3e6d9f7346add4105218"
        },
        "date": 1618232731755,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 85.61,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.49,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "57 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "81fe1e688864ca557e23f426dc15f555b76642cd",
          "message": "internal(pkg): bump @anansi/eslint-plugin from 0.10.4 to 0.10.5 (#736)\n\nBumps [@anansi/eslint-plugin](https://github.com/ntucker/anansi/tree/HEAD/packages/eslint-plugin) from 0.10.4 to 0.10.5.\r\n- [Release notes](https://github.com/ntucker/anansi/releases)\r\n- [Changelog](https://github.com/ntucker/anansi/blob/master/packages/eslint-plugin/CHANGELOG.md)\r\n- [Commits](https://github.com/ntucker/anansi/commits/@anansi/eslint-plugin@0.10.5/packages/eslint-plugin)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-04-12T06:08:38-07:00",
          "tree_id": "f3056f5771646222c75fa88bb11523627a666a9c",
          "url": "https://github.com/coinbase/rest-hooks/commit/81fe1e688864ca557e23f426dc15f555b76642cd"
        },
        "date": 1618233111348,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 33.18,
            "range": "±17.21%",
            "unit": "ops/sec",
            "extra": "45 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 17.65,
            "range": "±16.17%",
            "unit": "ops/sec",
            "extra": "35 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "0ca6c375c194819877e9fe5c2fd57a0e85a6898e",
          "message": "internal: publish\n\n - @rest-hooks/core@1.0.13\n - @rest-hooks/endpoint@1.0.11\n - @rest-hooks/normalizr@6.0.8\n - rest-hooks@5.0.17\n - @rest-hooks/rest@2.0.5",
          "timestamp": "2021-04-11T20:53:43-05:00",
          "tree_id": "a2c5e9c5ceac29b6a3a796c055877e553ae3c2d6",
          "url": "https://github.com/coinbase/rest-hooks/commit/0ca6c375c194819877e9fe5c2fd57a0e85a6898e"
        },
        "date": 1618240015253,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 67.37,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.4,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "50 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bbae8bd44d9870e7f6ed599b0751ad264f9f2313",
          "message": "fix: Publish legacy type files (#741)",
          "timestamp": "2021-04-12T08:18:36-07:00",
          "tree_id": "81b16645afbc9d3246fe36809b262c6677172fa5",
          "url": "https://github.com/coinbase/rest-hooks/commit/bbae8bd44d9870e7f6ed599b0751ad264f9f2313"
        },
        "date": 1618240833747,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 69.23,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.96,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "52 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "fbfc12895344985575dcc9315fd7f6f1f49fdc28",
          "message": "internal: publish\n\n - @rest-hooks/core@1.0.14\n - @rest-hooks/endpoint@1.0.12\n - @rest-hooks/normalizr@6.0.9\n - rest-hooks@5.0.18",
          "timestamp": "2021-04-11T21:46:23-05:00",
          "tree_id": "9547fbe213355124885b42818c02b568e92d7b6f",
          "url": "https://github.com/coinbase/rest-hooks/commit/fbfc12895344985575dcc9315fd7f6f1f49fdc28"
        },
        "date": 1618241428768,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 65.65,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 25.25,
            "range": "±3.36%",
            "unit": "ops/sec",
            "extra": "45 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "20aa3a09bbe4419c23e37b331ca3208349f0e07c",
          "message": "fix: Relax DeleteShape def to be back-compat (#743)",
          "timestamp": "2021-04-12T10:51:09-07:00",
          "tree_id": "8a1f4192bd5a957f8d216e753cf714b4c0286942",
          "url": "https://github.com/coinbase/rest-hooks/commit/20aa3a09bbe4419c23e37b331ca3208349f0e07c"
        },
        "date": 1618249965036,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 86.62,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.08,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "58 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4dd6a5a3f6f0f6bf024731a082dc48afa74cb327",
          "message": "enhance: Schema assistance for Delete (#756)",
          "timestamp": "2021-04-15T21:52:04-07:00",
          "tree_id": "927d5db7e3b344b9ebad1b554de6a078c01303f3",
          "url": "https://github.com/coinbase/rest-hooks/commit/4dd6a5a3f6f0f6bf024731a082dc48afa74cb327"
        },
        "date": 1618548856430,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 69.41,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.09,
            "range": "±2.64%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "552f83740279376288879a661ff487c5c6f1d469",
          "message": "feat: Endpoint parameters can be of any length (#767)",
          "timestamp": "2021-04-24T13:44:42-07:00",
          "tree_id": "752bbe4f59835d40d35b39992ab620fc4df4248a",
          "url": "https://github.com/coinbase/rest-hooks/commit/552f83740279376288879a661ff487c5c6f1d469"
        },
        "date": 1619297199696,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 86.86,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.13,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "59 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "c3f09abd47faaeee0616e8ba550c0b6f1a444ee4",
          "message": "internal: publish\n\n - @rest-hooks/core@1.1.0\n - @rest-hooks/endpoint@1.1.0\n - @rest-hooks/hooks@1.1.3\n - @rest-hooks/img@0.2.2\n - @rest-hooks/legacy@2.0.6\n - @rest-hooks/normalizr@6.1.0\n - rest-hooks@5.0.21\n - @rest-hooks/rest@2.1.0\n - @rest-hooks/test@4.1.2\n - @rest-hooks/use-enhanced-reducer@1.0.6",
          "timestamp": "2021-04-24T16:27:17-05:00",
          "tree_id": "bf19037498e749d87dc6132d0194cb39a957bfa9",
          "url": "https://github.com/coinbase/rest-hooks/commit/c3f09abd47faaeee0616e8ba550c0b6f1a444ee4"
        },
        "date": 1619303236132,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 78.47,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 29.58,
            "range": "±2.88%",
            "unit": "ops/sec",
            "extra": "53 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "20886f65cba2e741e1496990123f97f38852aaf4",
          "message": "fix: Delete should only be triggered on finding DELETE symbol (#770)",
          "timestamp": "2021-04-24T21:55:31-07:00",
          "tree_id": "c3ed03c8ba52390d905e91720a762aa51c775321",
          "url": "https://github.com/coinbase/rest-hooks/commit/20886f65cba2e741e1496990123f97f38852aaf4"
        },
        "date": 1619326664410,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 76.4,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.07,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "05cd4da122d9f77eb917fc06dcf6a82d39e13b6f",
          "message": "internal: publish\n\n - @rest-hooks/core@1.1.1\n - @rest-hooks/endpoint@1.1.1\n - @rest-hooks/normalizr@6.1.1\n - rest-hooks@5.0.22",
          "timestamp": "2021-04-25T00:04:29-05:00",
          "tree_id": "b5d513b7ea88148465e7825a8d7739a01e6fad65",
          "url": "https://github.com/coinbase/rest-hooks/commit/05cd4da122d9f77eb917fc06dcf6a82d39e13b6f"
        },
        "date": 1619330660993,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.1,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.66,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7978a77ee87ebc929ccdef3bbbf73f1bd8a74cb5",
          "message": "internal: bump redux in /packages/normalizr/examples/redux (#802)\n\nBumps [redux](https://github.com/reduxjs/redux) from 4.0.5 to 4.1.0.\r\n- [Release notes](https://github.com/reduxjs/redux/releases)\r\n- [Changelog](https://github.com/reduxjs/redux/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/reduxjs/redux/compare/v4.0.5...v4.1.0)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-05-07T12:38:11-07:00",
          "tree_id": "be07f7ca867a250949654ab225c323288a836e00",
          "url": "https://github.com/coinbase/rest-hooks/commit/7978a77ee87ebc929ccdef3bbbf73f1bd8a74cb5"
        },
        "date": 1620416427897,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 74.46,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.03,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "50 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "92df4efd10c9e76fd7fdf2d6112b04198ec3803c",
          "message": "internal: bump inquirer in /packages/normalizr/examples/redux (#801)\n\nBumps [inquirer](https://github.com/SBoudrias/Inquirer.js) from 6.5.2 to 8.0.0.\r\n- [Release notes](https://github.com/SBoudrias/Inquirer.js/releases)\r\n- [Commits](https://github.com/SBoudrias/Inquirer.js/compare/inquirer@6.5.2...inquirer@8.0.0)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-05-07T13:44:09-07:00",
          "tree_id": "37d10533cb3550a1ba2d84f790bdea92d1113bbd",
          "url": "https://github.com/coinbase/rest-hooks/commit/92df4efd10c9e76fd7fdf2d6112b04198ec3803c"
        },
        "date": 1620420390149,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 79.19,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 30.99,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "55 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4387aeb8f050b54a2059bc21f1060a49f539e4f6",
          "message": "enhance: Remove dependency on fromJS() from denormalize (#805)\n\n* enhance: Remove dependency on fromJS() from denormalize\r\n\r\n* fix: hasOwnProperty",
          "timestamp": "2021-05-08T21:07:28-07:00",
          "tree_id": "9f31aba810f6b4376f700d5eda7d28685b1cb64b",
          "url": "https://github.com/coinbase/rest-hooks/commit/4387aeb8f050b54a2059bc21f1060a49f539e4f6"
        },
        "date": 1620533389074,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 66.03,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.65,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b86d1031e0d9f3935a6f38d2b38ffc1c1078cbf9",
          "message": "internal(pkg): bump prettier from 2.2.1 to 2.3.0 (#808)\n\n* internal(pkg): bump prettier from 2.2.1 to 2.3.0\r\n\r\nBumps [prettier](https://github.com/prettier/prettier) from 2.2.1 to 2.3.0.\r\n- [Release notes](https://github.com/prettier/prettier/releases)\r\n- [Changelog](https://github.com/prettier/prettier/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/prettier/prettier/compare/2.2.1...2.3.0)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* internal: lint updates\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-05-15T19:17:17-07:00",
          "tree_id": "24e6b16c7747a09e4a0f0df3b9ef8b16a229f392",
          "url": "https://github.com/coinbase/rest-hooks/commit/b86d1031e0d9f3935a6f38d2b38ffc1c1078cbf9"
        },
        "date": 1621131662469,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 72.36,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.32,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "47 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "18a805d3b6990beadf5426ce28448fd9ee47ad9a",
          "message": "enhance: Simplify normalize addEntity function (#820)\n\nBREAKING CHANGE: normalize arg addEntity is now addEntity(schema,\r\nprocessed, id)",
          "timestamp": "2021-05-16T16:05:34-07:00",
          "tree_id": "aa37b11a0381778093a84e0ad4ff9ded9aed97b3",
          "url": "https://github.com/coinbase/rest-hooks/commit/18a805d3b6990beadf5426ce28448fd9ee47ad9a"
        },
        "date": 1621206484570,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 71.52,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.69,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "7ed918973d3410b7d21b32187049470d081816fb",
          "message": "internal: publish\n\n - @rest-hooks/core@1.2.0\n - @rest-hooks/endpoint@1.1.2\n - @rest-hooks/experimental@0.2.0\n - @rest-hooks/hooks@1.2.0\n - @rest-hooks/legacy@2.0.7\n - @rest-hooks/normalizr@7.0.0\n - rest-hooks@5.1.0\n - @rest-hooks/rest@2.1.2\n - @rest-hooks/test@4.1.4\n - @rest-hooks/use-enhanced-reducer@1.0.7",
          "timestamp": "2021-05-23T23:05:13-05:00",
          "tree_id": "575ba9a9d1124a6968a62acf111caa4cb4f42553",
          "url": "https://github.com/coinbase/rest-hooks/commit/7ed918973d3410b7d21b32187049470d081816fb"
        },
        "date": 1621830217963,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 73.82,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.6,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "52 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "79484679a7ae522e56f60d3710ffd23e27ca7108",
          "message": "internal: bump inquirer in /packages/normalizr/examples/redux (#851)\n\nBumps [inquirer](https://github.com/SBoudrias/Inquirer.js) from 8.0.0 to 8.1.0.\r\n- [Release notes](https://github.com/SBoudrias/Inquirer.js/releases)\r\n- [Commits](https://github.com/SBoudrias/Inquirer.js/compare/inquirer@8.0.0...inquirer@8.1.0)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-05-24T07:10:37-07:00",
          "tree_id": "c16ca631ce30d58aa7b2d32f3c268669599e49c3",
          "url": "https://github.com/coinbase/rest-hooks/commit/79484679a7ae522e56f60d3710ffd23e27ca7108"
        },
        "date": 1621865571173,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 70.59,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.27,
            "range": "±2.63%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "8f08fbe6f2fdaae40dc63c3d13081a1d2b3c97f5",
          "message": "internal: publish\n\n - @rest-hooks/core@1.2.1\n - @rest-hooks/endpoint@1.1.3\n - @rest-hooks/experimental@0.2.1\n - @rest-hooks/normalizr@7.0.1\n - rest-hooks@5.1.1",
          "timestamp": "2021-05-24T15:05:40-05:00",
          "tree_id": "96970102f1339c91210413cd673b982f217ac582",
          "url": "https://github.com/coinbase/rest-hooks/commit/8f08fbe6f2fdaae40dc63c3d13081a1d2b3c97f5"
        },
        "date": 1621887279842,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 67.66,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.06,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2c1e5cc4d61f4a7a06352fd64250ff7447b7291b",
          "message": "internal(pkg): bump typescript from 4.2.4 to 4.3.2 (#870)\n\n* internal(pkg): bump typescript from 4.2.4 to 4.3.2\n\nBumps [typescript](https://github.com/Microsoft/TypeScript) from 4.2.4 to 4.3.2.\n- [Release notes](https://github.com/Microsoft/TypeScript/releases)\n- [Commits](https://github.com/Microsoft/TypeScript/compare/v4.2.4...v4.3.2)\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\n* fix: changes\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2021-05-29T21:28:08-07:00",
          "tree_id": "512e7a94384845333be743b522cd3ffd0509d9e8",
          "url": "https://github.com/coinbase/rest-hooks/commit/2c1e5cc4d61f4a7a06352fd64250ff7447b7291b"
        },
        "date": 1622349024125,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.99,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.31,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "47 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "cfe65aa8811d9d9628abfe85a4ede305b5f1fb38",
          "message": "internal: publish\n\n - @rest-hooks/core@1.3.0\n - @rest-hooks/endpoint@1.1.4\n - @rest-hooks/experimental@0.3.0\n - @rest-hooks/normalizr@7.0.2\n - rest-hooks@5.1.2\n - @rest-hooks/test@5.0.0",
          "timestamp": "2021-05-31T16:21:46-05:00",
          "tree_id": "2d41ded9468e038fb8f19b3325d85ebe7b937bb7",
          "url": "https://github.com/coinbase/rest-hooks/commit/cfe65aa8811d9d9628abfe85a4ede305b5f1fb38"
        },
        "date": 1622496975736,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 64.35,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 24.8,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "45 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "842f6c8e3dfc27e2946f5adc1bdbef849e8794ab",
          "message": "enhance: Cache entity default instances (#883)",
          "timestamp": "2021-05-31T14:37:32-07:00",
          "tree_id": "a3ae4c5b7d39e040258d3cb4b6fc99f2196ce749",
          "url": "https://github.com/coinbase/rest-hooks/commit/842f6c8e3dfc27e2946f5adc1bdbef849e8794ab"
        },
        "date": 1622497168752,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 85.64,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 34.05,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "60 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f8f2bef411183676009c6a9df24a26d147c6d9f6",
          "message": "enhance: Improve autoimport handling in vscode (#890)",
          "timestamp": "2021-06-02T16:18:22-07:00",
          "tree_id": "2ae7364eac9c8ca0cfaa05c1b1a4ef77efb0ac73",
          "url": "https://github.com/coinbase/rest-hooks/commit/f8f2bef411183676009c6a9df24a26d147c6d9f6"
        },
        "date": 1622676022001,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.89,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.52,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "58 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "43d6dd52801229986b6181cd6720ffb8ce788bbd",
          "message": "internal: publish\n\n - @rest-hooks/core@1.4.0\n - @rest-hooks/endpoint@1.1.5\n - @rest-hooks/experimental@0.4.0\n - @rest-hooks/hooks@1.2.1\n - @rest-hooks/img@0.2.3\n - @rest-hooks/legacy@2.0.8\n - @rest-hooks/normalizr@7.0.3\n - rest-hooks@5.1.3\n - @rest-hooks/rest@2.1.3\n - @rest-hooks/test@6.0.0\n - @rest-hooks/use-enhanced-reducer@1.0.8",
          "timestamp": "2021-06-02T19:03:08-05:00",
          "tree_id": "f25d27c89250209b2693a786ceea7c491f7aac60",
          "url": "https://github.com/coinbase/rest-hooks/commit/43d6dd52801229986b6181cd6720ffb8ce788bbd"
        },
        "date": 1622679673218,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 69.63,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.69,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "51 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5ad8287fefd50637670c07252b01ea63ea05333a",
          "message": "feat: Add inferResults() (#900)",
          "timestamp": "2021-06-08T08:37:03-07:00",
          "tree_id": "ced7d3c1d3879ff243822aa67e57b1e77921c0fa",
          "url": "https://github.com/coinbase/rest-hooks/commit/5ad8287fefd50637670c07252b01ea63ea05333a"
        },
        "date": 1623166765117,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 67.05,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 26.67,
            "range": "±4.29%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d988abe063fc67c74fce12e234c9c3ffdb7cc230",
          "message": "enhance: 'module' entrypoint targets 2019 browsers (#905)",
          "timestamp": "2021-06-09T13:40:41-07:00",
          "tree_id": "5b78c44d480dab373d9f077fdda1a723e4c1ca49",
          "url": "https://github.com/coinbase/rest-hooks/commit/d988abe063fc67c74fce12e234c9c3ffdb7cc230"
        },
        "date": 1623271386746,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 63.92,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 25.44,
            "range": "±3.56%",
            "unit": "ops/sec",
            "extra": "47 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "6316c051a883ff5670fd90f3f5185f04b9a7889c",
          "message": "internal: publish\n\n - @rest-hooks/core@1.4.1\n - @rest-hooks/endpoint@1.1.6\n - @rest-hooks/experimental@0.5.0\n - @rest-hooks/hooks@1.2.2\n - @rest-hooks/img@0.2.4\n - @rest-hooks/legacy@2.0.9\n - @rest-hooks/normalizr@7.1.0\n - rest-hooks@5.1.4\n - @rest-hooks/rest@2.1.4\n - @rest-hooks/test@6.0.1\n - @rest-hooks/use-enhanced-reducer@1.0.9",
          "timestamp": "2021-06-09T15:52:48-05:00",
          "tree_id": "0bdbbf716d22144eb5b08f01083d3e9c7328f753",
          "url": "https://github.com/coinbase/rest-hooks/commit/6316c051a883ff5670fd90f3f5185f04b9a7889c"
        },
        "date": 1623272309370,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 89.47,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.55,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "59 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bd21d8ce0d004a56e6853918d9fb9ecaa2c730a8",
          "message": "feat: Normalize merges entities, entitymeta, indexes (#915)",
          "timestamp": "2021-06-12T17:10:51-07:00",
          "tree_id": "46b8316acc383a96d2e429e8318854aec056d412",
          "url": "https://github.com/coinbase/rest-hooks/commit/bd21d8ce0d004a56e6853918d9fb9ecaa2c730a8"
        },
        "date": 1623543208686,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 51.67,
            "range": "±5.09%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 23.43,
            "range": "±3.81%",
            "unit": "ops/sec",
            "extra": "43 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "18225300621058e9e692c480e31b7da7423ea8e5",
          "message": "internal: publish\n\n - @rest-hooks/core@1.5.0\n - @rest-hooks/endpoint@1.2.0\n - @rest-hooks/experimental@0.6.0\n - @rest-hooks/hooks@1.3.0\n - @rest-hooks/img@0.3.0\n - @rest-hooks/legacy@2.1.0\n - @rest-hooks/normalizr@7.2.0\n - rest-hooks@5.2.0\n - @rest-hooks/test@6.1.0\n - @rest-hooks/use-enhanced-reducer@1.1.0",
          "timestamp": "2021-06-12T20:02:37-05:00",
          "tree_id": "50ef8ed8752936b454d47de69135e3ed9aa0f0d4",
          "url": "https://github.com/coinbase/rest-hooks/commit/18225300621058e9e692c480e31b7da7423ea8e5"
        },
        "date": 1623555884235,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 56.59,
            "range": "±2.61%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 22.86,
            "range": "±5.24%",
            "unit": "ops/sec",
            "extra": "42 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e0919c2aa523e0a2fc8c6935dcf38953d723527e",
          "message": "feat: Add Entity.expiresAt() - entity TTL configuration  (#920)",
          "timestamp": "2021-06-14T15:26:07-07:00",
          "tree_id": "79f280eccbb3addcc9b8b448a245257ce1b4a05d",
          "url": "https://github.com/coinbase/rest-hooks/commit/e0919c2aa523e0a2fc8c6935dcf38953d723527e"
        },
        "date": 1623709685538,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 62.71,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.26,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "57 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "ed74cd84ffa8883cc87230da2f6a7afb6875115d",
          "message": "internal: publish\n\n - @rest-hooks/core@1.5.1\n - @rest-hooks/endpoint@1.2.1\n - @rest-hooks/experimental@0.7.0\n - @rest-hooks/legacy@2.2.0\n - @rest-hooks/normalizr@7.3.0\n - rest-hooks@5.3.0",
          "timestamp": "2021-06-15T21:18:50-05:00",
          "tree_id": "c928187271e6269bd7baf7f22acccfef2c709f5f",
          "url": "https://github.com/coinbase/rest-hooks/commit/ed74cd84ffa8883cc87230da2f6a7afb6875115d"
        },
        "date": 1623810383143,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 58.32,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 34.66,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "61 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e68b0f955e6fab5a84b07012a84cfd6aef9d35dd",
          "message": "enhance: Improve normalization speed (#933)",
          "timestamp": "2021-06-18T00:41:01-05:00",
          "tree_id": "f489b93af1559c5b46860e91c27f3a7c0e6b8676",
          "url": "https://github.com/coinbase/rest-hooks/commit/e68b0f955e6fab5a84b07012a84cfd6aef9d35dd"
        },
        "date": 1623994997843,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 66.09,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 27.07,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "49 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b236b9137043d12de5a07bfd5583b5cb2d15f6cd",
          "message": "feat: Add Entity.validate() (#934)",
          "timestamp": "2021-06-19T10:46:01-07:00",
          "tree_id": "99169df6eab22e1b0904814371f43c4e4dff2f87",
          "url": "https://github.com/coinbase/rest-hooks/commit/b236b9137043d12de5a07bfd5583b5cb2d15f6cd"
        },
        "date": 1624124882517,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.63,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.89,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "57 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "36abc2165ec756e3ae9d3796eae004686af708e0",
          "message": "internal: publish\n\n - @rest-hooks/core@1.5.2\n - @rest-hooks/endpoint@1.2.2\n - @rest-hooks/experimental@0.8.0\n - @rest-hooks/normalizr@7.4.0\n - rest-hooks@5.3.1",
          "timestamp": "2021-06-19T13:30:26-05:00",
          "tree_id": "011405cf0695566a5290cad679767d37579e41f7",
          "url": "https://github.com/coinbase/rest-hooks/commit/36abc2165ec756e3ae9d3796eae004686af708e0"
        },
        "date": 1624129846384,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 56.47,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 23.63,
            "range": "±3.25%",
            "unit": "ops/sec",
            "extra": "43 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "75ebdfe641ccf57fca35c44a94077e4a314e44d7",
          "message": "enhance: Entities normalize to POJO (#940)\n\nBREAKING CHANGE:\r\n- fromJS() -> process() to customize init\r\n- normalize results in POJO rather than instances\r\n- FlatEntity, SimpleRecord removed (use @rest-hooks/legacy)\r\n- peerDep @rest-hooks/endpoint > 2",
          "timestamp": "2021-06-20T14:08:21-07:00",
          "tree_id": "a4085fc8c7028a0e88ad9cc108ac1648a9ec3123",
          "url": "https://github.com/coinbase/rest-hooks/commit/75ebdfe641ccf57fca35c44a94077e4a314e44d7"
        },
        "date": 1624223453642,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 71.84,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 35.92,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "48 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43f687eb72b982eb95d1bf115f74103c9a286963",
          "message": "internal: bump inquirer in /packages/normalizr/examples/redux (#946)\n\nBumps [inquirer](https://github.com/SBoudrias/Inquirer.js) from 8.1.0 to 8.1.1.\n- [Release notes](https://github.com/SBoudrias/Inquirer.js/releases)\n- [Commits](https://github.com/SBoudrias/Inquirer.js/compare/inquirer@8.1.0...inquirer@8.1.1)\n\n---\nupdated-dependencies:\n- dependency-name: inquirer\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-06-21T02:23:10-05:00",
          "tree_id": "6ae192bcc51807fb661ef91c9f6960adc25d3e80",
          "url": "https://github.com/coinbase/rest-hooks/commit/43f687eb72b982eb95d1bf115f74103c9a286963"
        },
        "date": 1624260835453,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 67.28,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.31,
            "range": "±3.27%",
            "unit": "ops/sec",
            "extra": "60 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6d614f94c0f9d3159074faca569cdaac4dce6d44",
          "message": "internal: Hoist and fix normalizr examples (#948)",
          "timestamp": "2021-06-21T20:53:49-07:00",
          "tree_id": "60b752f58abded556fdcbe1ac125bc5890ed543a",
          "url": "https://github.com/coinbase/rest-hooks/commit/6d614f94c0f9d3159074faca569cdaac4dce6d44"
        },
        "date": 1624334182712,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.64,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.38,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "56 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7bb49c754ba22434c268a53aaabba0911aa63d91",
          "message": "internal: Move benchmark to /examples in workspace (#949)",
          "timestamp": "2021-06-21T21:58:00-07:00",
          "tree_id": "29b3f65c6677a9eef826759f0a792dc1f1eda090",
          "url": "https://github.com/coinbase/rest-hooks/commit/7bb49c754ba22434c268a53aaabba0911aa63d91"
        },
        "date": 1624338075636,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 73.97,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 38.22,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 41.12,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "receiveLong",
            "value": 74.22,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "80c4f90cc36e26297751fa8d5ee710f819d169b3",
          "message": "docs: Update links (#954)",
          "timestamp": "2021-06-21T22:06:56-07:00",
          "tree_id": "afbaf8302dc2f99e79255403d0d737416936b9a7",
          "url": "https://github.com/coinbase/rest-hooks/commit/80c4f90cc36e26297751fa8d5ee710f819d169b3"
        },
        "date": 1624338607768,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 78.99,
            "range": "±2.64%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.31,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.11,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 76.43,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dc7fcfec24c30d5f405d24ccc1828620d837ea6b",
          "message": "docs: Add doc links to jsdocs (#966)",
          "timestamp": "2021-06-24T19:56:21-07:00",
          "tree_id": "ac06561aea18e82767d5c0eb6fbbaec1c972f237",
          "url": "https://github.com/coinbase/rest-hooks/commit/dc7fcfec24c30d5f405d24ccc1828620d837ea6b"
        },
        "date": 1624589924410,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 95.68,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 48.23,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 56.01,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.95,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "06023760266ed572697605c45bd7e271406badd3",
          "message": "enhance: Remove extraneous hack for expiresAt (#970)\n\nBREAKING CHANGE: Rest Hooks 4 invalidIfStale behavior completely removed",
          "timestamp": "2021-06-27T09:42:05-07:00",
          "tree_id": "3fde4c5c810eda367165ef13f0a7f3d08cf1dc75",
          "url": "https://github.com/coinbase/rest-hooks/commit/06023760266ed572697605c45bd7e271406badd3"
        },
        "date": 1624812307028,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 75.9,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.64,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 42.93,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "receiveLong",
            "value": 74.18,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "63 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f63ce830d0c1702736f6d2cd27e25c302b686ea2",
          "message": "internal: Fix some test async behavior (#973)",
          "timestamp": "2021-06-28T01:38:39-05:00",
          "tree_id": "f195d3db101654f7b2f876fafe474eb15cfc3b44",
          "url": "https://github.com/coinbase/rest-hooks/commit/f63ce830d0c1702736f6d2cd27e25c302b686ea2"
        },
        "date": 1624862494594,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 88,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.99,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 54.86,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 88.82,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "64 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d0047af65c1afe3ac0ce88689f7673bad633b08e",
          "message": "internal(pkg): Upgrade jest to 27 (#867)",
          "timestamp": "2021-06-27T23:50:16-07:00",
          "tree_id": "a19e6f9e546e1441bf8973b1251875e778554208",
          "url": "https://github.com/coinbase/rest-hooks/commit/d0047af65c1afe3ac0ce88689f7673bad633b08e"
        },
        "date": 1624863182443,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 74.37,
            "range": "±2.34%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.61,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 42.5,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "receiveLong",
            "value": 74.99,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "836f05b407b5ac96c8f094e652221aa5a95300b0",
          "message": "feat: Add errorPolicy to endpoint options (#971)\n\nBREAKING CHANGE:\r\n- Removed: SyntheticError (untriggerable since https://github.com/coinbase/rest-hooks/pull/938)\r\n- @rest-hooks/rest: 500s are 'soft', else 'hard'\r\n- PollingSubscription: any errors are 'soft'\r\n- @rest-hooks/endpoint: no default errorPolicy, therefore all errors are\r\n'hard'",
          "timestamp": "2021-06-27T23:57:01-07:00",
          "tree_id": "24c25532a12df1ffa3321e2667b95a645720df8b",
          "url": "https://github.com/coinbase/rest-hooks/commit/836f05b407b5ac96c8f094e652221aa5a95300b0"
        },
        "date": 1624863612450,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 71.04,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.72,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 42.58,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "receiveLong",
            "value": 70.66,
            "range": "±3.39%",
            "unit": "ops/sec",
            "extra": "63 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7e9d39f15b4b321352ece0caddb93e2c414df8ae",
          "message": "feat: Use 'exports' package.json member (#955)\n\nBREAKING CHANGE:\r\n* Importing directly from hidden files is no longer supported\r\n* Node>=12",
          "timestamp": "2021-06-30T07:16:49-07:00",
          "tree_id": "27bae22eb9d631217496a96a6a9cb9943910ce1d",
          "url": "https://github.com/coinbase/rest-hooks/commit/7e9d39f15b4b321352ece0caddb93e2c414df8ae"
        },
        "date": 1625062788815,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 70.97,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.96,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.93,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 72.22,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f05481410cf8daa2101d4dbda826e56ad10ec723",
          "message": "enhance: Different babel targets for cjs and umd builds (#989)",
          "timestamp": "2021-06-30T08:40:17-07:00",
          "tree_id": "748c54f542d60ae821c733334ae1cd9dca9a88bb",
          "url": "https://github.com/coinbase/rest-hooks/commit/f05481410cf8daa2101d4dbda826e56ad10ec723"
        },
        "date": 1625067817780,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84.18,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.88,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 49.79,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 86,
            "range": "±2.97%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dc95f9dbad20d5740218c52c906596b6a3d6eae4",
          "message": "enhance: Remove 'fallback' package.json exports (#992)",
          "timestamp": "2021-06-30T08:58:52-07:00",
          "tree_id": "aa051620e96d04411d0cf7ca74058e872ef67877",
          "url": "https://github.com/coinbase/rest-hooks/commit/dc95f9dbad20d5740218c52c906596b6a3d6eae4"
        },
        "date": 1625068914978,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 88.19,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.27,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 46.16,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "receiveLong",
            "value": 88.28,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "2dba027e192dc7cf2f4cdf66b946a9b10fe07120",
          "message": "internal(fix): yarn.lock",
          "timestamp": "2021-06-30T11:09:09-05:00",
          "tree_id": "f75bb2b58cf95601f16b77907f51c3d8084cfe19",
          "url": "https://github.com/coinbase/rest-hooks/commit/2dba027e192dc7cf2f4cdf66b946a9b10fe07120"
        },
        "date": 1625069972890,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 80.33,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.07,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.96,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 80.55,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f84f51e0f3b62832945e75d0e241dba59b6623c",
          "message": "fix: module build import path (#994)",
          "timestamp": "2021-06-30T13:38:52-07:00",
          "tree_id": "1f05be45fb1f3049403e247fb74cb8b0a100db6e",
          "url": "https://github.com/coinbase/rest-hooks/commit/1f84f51e0f3b62832945e75d0e241dba59b6623c"
        },
        "date": 1625085717459,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 88.66,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.98,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.68,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 88.57,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "dc7229f6f020b09a8f28449bfeb3074ba18a8cb6",
          "message": "internal: publish\n\n - @rest-hooks/core@2.0.0-beta.1\n - @rest-hooks/legacy@3.0.0-beta.1\n - rest-hooks@6.0.0-beta.1",
          "timestamp": "2021-06-30T15:45:34-05:00",
          "tree_id": "12bbbbdd7bdeb8cfd7a7149ff690a3c2981f7cd0",
          "url": "https://github.com/coinbase/rest-hooks/commit/dc7229f6f020b09a8f28449bfeb3074ba18a8cb6"
        },
        "date": 1625086703497,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 86.53,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.8,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.98,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLong",
            "value": 88.14,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6e459377e3f0d90d1832c0173358c3c73f253831",
          "message": "enhance: Use optional chaining (#1003)",
          "timestamp": "2021-07-01T23:37:21-05:00",
          "tree_id": "1b833fa061e784642f00d2b9aeafec0ae43b0f51",
          "url": "https://github.com/coinbase/rest-hooks/commit/6e459377e3f0d90d1832c0173358c3c73f253831"
        },
        "date": 1625200842440,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 86.55,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.04,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 46.15,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "receiveLong",
            "value": 86.66,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "377391fa31ffe651f67e547aef13c5aa7bd5e702",
          "message": "feat: Allow normalizing entities that are just ids (#1002)",
          "timestamp": "2021-07-02T09:48:55-05:00",
          "tree_id": "05d644ce82332cf23c79948685ddb65111dd3e43",
          "url": "https://github.com/coinbase/rest-hooks/commit/377391fa31ffe651f67e547aef13c5aa7bd5e702"
        },
        "date": 1625237525322,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84.59,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.37,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.15,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 83.48,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "c40d47d9cd6bf57a04dfe7703c33fb45b5268f03",
          "message": "internal: Merge 5-maintenance",
          "timestamp": "2021-07-10T22:04:57-05:00",
          "tree_id": "fd3675338653904b1a09b822c79ee13c8814b531",
          "url": "https://github.com/coinbase/rest-hooks/commit/c40d47d9cd6bf57a04dfe7703c33fb45b5268f03"
        },
        "date": 1626018929072,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 89.45,
            "range": "±3.33%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.81,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.88,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "receiveLong",
            "value": 89.58,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2a2fe3a27a57e5ac45f95e9f65ce81751f898f12",
          "message": "enhance: schema not needed in action (#1029)",
          "timestamp": "2021-07-11T22:31:28-07:00",
          "tree_id": "245f8a30ae1feb7b6a6742e63a2ef4d886f2a73a",
          "url": "https://github.com/coinbase/rest-hooks/commit/2a2fe3a27a57e5ac45f95e9f65ce81751f898f12"
        },
        "date": 1626068078683,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 75.58,
            "range": "±3.80%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.27,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.29,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 75.85,
            "range": "±3.50%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bbb69e9faaa523c46a0e309a44e0fd52f0ce91aa",
          "message": "feat: FixtureEndpoint & renderRestHook resolverFixtures (#1027)",
          "timestamp": "2021-07-11T22:38:28-07:00",
          "tree_id": "51e98d6b1be461cb80c18f1c228a6b2c48788e0c",
          "url": "https://github.com/coinbase/rest-hooks/commit/bbb69e9faaa523c46a0e309a44e0fd52f0ce91aa"
        },
        "date": 1626068513311,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84.56,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.81,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 43.85,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 80.37,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "9c80a807b801979626374b879f5a06bd3545a8ec",
          "message": "internal: publish\n\n - benchmark@0.0.1-beta.1\n - normalizr-github-example@0.0.1-beta.1\n - normalizr-redux-example@0.0.1-beta.1\n - normalizr-relationships@0.0.1-beta.1\n - todo-app@0.1.0\n - @rest-hooks/core@2.0.0-beta.2\n - @rest-hooks/endpoint@2.0.0-beta.1\n - @rest-hooks/normalizr@8.0.0-beta.1\n - rest-hooks@6.0.0-beta.2\n - @rest-hooks/test@7.0.0-beta.1",
          "timestamp": "2021-07-12T02:04:37-05:00",
          "tree_id": "602f33a11c43da34e833ac72a9025eefbf1a33be",
          "url": "https://github.com/coinbase/rest-hooks/commit/9c80a807b801979626374b879f5a06bd3545a8ec"
        },
        "date": 1626103759283,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 97.04,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 49.05,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 54.62,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 98.37,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8c3b3956dee5a09f773faab6be1e85328a1e97bd",
          "message": "internal: Don't leave hanging promise in test (#1411)",
          "timestamp": "2021-10-18T21:06:52-07:00",
          "tree_id": "e0aad86f7d73337d3274070b88a1eb9e6b66ee5e",
          "url": "https://github.com/coinbase/rest-hooks/commit/8c3b3956dee5a09f773faab6be1e85328a1e97bd"
        },
        "date": 1634616631372,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.81,
            "range": "±4.03%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 34.31,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 36.38,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLong",
            "value": 78.8,
            "range": "±3.22%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8d3f7f973155680b2d52ed3f2e2758327b76d356",
          "message": "enhance: Use const enums for ExpiryStatus (#1417)",
          "timestamp": "2021-10-19T17:18:41-07:00",
          "tree_id": "23f02de551c858b7574990f336591d1bf36bd8b3",
          "url": "https://github.com/coinbase/rest-hooks/commit/8d3f7f973155680b2d52ed3f2e2758327b76d356"
        },
        "date": 1634689335253,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 81.84,
            "range": "±4.04%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.4,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 38.73,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "receiveLong",
            "value": 82.54,
            "range": "±3.85%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "650d00756b3d3c6979187ea9382bfe7d228ad187",
          "message": "internal: publish\n\n - @rest-hooks/core@3.0.2\n - rest-hooks@6.1.6",
          "timestamp": "2021-10-19T19:19:34-05:00",
          "tree_id": "308a25bb188fd08f12cef72a387a22c9c0cb1249",
          "url": "https://github.com/coinbase/rest-hooks/commit/650d00756b3d3c6979187ea9382bfe7d228ad187"
        },
        "date": 1634692111532,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 81.52,
            "range": "±2.97%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.96,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 35.99,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "receiveLong",
            "value": 82.89,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2039d2c4bf280b5a3c570824c25af3a4cc39af0d",
          "message": "feat: useSuspense, useFetch, remaining hooks typed for Endpoint (#1440)",
          "timestamp": "2021-10-24T10:35:39-07:00",
          "tree_id": "b7e38f72a39ffffedbb85c38ca8f1934bd1cff04",
          "url": "https://github.com/coinbase/rest-hooks/commit/2039d2c4bf280b5a3c570824c25af3a4cc39af0d"
        },
        "date": 1635097191126,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 76.11,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.42,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 35.22,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "receiveLong",
            "value": 74.85,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "62 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "0753329769728df2e69746a83f9a60e0a5463e38",
          "message": "internal: publish\n\n - @rest-hooks/core@3.1.0-beta.0\n - @rest-hooks/legacy@4.1.0-beta.0\n - rest-hooks@6.2.0-beta.0",
          "timestamp": "2021-10-24T16:48:45-05:00",
          "tree_id": "ae758ec2116fe6c5e175e55b2e6e1f503935ef40",
          "url": "https://github.com/coinbase/rest-hooks/commit/0753329769728df2e69746a83f9a60e0a5463e38"
        },
        "date": 1635113118774,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.4,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 29.68,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 31.51,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "receiveLong",
            "value": 79.73,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "99f9a6d13b970eba398d869acf60f6776e62939e",
          "message": "enhance: Dispatch new receive action if new fetch triggered it (#1455)",
          "timestamp": "2021-10-29T16:01:24-07:00",
          "tree_id": "9ba9e30e6a869e45a56c4031213140d865bc0cc3",
          "url": "https://github.com/coinbase/rest-hooks/commit/99f9a6d13b970eba398d869acf60f6776e62939e"
        },
        "date": 1635548725962,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 79.8,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.96,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 35.73,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "receiveLong",
            "value": 82.42,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "c16807dc67d473d3f7362a035d2390a87dc2c9e4",
          "message": "internal: release",
          "timestamp": "2021-10-29T18:53:39-05:00",
          "tree_id": "572d60101582a69d9488b2fe4216d4d2d8fa1459",
          "url": "https://github.com/coinbase/rest-hooks/commit/c16807dc67d473d3f7362a035d2390a87dc2c9e4"
        },
        "date": 1635552316250,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.86,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.68,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 34.93,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "receiveLong",
            "value": 79.54,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c5ac9e7a1d66f57ddcee5c343b239cf2d6d5f782",
          "message": "fix: useFetcher() work with zero argument Endpoint (#1514)",
          "timestamp": "2021-11-23T08:23:18-08:00",
          "tree_id": "265fbdeac13deb571a209e09b8dbf315b927ef58",
          "url": "https://github.com/coinbase/rest-hooks/commit/c5ac9e7a1d66f57ddcee5c343b239cf2d6d5f782"
        },
        "date": 1637684819154,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 97.18,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.81,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.07,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 95.45,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f30e4ec0264101d36c29e9f1715f8fb01309f287",
          "message": "internal: Remove promise from action snapshots in tests (#1520)",
          "timestamp": "2021-11-24T15:06:22-08:00",
          "tree_id": "44560795fbb4bfc2a833f6dbfc6f2d16425168ba",
          "url": "https://github.com/coinbase/rest-hooks/commit/f30e4ec0264101d36c29e9f1715f8fb01309f287"
        },
        "date": 1637795407548,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 70.31,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 30.45,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 31.96,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "receiveLong",
            "value": 70.34,
            "range": "±3.94%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "a2251102d7d0a3179e8925634c61ea3fef840a88",
          "message": "internal: publish\n\n - @rest-hooks/core@3.1.0-beta.2\n - @rest-hooks/endpoint@2.1.0\n - rest-hooks@6.2.0-beta.2",
          "timestamp": "2021-11-26T16:35:43-06:00",
          "tree_id": "c61e61694a1ba8ee973cfb465b1f50c5ddf9f3c5",
          "url": "https://github.com/coinbase/rest-hooks/commit/a2251102d7d0a3179e8925634c61ea3fef840a88"
        },
        "date": 1637967820541,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 75.8,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.2,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 34.14,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 74.29,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "63 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7a99fae20ee9abf5f2121c1f1719bdcce3e78d98",
          "message": "feat: Add endpoint.optimisticUpdater (#1616)\n\nCo-authored-by: Jordan Harband <ljharb@gmail.com>",
          "timestamp": "2022-01-23T15:03:34-08:00",
          "tree_id": "bde8c7fbaa3607bf5781820c2dd3803d933eb3fd",
          "url": "https://github.com/coinbase/rest-hooks/commit/7a99fae20ee9abf5f2121c1f1719bdcce3e78d98"
        },
        "date": 1642979181046,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 104,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.09,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 46.21,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "receiveLong",
            "value": 107,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d52b9f0a70d48a8512cfb9e4d4515d212941dfd7",
          "message": "internal: publish pre-release (#1643)",
          "timestamp": "2022-01-23T15:30:43-08:00",
          "tree_id": "91589434c30e047a98f7f2514e548e591be63b47",
          "url": "https://github.com/coinbase/rest-hooks/commit/d52b9f0a70d48a8512cfb9e4d4515d212941dfd7"
        },
        "date": 1642980848526,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.14,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.09,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 34.6,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 80.41,
            "range": "±2.64%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2fd93f235074d134200e81ddb16792647b3cffad",
          "message": "enhance: Fetch resolution only removes the optimistic update corresponding to that fetch (#1653)",
          "timestamp": "2022-01-30T22:14:15-08:00",
          "tree_id": "9bd022bdd0b6a516c3bc304e1e62ddc7b9e81ad3",
          "url": "https://github.com/coinbase/rest-hooks/commit/2fd93f235074d134200e81ddb16792647b3cffad"
        },
        "date": 1643609815164,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 100,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 41.46,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.86,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 102,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "fbb71bd24b4230ac1e94ef6f6bec9bc856ef6306",
          "message": "internal: publish\n\n - @rest-hooks/core: 3.1.0-beta.3 => 3.1.0-beta.4\n - @rest-hooks/endpoint: 2.2.0-beta.0 => 2.2.0-beta.1\n - rest-hooks: 6.2.0-beta.3 => 6.2.0-beta.4",
          "timestamp": "2022-01-31T00:38:14-06:00",
          "tree_id": "e0cf65c72390a6790220c9153f9fcff3fe8874b3",
          "url": "https://github.com/coinbase/rest-hooks/commit/fbb71bd24b4230ac1e94ef6f6bec9bc856ef6306"
        },
        "date": 1643611667022,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 97.37,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.57,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.72,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.88,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ee7b4ca6fbe5ccea4ea32a52885bf9fe64cbb947",
          "message": "docs: Use stackblitz for demos (#1699)",
          "timestamp": "2022-02-14T10:42:04-08:00",
          "tree_id": "b239aad0228d2011663877b81ff1ab6507c01bfc",
          "url": "https://github.com/coinbase/rest-hooks/commit/ee7b4ca6fbe5ccea4ea32a52885bf9fe64cbb947"
        },
        "date": 1644864313353,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 76.21,
            "range": "±4.02%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.35,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 36.44,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "receiveLong",
            "value": 77.7,
            "range": "±3.78%",
            "unit": "ops/sec",
            "extra": "66 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "aced2c193d048d724a1ec09e7897edb45e483292",
          "message": "internal: publish\n\n - @rest-hooks/core@3.1.0-beta.5\n - @rest-hooks/endpoint@2.2.0-beta.2\n - @rest-hooks/hooks@3.0.0\n - rest-hooks@6.2.0-beta.5\n - @rest-hooks/rest@3.0.2\n - @rest-hooks/test@7.2.0",
          "timestamp": "2022-02-14T21:31:52-06:00",
          "tree_id": "fad67213ef605b301079dd5ce58b9ca790e6143b",
          "url": "https://github.com/coinbase/rest-hooks/commit/aced2c193d048d724a1ec09e7897edb45e483292"
        },
        "date": 1644896403376,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 66.71,
            "range": "±2.64%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 29.61,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 31.65,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "receiveLong",
            "value": 67.46,
            "range": "±5.48%",
            "unit": "ops/sec",
            "extra": "64 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "28fab739952aae6819ddfcaafe9fcb3c893f8d2f",
          "message": "fix: InvalidIfStale should be respected in no-schema endpoints (#1724)",
          "timestamp": "2022-02-20T16:16:32-08:00",
          "tree_id": "94be4e37c2b38583ca3084ecfaaeab14a81c016e",
          "url": "https://github.com/coinbase/rest-hooks/commit/28fab739952aae6819ddfcaafe9fcb3c893f8d2f"
        },
        "date": 1645402749232,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 105,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.5,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 46.69,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "receiveLong",
            "value": 103,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b98dcfdb56bfc947829e2eead4b6a785dfe3965d",
          "message": "fix: Expiry defaults for useSuspense() should match useResource() (#1738)",
          "timestamp": "2022-02-25T15:06:48-08:00",
          "tree_id": "6a1be71c28fe0064838a2c5fc16c77a1f03212c3",
          "url": "https://github.com/coinbase/rest-hooks/commit/b98dcfdb56bfc947829e2eead4b6a785dfe3965d"
        },
        "date": 1645830561330,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 95.62,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 38.56,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 42.8,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 95.13,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "cd83a427cd17a940cab0018e18a7bc949b7110ed",
          "message": "internal: publish\n\n - @rest-hooks/core@3.1.0-beta.6\n - @rest-hooks/experimental@3.3.0\n - @rest-hooks/img@0.6.0\n - rest-hooks@6.2.0-beta.6\n - @rest-hooks/rest@3.0.3",
          "timestamp": "2022-02-25T18:08:47-06:00",
          "tree_id": "d27c9bb42f36570c9e704fd20136ca508f24f90e",
          "url": "https://github.com/coinbase/rest-hooks/commit/cd83a427cd17a940cab0018e18a7bc949b7110ed"
        },
        "date": 1645834991464,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 89.97,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 36.71,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 39.49,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "receiveLong",
            "value": 85.37,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3a68907882f35c3806b05244e68d61e503b91d0f",
          "message": "enhance: Use BackupBoundary to help debug setup issues",
          "timestamp": "2022-02-28T00:02:26-06:00",
          "tree_id": "91114238b04f4afcfe718f992497e0cf1425c7c2",
          "url": "https://github.com/coinbase/rest-hooks/commit/3a68907882f35c3806b05244e68d61e503b91d0f"
        },
        "date": 1646028299029,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 102,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.93,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.81,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "receiveLong",
            "value": 102,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e25158a28c5bdc90aeb7fa6e7ca2c43580f6f88f",
          "message": "fix: lastReset should serialize (#1745)",
          "timestamp": "2022-02-27T23:04:58-08:00",
          "tree_id": "059fd6be89cb8cd13c19f725f593c83a50128af7",
          "url": "https://github.com/coinbase/rest-hooks/commit/e25158a28c5bdc90aeb7fa6e7ca2c43580f6f88f"
        },
        "date": 1646032061543,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 96.57,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.07,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 43.96,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.19,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "9a0883604fa5b9ee17fd1585f4f2c4194881c93e",
          "message": "internal: publish",
          "timestamp": "2022-02-28T21:43:44-06:00",
          "tree_id": "c1c14bedb48a9a94f75df1dc3ebba10d30db3ba7",
          "url": "https://github.com/coinbase/rest-hooks/commit/9a0883604fa5b9ee17fd1585f4f2c4194881c93e"
        },
        "date": 1646106711206,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 90.58,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 36.74,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 39.59,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "receiveLong",
            "value": 90.73,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d1cd66ea2677868aba402d362b9896dffc24462",
          "message": "enhance: optimisticUpdater -> getOptimisticResponse (#1769)\n\nBREAKING CHANGE: Rename optimisticUpdater -> getOptimisticResponse",
          "timestamp": "2022-03-06T22:41:51-08:00",
          "tree_id": "927a7402680eec8f5e52c7d1accbb1759a094b8e",
          "url": "https://github.com/coinbase/rest-hooks/commit/4d1cd66ea2677868aba402d362b9896dffc24462"
        },
        "date": 1646635534498,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 79.26,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.36,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 35.77,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 76.29,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ffd70fe0aa12634d06d2e0d43a5b89d420e2220c",
          "message": "feat: Entity.useIncoming() for race condition handling (#1771)",
          "timestamp": "2022-03-08T00:11:54-08:00",
          "tree_id": "dda844c63e08184dabd902bae1434fe37865d364",
          "url": "https://github.com/coinbase/rest-hooks/commit/ffd70fe0aa12634d06d2e0d43a5b89d420e2220c"
        },
        "date": 1646727323704,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 98.16,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.82,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 43.16,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.78,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "e697b70e8bbeb0f9bac4ab50718141b0f11ee1e7",
          "message": "internal: publish\n\n - @rest-hooks/core@3.1.0-beta.8\n - @rest-hooks/endpoint@2.2.0-beta.3\n - @rest-hooks/normalizr@8.2.0-beta.1\n - rest-hooks@6.2.0-beta.9\n - @rest-hooks/ssr@0.1.1-beta.0",
          "timestamp": "2022-03-08T12:54:40-06:00",
          "tree_id": "6f4026d8ed5145437c1fe4d29a1abb0bacabd946",
          "url": "https://github.com/coinbase/rest-hooks/commit/e697b70e8bbeb0f9bac4ab50718141b0f11ee1e7"
        },
        "date": 1646766436294,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 76.42,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.87,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 32.71,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "receiveLong",
            "value": 76.97,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "66 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fcf70a92ef15531b7fd12feb117f29ad8c3de3d8",
          "message": "fix: Union schemas with null args[0] hooks (#1779)",
          "timestamp": "2022-03-09T19:02:21-08:00",
          "tree_id": "07ee4fa0b7b0846429fe5862668439d4b061af9a",
          "url": "https://github.com/coinbase/rest-hooks/commit/fcf70a92ef15531b7fd12feb117f29ad8c3de3d8"
        },
        "date": 1646881567436,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 81.36,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.6,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 36.39,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLong",
            "value": 81.77,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "b435cd1165a996730b9353875603bfb97add2cdd",
          "message": "internal: publish\n\n - benchmark@0.0.5\n - github-app@0.1.9\n - normalizr-github-example@0.0.5\n - normalizr-redux-example@0.0.5\n - normalizr-relationships@0.0.5\n - todo-app@0.1.12\n - @rest-hooks/core@3.1.0-beta.9\n - @rest-hooks/endpoint@2.2.0-beta.4\n - @rest-hooks/normalizr@8.2.0-beta.2\n - rest-hooks@6.2.0-beta.10",
          "timestamp": "2022-03-09T21:50:22-06:00",
          "tree_id": "8cf890c7e5560bc14191e625a0200c68bc7df342",
          "url": "https://github.com/coinbase/rest-hooks/commit/b435cd1165a996730b9353875603bfb97add2cdd"
        },
        "date": 1646934699330,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 92.55,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 36.06,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 38.81,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "receiveLong",
            "value": 89.91,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d14673eab0dad3f02edb54f7bf37e6fed1c47a62",
          "message": "enhance: Hooks should type return value based on 'null' arg (#1783)",
          "timestamp": "2022-03-13T14:28:36-07:00",
          "tree_id": "ff00de1836d4e2328148b11789abf437500c085f",
          "url": "https://github.com/coinbase/rest-hooks/commit/d14673eab0dad3f02edb54f7bf37e6fed1c47a62"
        },
        "date": 1647207144008,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84.21,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 35.28,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 38.46,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "receiveLong",
            "value": 83.12,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c74529a32a43edb80fc8253519c590d44ed1d0dc",
          "message": "internal: publish (#1802)",
          "timestamp": "2022-03-17T09:42:54-07:00",
          "tree_id": "d5ccfc5c1d519a3df456f2d2ed18aa8fddbd3461",
          "url": "https://github.com/coinbase/rest-hooks/commit/c74529a32a43edb80fc8253519c590d44ed1d0dc"
        },
        "date": 1647535599052,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 89.53,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 36.51,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 39.27,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "receiveLong",
            "value": 90.07,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "72d81cdfce7e20a0e583ff1f6cd854ca16801f9a",
          "message": "docs(fix): Restore version routes (#1848)",
          "timestamp": "2022-03-31T10:07:34-05:00",
          "tree_id": "806a70df324e233924da69594e547bf892539604",
          "url": "https://github.com/coinbase/rest-hooks/commit/72d81cdfce7e20a0e583ff1f6cd854ca16801f9a"
        },
        "date": 1648739494845,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 103,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.46,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.01,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 107,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf38c3f67ff0041b528e9d8cf21d31704b76fc01",
          "message": "fix: Default optimistic race condition handling should assume in-order server response (#1852)",
          "timestamp": "2022-04-01T06:35:23-05:00",
          "tree_id": "866f4125e3ebcedde675286f6858561d2936d165",
          "url": "https://github.com/coinbase/rest-hooks/commit/cf38c3f67ff0041b528e9d8cf21d31704b76fc01"
        },
        "date": 1648813126349,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 101,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 41.98,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 46.55,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "receiveLong",
            "value": 99.91,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0707e1a6ee8233b2d1b6590db137e298e264635c",
          "message": "fix: Hooks with null param maintain basic schema structure (#1853)",
          "timestamp": "2022-04-01T10:02:44-07:00",
          "tree_id": "e42f6f8b1788094a4508cf254db440277f77fee8",
          "url": "https://github.com/coinbase/rest-hooks/commit/0707e1a6ee8233b2d1b6590db137e298e264635c"
        },
        "date": 1648832829781,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 78.25,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.36,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 33.81,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 77.75,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d559e95e7582e37d14d0cc6e2583b7158f8bfca9",
          "message": "internal(pkg): bump @testing-library/react from 12.1.4 to 13.0.0 (#1850)\n\n* internal(pkg): bump @testing-library/react from 12.1.4 to 13.0.0\r\n\r\nBumps [@testing-library/react](https://github.com/testing-library/react-testing-library) from 12.1.4 to 13.0.0.\r\n- [Release notes](https://github.com/testing-library/react-testing-library/releases)\r\n- [Changelog](https://github.com/testing-library/react-testing-library/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/testing-library/react-testing-library/compare/v12.1.4...v13.0.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: \"@testing-library/react\"\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* internal: Fix running react 17 & 18 tests\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2022-04-01T15:59:01-07:00",
          "tree_id": "e8c62e535db995e9162a5e21fa4f668f13d1b4aa",
          "url": "https://github.com/coinbase/rest-hooks/commit/d559e95e7582e37d14d0cc6e2583b7158f8bfca9"
        },
        "date": 1648854200560,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 76.5,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 30.52,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 33.69,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 76.4,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "4472b9b571cb652f91fdeffc8af26c7c70b58163",
          "message": "internal: publish\n\n - benchmark@0.1.0\n - github-app@0.2.0\n - normalizr-github-example@0.0.7\n - normalizr-redux-example@0.0.7\n - normalizr-relationships@0.0.7\n - todo-app@0.2.0\n - @rest-hooks/core@3.1.1\n - @rest-hooks/endpoint@2.2.1\n - @rest-hooks/experimental@3.3.2\n - @rest-hooks/graphql@0.1.3\n - @rest-hooks/legacy@4.2.0\n - @rest-hooks/normalizr@8.2.1\n - rest-hooks@6.2.1\n - @rest-hooks/ssr@0.1.2",
          "timestamp": "2022-04-01T18:03:20-05:00",
          "tree_id": "1d91c2584bc47a5653e40f7e5dc213420ade0917",
          "url": "https://github.com/coinbase/rest-hooks/commit/4472b9b571cb652f91fdeffc8af26c7c70b58163"
        },
        "date": 1648855209915,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 92.08,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 38.08,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 39.4,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "receiveLong",
            "value": 87.74,
            "range": "±3.66%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0459dbdc3fe1555c5e6dc80290187ec8297d1aa6",
          "message": "enhance: More exact optional type handling (#1858)",
          "timestamp": "2022-04-02T12:51:58-07:00",
          "tree_id": "9b288c4269455c179509860ab52dc1aa4c1e3dee",
          "url": "https://github.com/coinbase/rest-hooks/commit/0459dbdc3fe1555c5e6dc80290187ec8297d1aa6"
        },
        "date": 1648929331829,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 95.64,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.58,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 43.43,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 93.8,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "18a27d147b3857c62797db88a3b3c34d9c1c418c",
          "message": "internal: publish\n\n - benchmark@0.1.1\n - github-app@0.2.1\n - normalizr-github-example@0.0.8\n - normalizr-redux-example@0.0.8\n - normalizr-relationships@0.0.8\n - todo-app@0.2.1\n - @rest-hooks/core@3.1.2\n - @rest-hooks/endpoint@2.2.2\n - @rest-hooks/graphql@0.1.4\n - @rest-hooks/normalizr@8.2.2\n - rest-hooks@6.2.2\n - @rest-hooks/test@7.2.2",
          "timestamp": "2022-04-02T14:59:54-05:00",
          "tree_id": "1e526d4310fff63e8329f035ff63e33150776bae",
          "url": "https://github.com/coinbase/rest-hooks/commit/18a27d147b3857c62797db88a3b3c34d9c1c418c"
        },
        "date": 1648930826695,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 82.26,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 32.28,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 34.97,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "46 samples"
          },
          {
            "name": "receiveLong",
            "value": 80.59,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2b3f70e318f168d3788303a4be6e7992fb2678e8",
          "message": "feat: Add CacheProvider Controller prop to allow controller customization (#1868)",
          "timestamp": "2022-04-03T08:46:28-07:00",
          "tree_id": "259bfd8a4d6819382e7fd5db96ec0dbe8e57239b",
          "url": "https://github.com/coinbase/rest-hooks/commit/2b3f70e318f168d3788303a4be6e7992fb2678e8"
        },
        "date": 1649001023709,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 86.53,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 36.43,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 38.72,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "receiveLong",
            "value": 88.9,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9efc21650bbe0c445ea61e0acb334391b996dd40",
          "message": "feat: Add useDLE() to core (#1866)",
          "timestamp": "2022-04-03T08:54:28-07:00",
          "tree_id": "8a21648fd1ff95f7cc7bd94f972dd5b2da389887",
          "url": "https://github.com/coinbase/rest-hooks/commit/9efc21650bbe0c445ea61e0acb334391b996dd40"
        },
        "date": 1649001472953,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 93.61,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 36.23,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 38.57,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 92.78,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "e40f5ea75191ff5b4e170922744f1eaa95c09275",
          "message": "fix: optimisticUpdate when used with controller.fetch or useSuspense",
          "timestamp": "2022-04-07T18:43:35-05:00",
          "tree_id": "c64eb621b29d5ceedd602948b1f1179085b18f7f",
          "url": "https://github.com/coinbase/rest-hooks/commit/e40f5ea75191ff5b4e170922744f1eaa95c09275"
        },
        "date": 1649375306549,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.21,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.1,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 33.27,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 77.82,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3eba0fbda42a2194a45054cfa069efd0ac1eb751",
          "message": "internal: Update tests for new Resource\n\ninternal: Test code",
          "timestamp": "2022-04-07T18:52:07-05:00",
          "tree_id": "6a8790d19e98fc9c2a65a5e81b3065fab8b5c7ae",
          "url": "https://github.com/coinbase/rest-hooks/commit/3eba0fbda42a2194a45054cfa069efd0ac1eb751"
        },
        "date": 1649375731310,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 90.18,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 34.44,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 37.12,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 90.13,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "2f4974d8318442dca2206cc4dea85da34f07b371",
          "message": "internal: publish\n\n - benchmark@0.1.2\n - github-app@0.2.2\n - normalizr-github-example@0.0.9\n - normalizr-redux-example@0.0.9\n - normalizr-relationships@0.0.9\n - todo-app@0.2.2\n - @rest-hooks/core@3.2.0\n - @rest-hooks/endpoint@2.2.3\n - @rest-hooks/experimental@4.0.0\n - @rest-hooks/legacy@4.3.0\n - @rest-hooks/normalizr@8.2.3\n - rest-hooks@6.2.3\n - @rest-hooks/rest@4.0.0\n - @rest-hooks/test@7.3.0",
          "timestamp": "2022-04-07T19:12:11-05:00",
          "tree_id": "b54cd6a7d1ed8d15c3be83f6ceadeb6a76dcea49",
          "url": "https://github.com/coinbase/rest-hooks/commit/2f4974d8318442dca2206cc4dea85da34f07b371"
        },
        "date": 1649378953238,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 79.05,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 30.76,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 33.82,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 79.05,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "707eff1c1fdb6529cd9a957a411ad3f2d44c0a9c",
          "message": "internal: React types to 18 (#1887)",
          "timestamp": "2022-04-08T09:57:49-07:00",
          "tree_id": "e6e8780c7724d42732550d73e98f33c565c1049f",
          "url": "https://github.com/coinbase/rest-hooks/commit/707eff1c1fdb6529cd9a957a411ad3f2d44c0a9c"
        },
        "date": 1649437278440,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 97.19,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 38.25,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 42.13,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.67,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dcd9fbb4f4ce5583503187317ea0e065f5d31f1a",
          "message": "feat: HookableResource - endpoints as hooks (#1891)\n\nBREAKING CHANGE: Removed Resource.useFetchInit(). Use HookableResource\r\ninstead",
          "timestamp": "2022-04-09T12:16:30-07:00",
          "tree_id": "969416204812b7d83c2b7c44e28f1a544bb237ff",
          "url": "https://github.com/coinbase/rest-hooks/commit/dcd9fbb4f4ce5583503187317ea0e065f5d31f1a"
        },
        "date": 1649531992506,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 99.96,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.7,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 43.36,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 99.44,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "673be1aebf3bd56a70bba88c877cce864232d092",
          "message": "internal: Update tests",
          "timestamp": "2022-04-09T17:14:30-05:00",
          "tree_id": "45f2bf58d135ac1c6d9fa18a36e3d07ba698a70b",
          "url": "https://github.com/coinbase/rest-hooks/commit/673be1aebf3bd56a70bba88c877cce864232d092"
        },
        "date": 1649542745743,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.8,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.63,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 29.82,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "receiveLong",
            "value": 69.82,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "a8ee5bff5686e1bca0cf239cb41fb56e792f08d9",
          "message": "feat: Use path-to-regex for urls\n\nBREAKING CHANGE:\n* Resource.listUrl() is gone\n* Resource.urlRoot should use path-to-regex syntax",
          "timestamp": "2022-04-09T22:52:30-05:00",
          "tree_id": "9a4fa5783a8ad8d2e81c245681a2d076f2ed65ee",
          "url": "https://github.com/coinbase/rest-hooks/commit/a8ee5bff5686e1bca0cf239cb41fb56e792f08d9"
        },
        "date": 1649562998783,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 79.09,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.04,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 36.2,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 79.56,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "36b11af67b08183288ad295ff0303eaf78f01dba",
          "message": "enhance: Improve type inference for getFetchKey (#1896)",
          "timestamp": "2022-04-10T11:26:26-07:00",
          "tree_id": "f318d03eb96fbdf3490798fa1450fe15f564836a",
          "url": "https://github.com/coinbase/rest-hooks/commit/36b11af67b08183288ad295ff0303eaf78f01dba"
        },
        "date": 1649615469958,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 79.64,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.84,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 35.23,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "receiveLong",
            "value": 78.1,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "9ca7b83cc00374d2a0ea68f43a6ab2d3aad8cfd5",
          "message": "internal: publish\n\n - github-app@0.2.4\n - todo-app@0.2.4\n - @rest-hooks/core@3.2.1\n - @rest-hooks/endpoint@2.2.4\n - @rest-hooks/experimental@5.0.1\n - rest-hooks@6.3.1",
          "timestamp": "2022-04-11T16:15:35-05:00",
          "tree_id": "596d69e67d5cccceb19dc1720c49fdb91649dbd3",
          "url": "https://github.com/coinbase/rest-hooks/commit/9ca7b83cc00374d2a0ea68f43a6ab2d3aad8cfd5"
        },
        "date": 1649712397286,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 77.5,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.52,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 36.24,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "receiveLong",
            "value": 78.77,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c8fdca9e0cd65622d41692b66c3e2744b20bef23",
          "message": "enhance: Improve robustness when using distinct schemas to normalize/denormalize (#1908)\n\n* enhance: Improve robustness when using distinct schemas to normalize/denormalize\r\n\r\n* internal: Integration test (#1912)\r\n\r\n* fix: Account for missing meta\r\n\r\n* enhance: Prototype pollution protection\r\n\r\nCo-authored-by: Dylan Petro <dylanpetro17@gmail.com>",
          "timestamp": "2022-04-16T10:02:47-07:00",
          "tree_id": "0f5a19e4ff7e40c3f8cfe05801e3269a27bd21bc",
          "url": "https://github.com/coinbase/rest-hooks/commit/c8fdca9e0cd65622d41692b66c3e2744b20bef23"
        },
        "date": 1650128795567,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 81.36,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.53,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 37.22,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 81.98,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "ce82a4038fa5a245fc12a0654469d3c1ef47bc71",
          "message": "internal: publish\n\n - benchmark@0.1.3\n - github-app@0.2.5\n - normalizr-github-example@0.0.10\n - normalizr-redux-example@0.0.10\n - normalizr-relationships@0.0.10\n - todo-app@0.2.5\n - @rest-hooks/core@3.2.2\n - @rest-hooks/endpoint@2.2.5\n - @rest-hooks/experimental@5.0.2\n - @rest-hooks/normalizr@8.2.4\n - rest-hooks@6.3.2",
          "timestamp": "2022-04-16T12:45:34-05:00",
          "tree_id": "f19c18499c656e594451fbfe7ec4d7b2380d2e12",
          "url": "https://github.com/coinbase/rest-hooks/commit/ce82a4038fa5a245fc12a0654469d3c1ef47bc71"
        },
        "date": 1650135358269,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 74.56,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 28.34,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 32.65,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "receiveLong",
            "value": 74.16,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "63 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d5c4b9ee25e64033729389ae153f56544c8cc97e",
          "message": "internal: Use TypeScript 4.7 tooling (#1938)",
          "timestamp": "2022-04-25T09:53:31-07:00",
          "tree_id": "42a378086986e7b436a1fbd755183dc9f9f79b2f",
          "url": "https://github.com/coinbase/rest-hooks/commit/d5c4b9ee25e64033729389ae153f56544c8cc97e"
        },
        "date": 1650905845653,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84.53,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 34.02,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 39.03,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "receiveLong",
            "value": 87.09,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5e764194cfcd98d63ad7a4046423d3a8abe7b67b",
          "message": "internal: Upgrade to jest 28 (#1944)",
          "timestamp": "2022-04-25T19:03:19-07:00",
          "tree_id": "81a81c394e92e7a57615669b71a567ac87e64848",
          "url": "https://github.com/coinbase/rest-hooks/commit/5e764194cfcd98d63ad7a4046423d3a8abe7b67b"
        },
        "date": 1650938810428,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 98.38,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.65,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 43.81,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 95.04,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2d4214a4c6b74725c9a6a92e36817bd26aa3c366",
          "message": "fix: Accept undefined or null responses for schema entries (#1963)\n\nCo-authored-by: Jordan Harband <ljharb@gmail.com>",
          "timestamp": "2022-04-29T09:50:32-07:00",
          "tree_id": "a5f1b8a3b1cbffced3cfa30f0a13d907731c4cd7",
          "url": "https://github.com/coinbase/rest-hooks/commit/2d4214a4c6b74725c9a6a92e36817bd26aa3c366"
        },
        "date": 1651251236036,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 99.77,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.72,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.19,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 98.31,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "f490c35cb1a91a4f740488d28b92d3e3b3a98ffe",
          "message": "internal: publish\n\n - benchmark@0.1.4\n - github-app@0.2.7\n - normalizr-github-example@0.0.11\n - normalizr-redux-example@0.0.11\n - normalizr-relationships@0.0.11\n - todo-app@0.2.7\n - @rest-hooks/core@3.2.3\n - @rest-hooks/endpoint@2.2.6\n - @rest-hooks/graphql@0.1.5\n - @rest-hooks/hooks@3.0.1\n - @rest-hooks/legacy@4.3.2\n - @rest-hooks/normalizr@8.2.5\n - rest-hooks@6.3.3\n - @rest-hooks/rest@5.0.1\n - @rest-hooks/ssr@0.1.4\n - @rest-hooks/test@7.3.1",
          "timestamp": "2022-04-30T12:54:45-05:00",
          "tree_id": "f5f7b6566cce89cc57e8a87b327947213455029d",
          "url": "https://github.com/coinbase/rest-hooks/commit/f490c35cb1a91a4f740488d28b92d3e3b3a98ffe"
        },
        "date": 1651347682279,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 108,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.94,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 47.06,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 105,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "972d6463c6d1946254673bb7029898b19ce4ffdd",
          "message": "pkg: @anansi, types, antd, eslint, node, redux, typescript, webpack (#2015)\n\n* pkg: Update all non-major dependencies\r\n\r\n* pkg(fix): Consolidate react types\r\n\r\n* pkg: Consolidate typescript next version\r\n\r\n* internal: Update jest types\r\n\r\nCo-authored-by: Renovate Bot <bot@renovateapp.com>\r\nCo-authored-by: Nathaniel Tucker <nathaniel@sisudata.com>",
          "timestamp": "2022-05-11T16:39:23-05:00",
          "tree_id": "faf6135ea8e4598578fd6db600731692b0f2e819",
          "url": "https://github.com/coinbase/rest-hooks/commit/972d6463c6d1946254673bb7029898b19ce4ffdd"
        },
        "date": 1652305376228,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 99.53,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.9,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.62,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 99.02,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "78a22f29f86527ac10eb2c9b031984e044226dce",
          "message": "pkg: Use @babel/runtime@^7.13.0 to use CJS/ESM exports support (#2019)",
          "timestamp": "2022-05-20T12:04:42-05:00",
          "tree_id": "a394622fda99e3f90a61dd5a0b35f52361446d9e",
          "url": "https://github.com/coinbase/rest-hooks/commit/78a22f29f86527ac10eb2c9b031984e044226dce"
        },
        "date": 1653066535745,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 79.57,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 34.89,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 38.38,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "receiveLong",
            "value": 76.51,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9e1d0f7d0082ae4375ef044a4b6f356cbaca373a",
          "message": "pkg: Update all non-major dependencies (#2023)\n\nCo-authored-by: Renovate Bot <bot@renovateapp.com>",
          "timestamp": "2022-05-27T20:52:20-07:00",
          "tree_id": "8fce388894657397ea6c39a7af87e010a7c94f3d",
          "url": "https://github.com/coinbase/rest-hooks/commit/9e1d0f7d0082ae4375ef044a4b6f356cbaca373a"
        },
        "date": 1653710228380,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 81.01,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 33.55,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 37.74,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "receiveLong",
            "value": 81.55,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "3ef33e89500d586bdfbef12ac7f559a9a647df88",
          "message": "internal: publish\n\n - benchmark@0.1.5\n - github-app@0.2.8\n - normalizr-github-example@0.0.12\n - normalizr-redux-example@0.0.12\n - normalizr-relationships@0.0.12\n - todo-app@0.2.8\n - @rest-hooks/core@3.2.4\n - @rest-hooks/endpoint@2.2.7\n - @rest-hooks/experimental@5.0.3\n - @rest-hooks/graphql@0.1.6\n - @rest-hooks/hooks@3.0.2\n - @rest-hooks/img@0.6.1\n - @rest-hooks/legacy@4.3.3\n - @rest-hooks/normalizr@8.2.6\n - rest-hooks@6.3.4\n - @rest-hooks/rest@5.0.2\n - @rest-hooks/ssr@0.2.0",
          "timestamp": "2022-05-30T15:12:50-05:00",
          "tree_id": "15f317a7d8a0dd598cb4a6f9c181551cd009e9b1",
          "url": "https://github.com/coinbase/rest-hooks/commit/3ef33e89500d586bdfbef12ac7f559a9a647df88"
        },
        "date": 1653942280326,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 111,
            "range": "±2.84%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 48.59,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.82,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLong",
            "value": 114,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e8aff22fe754bf47691b8f6c1b27d45335445def",
          "message": "fix: Hydration mismatch in React 17 (#2039)",
          "timestamp": "2022-06-03T13:29:26-07:00",
          "tree_id": "e043f30464f73a14067ca572a77ec4643d15b498",
          "url": "https://github.com/coinbase/rest-hooks/commit/e8aff22fe754bf47691b8f6c1b27d45335445def"
        },
        "date": 1654288410203,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 103,
            "range": "±3.75%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.09,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 50.34,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 109,
            "range": "±2.79%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6b62bc61fbec06bb4f8eb30c8f2eb8e341e32a21",
          "message": "enhance: Warn about CacheProvider usage for SSR (#2044)",
          "timestamp": "2022-06-08T09:33:03-07:00",
          "tree_id": "a030abec0b1cc8e4d5b8f04b50e96626a2b5371f",
          "url": "https://github.com/coinbase/rest-hooks/commit/6b62bc61fbec06bb4f8eb30c8f2eb8e341e32a21"
        },
        "date": 1654706220498,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 100,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.48,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.54,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 101,
            "range": "±3.68%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0088494e5cab91da7becebe7d9b62796fb9f4f2e",
          "message": "fix: Fix package exports support for latest resolve pkg (#2062)",
          "timestamp": "2022-07-01T20:00:20-05:00",
          "tree_id": "b7bc65a9097155da6638c8392d4196f6842d42f8",
          "url": "https://github.com/coinbase/rest-hooks/commit/0088494e5cab91da7becebe7d9b62796fb9f4f2e"
        },
        "date": 1656723875995,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 113,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.87,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 46.78,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "receiveLong",
            "value": 96.97,
            "range": "±2.96%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca7d9deb2e5bcb542dfa33bc7ab3ef1b6aff7b8b",
          "message": "fix: 18.2 StrictMode compatibility (#2096)",
          "timestamp": "2022-07-20T08:29:49-07:00",
          "tree_id": "3d43e12fe39ce91557e8abfeb2551ff98400d078",
          "url": "https://github.com/coinbase/rest-hooks/commit/ca7d9deb2e5bcb542dfa33bc7ab3ef1b6aff7b8b"
        },
        "date": 1658331275401,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 106,
            "range": "±3.97%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.3,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.24,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLong",
            "value": 108,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "a34477ee514c1d705555dbe5338cca976df665aa",
          "message": "internal: publish\n\n - @rest-hooks/core@3.2.7\n - @rest-hooks/endpoint@2.2.10\n - @rest-hooks/experimental@5.0.5\n - @rest-hooks/graphql@0.1.8\n - @rest-hooks/legacy@4.3.5\n - @rest-hooks/normalizr@8.2.9\n - rest-hooks@6.3.7\n - @rest-hooks/rest@5.0.4\n - @rest-hooks/ssr@0.2.2\n - @rest-hooks/test@7.3.3",
          "timestamp": "2022-07-20T10:41:28-05:00",
          "tree_id": "ed2c0ffbf77b1d6e31879a39a86be40f4e48d1a2",
          "url": "https://github.com/coinbase/rest-hooks/commit/a34477ee514c1d705555dbe5338cca976df665aa"
        },
        "date": 1658336899299,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 74.53,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 31.18,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 32.7,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "receiveLong",
            "value": 76.52,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6206e6463a7c3699d5c1d1b248e4d5418b1327f1",
          "message": "fix: Ensure dual package hazard solved for non-node (#2099)",
          "timestamp": "2022-07-23T07:33:44-07:00",
          "tree_id": "52f4f72fbf9becadc457fe03c6a4034da467b970",
          "url": "https://github.com/coinbase/rest-hooks/commit/6206e6463a7c3699d5c1d1b248e4d5418b1327f1"
        },
        "date": 1658587113835,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 96.12,
            "range": "±4.87%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.09,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 47.97,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.87,
            "range": "±4.95%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "d43a9197272bf682be567b0b92eb23552deada3f",
          "message": "internal: publish\n\n - @rest-hooks/core@3.2.8\n - @rest-hooks/endpoint@2.2.11\n - @rest-hooks/graphql@0.1.9\n - @rest-hooks/legacy@4.3.6\n - @rest-hooks/normalizr@8.2.10\n - rest-hooks@6.3.8\n - @rest-hooks/rest@5.0.5\n - @rest-hooks/ssr@0.2.3\n - @rest-hooks/test@7.3.4",
          "timestamp": "2022-07-23T09:55:44-05:00",
          "tree_id": "d73ba281e462a68a8c9f0a7cd6f8a956374cf19f",
          "url": "https://github.com/coinbase/rest-hooks/commit/d43a9197272bf682be567b0b92eb23552deada3f"
        },
        "date": 1658590035283,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 112,
            "range": "±4.41%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.03,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 53.13,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLong",
            "value": 117,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f09add61e8b0a1e5b3beaf0ebdb343b2ac052c1f",
          "message": "internal: Move to yarn 3 (#2102)",
          "timestamp": "2022-07-25T14:00:25-07:00",
          "tree_id": "3fe4ff0313afd83a013b07982539688563b29936",
          "url": "https://github.com/coinbase/rest-hooks/commit/f09add61e8b0a1e5b3beaf0ebdb343b2ac052c1f"
        },
        "date": 1658783322026,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 99.16,
            "range": "±4.12%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.06,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.24,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 86.67,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e82a70406bc55f9e1dd90de020c7a51bf172467a",
          "message": "internal: lerna -> lerna-lite (#2108)",
          "timestamp": "2022-07-25T18:03:32-07:00",
          "tree_id": "0c2520c881bc51dbf174197dae7122c62e9ed843",
          "url": "https://github.com/coinbase/rest-hooks/commit/e82a70406bc55f9e1dd90de020c7a51bf172467a"
        },
        "date": 1658797846966,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 109,
            "range": "±3.80%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.27,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 50.98,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 108,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f9b7a6e5b19a0d6f26208af517451affa161b070",
          "message": "pkg: Update all non-major dependencies (#2113)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-07-26T10:13:24-07:00",
          "tree_id": "588f91bb366cc580e096e9dfac1ff97bdf22c1b0",
          "url": "https://github.com/coinbase/rest-hooks/commit/f9b7a6e5b19a0d6f26208af517451affa161b070"
        },
        "date": 1658856157626,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 74.37,
            "range": "±7.99%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 36.35,
            "range": "±3.82%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 37.41,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 71.77,
            "range": "±5.11%",
            "unit": "ops/sec",
            "extra": "62 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "5d2bfe84df68f8f76aaa2f223f721768f2cabc1e",
          "message": "internal: Fix yarn.lock",
          "timestamp": "2022-07-26T12:52:20-05:00",
          "tree_id": "4940326ddb84126b45f13b8a74d57e776441c0ac",
          "url": "https://github.com/coinbase/rest-hooks/commit/5d2bfe84df68f8f76aaa2f223f721768f2cabc1e"
        },
        "date": 1658859164350,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 83.97,
            "range": "±4.34%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.7,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.72,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.14,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3003348ba96781085a6f8a6a86a882438ba2b5ea",
          "message": "pkg: Update all non-major dependencies (#2119)\n\n* pkg: Update all non-major dependencies\r\n\r\n* internal: Need to sudo corepack\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2022-07-29T21:17:31-07:00",
          "tree_id": "316bd7e640252343da9eb99f701a0b4caf891604",
          "url": "https://github.com/coinbase/rest-hooks/commit/3003348ba96781085a6f8a6a86a882438ba2b5ea"
        },
        "date": 1659155025155,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 74.62,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 36.32,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 39.71,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "receiveLong",
            "value": 75.14,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bab76ae4ac54474634d3cb323b69ef9be5773a03",
          "message": "pkg: Update babel packages (#2124)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-08-01T16:43:21-07:00",
          "tree_id": "fd0fa93109829b2a5ded3a43c2d94d88dc43df63",
          "url": "https://github.com/coinbase/rest-hooks/commit/bab76ae4ac54474634d3cb323b69ef9be5773a03"
        },
        "date": 1659397707359,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 101,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.68,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.6,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "receiveLong",
            "value": 100,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f7c864998abc68cae1a4130f2de50e055c7a5269",
          "message": "pkg: Update all non-major dependencies (#2136)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-08-21T16:09:05-05:00",
          "tree_id": "2caf378a42c700ee9a0e17e1f69d5bd9b2094255",
          "url": "https://github.com/coinbase/rest-hooks/commit/f7c864998abc68cae1a4130f2de50e055c7a5269"
        },
        "date": 1661116436992,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 101,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.62,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 47.84,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.86,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "82e1cbbd70373d36ec44272ff581e3cf531e5fed",
          "message": "pkg: Update all non-major dependencies (#2137)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-08-26T05:03:56-05:00",
          "tree_id": "e575d6c1ad918d81ec59523d8e5ba4d45c149b92",
          "url": "https://github.com/coinbase/rest-hooks/commit/82e1cbbd70373d36ec44272ff581e3cf531e5fed"
        },
        "date": 1661508531101,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 101,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.54,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.19,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 102,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bc4d12d5369f4eee17f32d9379793cfc9b679d61",
          "message": "pkg: Update babel packages (#2140)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-08-26T08:52:03-05:00",
          "tree_id": "07327230190458a32b4b14bef5335363bf6c15f5",
          "url": "https://github.com/coinbase/rest-hooks/commit/bc4d12d5369f4eee17f32d9379793cfc9b679d61"
        },
        "date": 1661522225102,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 90.59,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.51,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 47.9,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 89.91,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "70759cfc8a2de9d42a060727d9f91fe4e6945296",
          "message": "pkg: Update JS test packages to v29 (major) (#2141)\n\n* pkg: Update JS test packages to v29\r\n\r\n* internal: Update snapshots for new jest version\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2022-08-27T20:21:26-07:00",
          "tree_id": "ccc2f9429a9ccba1a244b65a365308a4353029f4",
          "url": "https://github.com/coinbase/rest-hooks/commit/70759cfc8a2de9d42a060727d9f91fe4e6945296"
        },
        "date": 1661657197118,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 91.18,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 44.07,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.72,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLong",
            "value": 91.96,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "eb480f1f567944208483c9239256e7bcf81351e7",
          "message": "pkg: Update all non-major dependencies (#2150)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-08-31T16:05:01-07:00",
          "tree_id": "b6dd8adf7649649e55d964cf8c137291c45874dd",
          "url": "https://github.com/coinbase/rest-hooks/commit/eb480f1f567944208483c9239256e7bcf81351e7"
        },
        "date": 1661987392192,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 89.79,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.68,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 49.96,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLong",
            "value": 89.98,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a2c7d9a7f0a2a3bebb2f41c7d60c48761af3c56c",
          "message": "internal(fix): docs site (#2152)",
          "timestamp": "2022-09-02T12:55:54-07:00",
          "tree_id": "520f72d943f3ce80c557d18501c6013629f05534",
          "url": "https://github.com/coinbase/rest-hooks/commit/a2c7d9a7f0a2a3bebb2f41c7d60c48761af3c56c"
        },
        "date": 1662148883500,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 75.22,
            "range": "±2.75%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.12,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 43.16,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 78.12,
            "range": "±2.73%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "85e2bd9ef2696694ce18c713d35d2c9aaabbedc1",
          "message": "feat: Add validateRequired() (#2116)",
          "timestamp": "2022-09-03T19:58:36-05:00",
          "tree_id": "64477377e773fbd9aa65752cfc7d1fa285509947",
          "url": "https://github.com/coinbase/rest-hooks/commit/85e2bd9ef2696694ce18c713d35d2c9aaabbedc1"
        },
        "date": 1662253407478,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 100,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.92,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.27,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 100,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1ab92f7bce88733361f7c06d1a11f91a7fd69451",
          "message": "internal: publish (#2157)\n\n* internal(fix): Typescript package resolution to make docs site work\n\n* internal: publish",
          "timestamp": "2022-09-04T01:01:16-05:00",
          "tree_id": "4affa0d7c5edd4061d905025a4816e6c412dac80",
          "url": "https://github.com/coinbase/rest-hooks/commit/1ab92f7bce88733361f7c06d1a11f91a7fd69451"
        },
        "date": 1662271525407,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 90.44,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.37,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.09,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 91.58,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "31b2c8ff3d9f9001c31f3f5c15bec1321a15361d",
          "message": "pkg: Update babel packages (#2161)\n\n* pkg: Update babel packages\r\n\r\n* internal: yarnDedupeHighest is needed to actually dedupe babel\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2022-09-07T17:23:24-07:00",
          "tree_id": "b84dc23393d4bbe682ad9fafac33379a1edb6588",
          "url": "https://github.com/coinbase/rest-hooks/commit/31b2c8ff3d9f9001c31f3f5c15bec1321a15361d"
        },
        "date": 1662596855927,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 88.53,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 44.5,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 49.22,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 87.58,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5bab22a75898c5a61d2e0ef9e1c8f4067f15f55f",
          "message": "pkg: Update all non-major dependencies (#2164)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-09-10T10:59:31-07:00",
          "tree_id": "e4db1ad12291c6d48e1fd0928075d17c75a96e9e",
          "url": "https://github.com/coinbase/rest-hooks/commit/5bab22a75898c5a61d2e0ef9e1c8f4067f15f55f"
        },
        "date": 1662833033455,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 94.51,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.87,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.69,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 95.29,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "bcd34703c6b56af10326aef525830a29c39be368",
          "message": "internal: fix lockfile",
          "timestamp": "2022-09-10T18:25:40-05:00",
          "tree_id": "44986ce0ed2bf3fd33eb4d72e177c749ad294935",
          "url": "https://github.com/coinbase/rest-hooks/commit/bcd34703c6b56af10326aef525830a29c39be368"
        },
        "date": 1662858712297,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 97.35,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 44.96,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.8,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.45,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dab7ac798850fc0519ffe5793601757b10d949b2",
          "message": "pkg: Update babel packages (#2174)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-09-14T12:48:22-05:00",
          "tree_id": "2dd58418911bdef39db7b18051a601cbc394fcac",
          "url": "https://github.com/coinbase/rest-hooks/commit/dab7ac798850fc0519ffe5793601757b10d949b2"
        },
        "date": 1663178022388,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 68.97,
            "range": "±2.78%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.18,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 41.16,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "receiveLong",
            "value": 71.1,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "66 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "28b37ff55b402e68bd75b4212647a4e6a5f84123",
          "message": "docs: Add docs versions for minor release",
          "timestamp": "2022-09-19T16:22:20-05:00",
          "tree_id": "b5d55c089b9c906865a8d7ebab7ca9c7cb2d7bc5",
          "url": "https://github.com/coinbase/rest-hooks/commit/28b37ff55b402e68bd75b4212647a4e6a5f84123"
        },
        "date": 1663719891042,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 73.84,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.83,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 42.78,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "receiveLong",
            "value": 75.3,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c2c74033ecf2004ddebaf064af64f37894f20dec",
          "message": "pkg: Update all non-major dependencies (#2190)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-09-25T14:44:59-05:00",
          "tree_id": "6bea95886348cf722a887de1654457c20701fa7d",
          "url": "https://github.com/coinbase/rest-hooks/commit/c2c74033ecf2004ddebaf064af64f37894f20dec"
        },
        "date": 1664135346843,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 96.1,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.5,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.79,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.54,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7c9d3bc8ea3019490a1f9e1978c3709b346d582d",
          "message": "pkg: Update babel packages (#2192)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-09-29T11:31:25-05:00",
          "tree_id": "01ba25b5e25a40c06b12b897af888677afdb6913",
          "url": "https://github.com/coinbase/rest-hooks/commit/7c9d3bc8ea3019490a1f9e1978c3709b346d582d"
        },
        "date": 1664469339867,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 101,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 48.64,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 53.03,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "receiveLong",
            "value": 101,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "c5079b6eae8b77593a32423bde11cf5805f1a994",
          "message": "internal: publish\n\n - example-benchmark@0.4.1\n - github-app@0.4.2\n - normalizr-github-example@0.1.1\n - normalizr-redux-example@0.1.1\n - normalizr-relationships@0.1.1\n - todo-app@0.2.12\n - @rest-hooks/core@3.3.1\n - @rest-hooks/endpoint@3.0.1\n - @rest-hooks/experimental@8.0.0\n - @rest-hooks/graphql@0.3.0\n - @rest-hooks/hooks@3.0.7\n - @rest-hooks/img@0.6.6\n - @rest-hooks/legacy@4.4.1\n - @rest-hooks/normalizr@9.0.1\n - rest-hooks@6.4.1\n - @rest-hooks/rest@6.0.0\n - @rest-hooks/ssr@0.2.8\n - @rest-hooks/test@7.3.9\n - @rest-hooks/use-enhanced-reducer@1.1.6",
          "timestamp": "2022-09-30T20:14:37-05:00",
          "tree_id": "faf00a36eb306eb81226637ed03869f888cb2429",
          "url": "https://github.com/coinbase/rest-hooks/commit/c5079b6eae8b77593a32423bde11cf5805f1a994"
        },
        "date": 1664587386706,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 98.93,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 48.02,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 54.71,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "receiveLong",
            "value": 99.37,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "37f635bc1371840419917e34cf85097898d7d8b4",
          "message": "enhance: Use process() option to infer return type of RestEndpoint (#2197)",
          "timestamp": "2022-10-02T13:43:30-07:00",
          "tree_id": "0679d4aee36aa7b6db79d06ce0a1d54cc8778db9",
          "url": "https://github.com/coinbase/rest-hooks/commit/37f635bc1371840419917e34cf85097898d7d8b4"
        },
        "date": 1664743648590,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 87.19,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.52,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 47.11,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "receiveLong",
            "value": 85.97,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c7eb5e9e51b3fa42e996b27c6d42ba317028f292",
          "message": "docs: Fix mobile usability SEO (#2206)",
          "timestamp": "2022-10-09T23:50:29-05:00",
          "tree_id": "603431ee4b1d12fd3ecab67c379438fb8bb50856",
          "url": "https://github.com/coinbase/rest-hooks/commit/c7eb5e9e51b3fa42e996b27c6d42ba317028f292"
        },
        "date": 1665377684803,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84.82,
            "range": "±2.34%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.73,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.13,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 86.88,
            "range": "±3.03%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ff9bcc0382dc41d1bf47754c1493320847e103cc",
          "message": "feat: Support infer for Endpoints with string or number args (#2226)",
          "timestamp": "2022-10-20T10:56:39-07:00",
          "tree_id": "48851358dd4fa6e1916fde428d8cdf31885a38a9",
          "url": "https://github.com/coinbase/rest-hooks/commit/ff9bcc0382dc41d1bf47754c1493320847e103cc"
        },
        "date": 1666288913898,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 41.94,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 47.41,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "receiveLong",
            "value": 81.46,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4e652a13552cbf467ca140738f9603aba06cffee",
          "message": "pkg: Update babel packages (#2227)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-10-21T03:19:51-05:00",
          "tree_id": "c9d41b2f9b6f102075599fdfd53b3c162812b67e",
          "url": "https://github.com/coinbase/rest-hooks/commit/4e652a13552cbf467ca140738f9603aba06cffee"
        },
        "date": 1666340642040,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 88.75,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 49.78,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 95.4,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "5f2182e6f210bbdad6278dd4f7c352896dee359f",
          "message": "fix: Array polymorphic types",
          "timestamp": "2022-10-27T21:57:20-05:00",
          "tree_id": "cd3be115461c5edbbe31651b1d531820a70be663",
          "url": "https://github.com/coinbase/rest-hooks/commit/5f2182e6f210bbdad6278dd4f7c352896dee359f"
        },
        "date": 1666926507317,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 72,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.96,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 41.22,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "receiveLong",
            "value": 71.22,
            "range": "±3.14%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "da31e4b96f2a337951b131c131b5ab8308804c1c",
          "message": "internal: publish\n\n - @rest-hooks/core@3.3.2\n - @rest-hooks/endpoint@3.1.0\n - @rest-hooks/experimental@8.0.1\n - @rest-hooks/graphql@0.3.2\n - @rest-hooks/hooks@3.0.8\n - @rest-hooks/img@0.6.7\n - @rest-hooks/legacy@4.4.2\n - @rest-hooks/normalizr@9.1.0\n - rest-hooks@6.4.2\n - @rest-hooks/rest@6.0.2\n - @rest-hooks/ssr@0.2.9\n - @rest-hooks/test@7.4.1\n - @rest-hooks/use-enhanced-reducer@1.1.7",
          "timestamp": "2022-10-27T22:28:09-05:00",
          "tree_id": "70c9b4205bfae56afc64d98758681d71b001a50e",
          "url": "https://github.com/coinbase/rest-hooks/commit/da31e4b96f2a337951b131c131b5ab8308804c1c"
        },
        "date": 1666929217373,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 93.6,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.06,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 50.63,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.49,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "20aa9e42fa7777baeef208b8f880411c0b1e6862",
          "message": "feat: Add Controller.getState() (#2252)",
          "timestamp": "2022-11-03T15:40:59-07:00",
          "tree_id": "6da34c9111fd9b26132066a8fa68fabbd99ae447",
          "url": "https://github.com/coinbase/rest-hooks/commit/20aa9e42fa7777baeef208b8f880411c0b1e6862"
        },
        "date": 1667515506954,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 101,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 48.55,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 53.49,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLong",
            "value": 99.59,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "589030c60481a7a502700773b67beeb684d527fe",
          "message": "feat: Support React 18 preload-free-SSR like in NextJS (#2253)\n\n* enhance: Extract state binding to one hook\r\n\r\n* feat: Support React 18 preload-free-SSR like in NextJS",
          "timestamp": "2022-11-05T13:34:44-07:00",
          "tree_id": "cbd90ed686e156eb4bed5303b4775f6816d46d7f",
          "url": "https://github.com/coinbase/rest-hooks/commit/589030c60481a7a502700773b67beeb684d527fe"
        },
        "date": 1667680738759,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 99.08,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 48.57,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.71,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "receiveLong",
            "value": 100,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ddc03ff39b7ce8415db37b735bb81aa862807bb2",
          "message": "feat: Add Query and schema.All (#2229)\n\n* feat: Add Query schema\r\n\r\n* feat: schema.All + Query is endpoint",
          "timestamp": "2022-11-05T21:49:57-07:00",
          "tree_id": "dafe57f781ca50e446857d787052e1c1ea7a204d",
          "url": "https://github.com/coinbase/rest-hooks/commit/ddc03ff39b7ce8415db37b735bb81aa862807bb2"
        },
        "date": 1667710473312,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 107,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7160,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.84,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.61,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 52.21,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 51.84,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 105,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d739a9dbe2d9796f21e24ebb2022e10575bd0c4",
          "message": "pkg: Update babel packages (#2255)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-11-06T09:42:50-08:00",
          "tree_id": "529051a6e55b4dbc1f661f80083f3089bad60b60",
          "url": "https://github.com/coinbase/rest-hooks/commit/4d739a9dbe2d9796f21e24ebb2022e10575bd0c4"
        },
        "date": 1667756897101,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 87.92,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4753,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.29,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.94,
            "range": "±2.56%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 45.25,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 46,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 85.78,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13b260f3b610983008ed051928516adee894c55d",
          "message": "docs: Add diagram blog post (#2254)",
          "timestamp": "2022-11-06T11:59:32-08:00",
          "tree_id": "2321e6854e3e342bad7db298832fe6a171fdd826",
          "url": "https://github.com/coinbase/rest-hooks/commit/13b260f3b610983008ed051928516adee894c55d"
        },
        "date": 1667765116391,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 75.14,
            "range": "±3.95%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4653,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.65,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 42.01,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 42.52,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 42.65,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "receiveLong",
            "value": 77.55,
            "range": "±3.01%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "1b4f0fca08dbcf745107824e6a082a5daff099e7",
          "message": "internal: publish\n\n - @rest-hooks/core@3.4.0\n - @rest-hooks/endpoint@3.2.0\n - @rest-hooks/experimental@8.0.2\n - @rest-hooks/graphql@0.3.3\n - @rest-hooks/hooks@3.0.9\n - @rest-hooks/img@0.6.8\n - @rest-hooks/legacy@4.5.0\n - @rest-hooks/normalizr@9.2.0\n - rest-hooks@6.5.0\n - @rest-hooks/rest@6.1.0\n - @rest-hooks/ssr@0.3.0\n - @rest-hooks/test@7.4.2\n - @rest-hooks/use-enhanced-reducer@1.2.0",
          "timestamp": "2022-11-05T20:14:36-05:00",
          "tree_id": "7f39f8eeb62553fbbc467c5b2c4e35f920c45e61",
          "url": "https://github.com/coinbase/rest-hooks/commit/1b4f0fca08dbcf745107824e6a082a5daff099e7"
        },
        "date": 1667851906102,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 98.77,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5618,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 48.3,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 54.41,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 54.93,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 54.46,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "receiveLong",
            "value": 98.7,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "777695b474ddd63710cf720caa4a079929f0537a",
          "message": "docs: Cut 6.5 of docs (#2259)\n\n* docs: Cut 6.5 of docs\r\n\r\n* docs: Add new api pages",
          "timestamp": "2022-11-08T07:56:05-08:00",
          "tree_id": "888eaf3130eae1727bc577ccc57701fe80a88f54",
          "url": "https://github.com/coinbase/rest-hooks/commit/777695b474ddd63710cf720caa4a079929f0537a"
        },
        "date": 1667923245806,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 110,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7227,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.9,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.08,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 52.06,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 51.63,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 106,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "e79c6853e9414127c6eeaee784dc3f33546b9630",
          "message": "docs: Update badge links",
          "timestamp": "2022-11-13T00:23:08-06:00",
          "tree_id": "960c8cf84b3b25742445655577fe25d24ae29940",
          "url": "https://github.com/coinbase/rest-hooks/commit/e79c6853e9414127c6eeaee784dc3f33546b9630"
        },
        "date": 1668321392478,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 80.09,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4645,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 39.1,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 42.15,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 43.16,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 43.31,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "receiveLong",
            "value": 76.59,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 51.21,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 68.67,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d36956f03c3051181f20e6c4375a6496e3b2add",
          "message": "internal: Update `@anansi/eslint-plugin` to v0.15.0 (#2271)\n\n* pkg: Update `@anansi/eslint-plugin` to v0.15.0\r\n\r\n* internal: Import sort order\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2022-11-13T07:47:03-08:00",
          "tree_id": "cb0a773f35164156809070adff32e9361dd6e628",
          "url": "https://github.com/coinbase/rest-hooks/commit/3d36956f03c3051181f20e6c4375a6496e3b2add"
        },
        "date": 1668354648469,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 123,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9169,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 60.94,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 66.1,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 64.62,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 63.8,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 121,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 80.74,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 109,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "fda72a3be07f34958792517174659b8b0e72b7e3",
          "message": "internal: Finally react-native testing",
          "timestamp": "2022-11-13T15:55:46-06:00",
          "tree_id": "1ebba5e717633b0fbfed4224ec8cbe8ed88b15fd",
          "url": "https://github.com/coinbase/rest-hooks/commit/fda72a3be07f34958792517174659b8b0e72b7e3"
        },
        "date": 1668385263225,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 105,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5564,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.72,
            "range": "±2.29%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.85,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 52.4,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 53.29,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLong",
            "value": 104,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 66.2,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 89.23,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "f36a6cb91abf6c37039ed6ab30b4113ead880f23",
          "message": "feat(react-native): Revalidate stale on react-navigation focus (#2273)",
          "timestamp": "2022-11-14T15:24:24-06:00",
          "tree_id": "440969dc6d9a1ea94c500f83229925531a4a8dc5",
          "url": "https://github.com/coinbase/rest-hooks/commit/f36a6cb91abf6c37039ed6ab30b4113ead880f23"
        },
        "date": 1668461707305,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 94.97,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5560,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.29,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 49.69,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 49.42,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 49.19,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.51,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 60.77,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 83.76,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "310bc7f5088acc914df41191c0ef0cbc31369e58",
          "message": "internal: publish\n\n - github-app@0.4.5\n - todo-app@0.2.15\n - @rest-hooks/experimental@9.2.0\n - @rest-hooks/img@0.8.0\n - @rest-hooks/legacy@5.2.0\n - @rest-hooks/react@7.0.0\n - @rest-hooks/redux@6.1.0\n - rest-hooks@7.0.0\n - @rest-hooks/ssr@0.6.0\n - @rest-hooks/test@9.1.0",
          "timestamp": "2022-11-16T00:33:25-06:00",
          "tree_id": "f849d5782bda9adb681de8e324c253fda4c09bfb",
          "url": "https://github.com/coinbase/rest-hooks/commit/310bc7f5088acc914df41191c0ef0cbc31369e58"
        },
        "date": 1668581315557,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 103,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7095,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.54,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 53.82,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 53.21,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 52.62,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "receiveLong",
            "value": 103,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 67,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 87.22,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "cc58cd5fe4197814d23209555f034a81675f2f7d",
          "message": "docs: Update manager docs",
          "timestamp": "2022-11-21T19:52:43-06:00",
          "tree_id": "050b7039ac61449323a49346b70f48e9a7faf985",
          "url": "https://github.com/coinbase/rest-hooks/commit/cc58cd5fe4197814d23209555f034a81675f2f7d"
        },
        "date": 1669082787959,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 104,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7112,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.77,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.51,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 51.89,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 51.08,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 104,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 65.72,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 85.48,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "b8e269dce46dfe4715ff8e55d93f2de91d33817f",
          "message": "docs: Add client-side join example for Query",
          "timestamp": "2022-11-21T19:56:12-06:00",
          "tree_id": "2406861f1ecb105460a7da9900060711cc3feceb",
          "url": "https://github.com/coinbase/rest-hooks/commit/b8e269dce46dfe4715ff8e55d93f2de91d33817f"
        },
        "date": 1669082823196,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 98.82,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7193,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 48.93,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 54.91,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 53.99,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 53.74,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLong",
            "value": 93.21,
            "range": "±10.24%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 64.16,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 87.4,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "5b829b7ed0f039b8fd6404417e56b2d32218b623",
          "message": "internal: Bump example versions",
          "timestamp": "2022-11-22T15:45:56-06:00",
          "tree_id": "9174e682305707ba9c62c963432c659884ffafc0",
          "url": "https://github.com/coinbase/rest-hooks/commit/5b829b7ed0f039b8fd6404417e56b2d32218b623"
        },
        "date": 1669154482327,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 85.56,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4439,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 38.48,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 41.59,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 42.42,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 40.53,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "receiveLong",
            "value": 83.59,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 52.75,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 69.61,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3ee5ee57431971ba4bdb47b48ed89933412374c",
          "message": "pkg: Update babel packages (#2308)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-12-02T16:03:17-08:00",
          "tree_id": "84ea14738f345ce82ee1c889717ef4fabe8279c4",
          "url": "https://github.com/coinbase/rest-hooks/commit/e3ee5ee57431971ba4bdb47b48ed89933412374c"
        },
        "date": 1670026158204,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 86.75,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4704,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.59,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 43.52,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 44.26,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 42.23,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "receiveLong",
            "value": 85.4,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 54.31,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 72.19,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "14b93f67f0589df5813909e0c1acd4cacad0a3ee",
          "message": "enhance: Include Object.hasOwn polyfill (#2309)",
          "timestamp": "2022-12-02T16:35:12-08:00",
          "tree_id": "ef04b3adacce5348afa8061a9b3e17f1b056c2e8",
          "url": "https://github.com/coinbase/rest-hooks/commit/14b93f67f0589df5813909e0c1acd4cacad0a3ee"
        },
        "date": 1670028052503,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 87.38,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4649,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 40.23,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.62,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 44.95,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 44.72,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "receiveLong",
            "value": 86.63,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 55.93,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 75.81,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "5d5abdd67097ccd24ea4a222238640ae0b81f8d6",
          "message": "docs: Update types",
          "timestamp": "2022-12-04T20:57:32-06:00",
          "tree_id": "2e488893e0923d2ddfbfe7d2bf0d2065b28c5643",
          "url": "https://github.com/coinbase/rest-hooks/commit/5d5abdd67097ccd24ea4a222238640ae0b81f8d6"
        },
        "date": 1670209770223,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 78.37,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4425,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.77,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 40.46,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 41.42,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 40.43,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "receiveLong",
            "value": 73.7,
            "range": "±3.45%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 48.68,
            "range": "±2.36%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 69.33,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f8009d9849cfb784f072a1078b4d12b37d59a04",
          "message": "enhance: Reduce bundlesize via custom Object.hasOwn polyfill (#2322)",
          "timestamp": "2022-12-06T13:22:44-08:00",
          "tree_id": "99a078c47fd7aa35592580b2e85482682b463828",
          "url": "https://github.com/coinbase/rest-hooks/commit/1f8009d9849cfb784f072a1078b4d12b37d59a04"
        },
        "date": 1670362061450,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 93.55,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5505,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.16,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.71,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 48.22,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 47.96,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 94,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 61.51,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 80.09,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "6706fb45ea5c8a3183cb9b216d8c9fec69c2f4b6",
          "message": "internal: publish\n\n - @rest-hooks/core@4.1.2\n - @rest-hooks/endpoint@3.2.5\n - @rest-hooks/graphql@0.3.8\n - @rest-hooks/legacy@5.2.2\n - @rest-hooks/normalizr@9.3.3\n - @rest-hooks/react@7.1.2\n - rest-hooks@7.0.3\n - @rest-hooks/rest@6.2.3\n - @rest-hooks/ssr@0.7.2\n - @rest-hooks/test@9.1.2",
          "timestamp": "2022-12-06T15:42:17-06:00",
          "tree_id": "c3dd1842976e7cedb8474542fa1cf6cb5e719964",
          "url": "https://github.com/coinbase/rest-hooks/commit/6706fb45ea5c8a3183cb9b216d8c9fec69c2f4b6"
        },
        "date": 1670363897882,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 102,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5576,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.01,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 49.02,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 49.09,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 49.15,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 102,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 64.63,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 83.51,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b76c134cd8d0675c0eef7413ba3fddb6262443cb",
          "message": "docs: Add 7, 7.1 blog; new intro (#2326)",
          "timestamp": "2022-12-17T17:13:53-06:00",
          "tree_id": "5bd318f46f8fa2bf4b3d792030b71bda5c86175f",
          "url": "https://github.com/coinbase/rest-hooks/commit/b76c134cd8d0675c0eef7413ba3fddb6262443cb"
        },
        "date": 1671319118719,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 98.59,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7152,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.8,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 50.88,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 50.9,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 50.41,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLong",
            "value": 98.17,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 64.53,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 87.23,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "46e3b630dc66af54979eafbfc3c49847a4553f3f",
          "message": "feat: Add ctrl.setResponse, ctrl.setError (#2331)",
          "timestamp": "2022-12-17T15:51:44-08:00",
          "tree_id": "8c2c5907b5ca7c7c61ff1e46235439c26ba5e2b6",
          "url": "https://github.com/coinbase/rest-hooks/commit/46e3b630dc66af54979eafbfc3c49847a4553f3f"
        },
        "date": 1671321383509,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 96.39,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7307,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.07,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 54.07,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 53.86,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 53.45,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.32,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 64.54,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 88.11,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "73c8d9f4b403412cd766955305461aa7d8ebb462",
          "message": "docs: Updates to the docs (#2335)",
          "timestamp": "2022-12-20T21:30:18-06:00",
          "tree_id": "4f09a5a1cd22600083cbd65ab5598d3b8b1a6474",
          "url": "https://github.com/coinbase/rest-hooks/commit/73c8d9f4b403412cd766955305461aa7d8ebb462"
        },
        "date": 1671593698007,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 96.85,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5584,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.11,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.09,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 51.59,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 51.74,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 98.08,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 65.05,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 87.82,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2cc99b99aeece58b0e7674ca80d3372555612c63",
          "message": "pkg: Update babel packages (#2339)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2022-12-22T13:01:46-08:00",
          "tree_id": "1cc344ed5bbe2a01246202a6c0ab69c5ad92bc1d",
          "url": "https://github.com/coinbase/rest-hooks/commit/2cc99b99aeece58b0e7674ca80d3372555612c63"
        },
        "date": 1671743194367,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 95.48,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5586,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.93,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 50.73,
            "range": "±3.66%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 51.41,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 51.13,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 95.39,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 62.79,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 83.33,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "52c2f83d20106f8557ef8538a348c4bbac77dd53",
          "message": "docs: Yet another docs change pr (#2338)",
          "timestamp": "2022-12-22T18:36:30-06:00",
          "tree_id": "1290bb837b5a5050d997ed8dc7ed2db453cad75c",
          "url": "https://github.com/coinbase/rest-hooks/commit/52c2f83d20106f8557ef8538a348c4bbac77dd53"
        },
        "date": 1671756083864,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 97.02,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5559,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.53,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.04,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 50.4,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 50.19,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.71,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 63.77,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 84.94,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "0557cd94d9abbadad371c4bdf87e9013101e66a1",
          "message": "docs: Add note about rest versions in upgrade guide",
          "timestamp": "2022-12-23T12:33:10-06:00",
          "tree_id": "80541783ca72ce24aecbfcfb56a0fb9c0fd23e0a",
          "url": "https://github.com/coinbase/rest-hooks/commit/0557cd94d9abbadad371c4bdf87e9013101e66a1"
        },
        "date": 1671821087040,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 106,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7246,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.34,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 54.03,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 53.01,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 53.28,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLong",
            "value": 107,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 68.68,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 88.06,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "28c23a10cdc3be78da2c0d125ccddfecea7fd742",
          "message": "pkg: Update all non-major dependencies (#2347)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-01-04T05:18:11-06:00",
          "tree_id": "8a76bc39fddce1cdd3f6ce548584ba7c95283039",
          "url": "https://github.com/coinbase/rest-hooks/commit/28c23a10cdc3be78da2c0d125ccddfecea7fd742"
        },
        "date": 1672831385993,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 99.56,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5558,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.99,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.05,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 47.4,
            "range": "±4.12%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 48.09,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.74,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 62.75,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 82.35,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5d0a68ea00b021effeae185fcdea415cf50c0328",
          "message": "pkg: Update babel packages (#2348)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-01-05T08:38:43-06:00",
          "tree_id": "2a84b7ffaf2baac4b6d2f9e758d3c694d5b55c47",
          "url": "https://github.com/coinbase/rest-hooks/commit/5d0a68ea00b021effeae185fcdea415cf50c0328"
        },
        "date": 1672929827903,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 93.9,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7221,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.51,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 51.35,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 50.73,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 50.64,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.08,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 64.31,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 88.03,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "8d55a3e12e62da52f863a9e14bcb52615431ceea",
          "message": "internal: publish\n\n - @rest-hooks/core@4.1.4\n - @rest-hooks/endpoint@3.2.7\n - @rest-hooks/experimental@9.2.4\n - @rest-hooks/graphql@0.3.10\n - @rest-hooks/hooks@3.1.3\n - @rest-hooks/img@0.8.3\n - @rest-hooks/legacy@5.2.4\n - @rest-hooks/normalizr@9.3.5\n - @rest-hooks/react@7.1.4\n - @rest-hooks/redux@6.2.3\n - rest-hooks@7.0.5\n - @rest-hooks/rest@6.2.5\n - @rest-hooks/ssr@0.7.4\n - @rest-hooks/test@9.1.4\n - @rest-hooks/use-enhanced-reducer@1.2.3",
          "timestamp": "2023-01-12T12:23:53Z",
          "tree_id": "c1d32ccb869e29e40b2d59c309d490f6a981f5fc",
          "url": "https://github.com/coinbase/rest-hooks/commit/8d55a3e12e62da52f863a9e14bcb52615431ceea"
        },
        "date": 1673573794438,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 91.25,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5626,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 45.55,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.7,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 48.36,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 48.45,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLong",
            "value": 90.98,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 60.25,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 80.55,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d3498ea396dfbfdc745ec6e68920a714d8870fe8",
          "message": "pkg: Update linting packages (#2351)\n\n* pkg: Update linting packages\r\n\r\n* internal: Formatting to match prettier update\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-01-13T07:10:29-08:00",
          "tree_id": "93552145d6bd03a36f33a94db008782781de645f",
          "url": "https://github.com/coinbase/rest-hooks/commit/d3498ea396dfbfdc745ec6e68920a714d8870fe8"
        },
        "date": 1673622930246,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 93.73,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7306,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.21,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.25,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 51.24,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 51.73,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 93.45,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 62.87,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 83.19,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "365bf04cc2dcef81a87d4c830c0a6c689eb32044",
          "message": "internal: publish\n\n - @rest-hooks/core@4.1.5\n - @rest-hooks/endpoint@3.2.8\n - @rest-hooks/graphql@0.3.11\n - @rest-hooks/hooks@3.1.4\n - @rest-hooks/legacy@5.2.5\n - @rest-hooks/normalizr@9.3.6\n - @rest-hooks/react@7.1.5\n - rest-hooks@7.0.6\n - @rest-hooks/rest@6.2.6\n - @rest-hooks/use-enhanced-reducer@1.2.4",
          "timestamp": "2023-01-14T09:02:19-06:00",
          "tree_id": "02862737d1b9788b999e855f7573d2a8da5de487",
          "url": "https://github.com/coinbase/rest-hooks/commit/365bf04cc2dcef81a87d4c830c0a6c689eb32044"
        },
        "date": 1673720304473,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 82.62,
            "range": "±2.99%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5563,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.07,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.69,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 45.47,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 44.82,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 84.43,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 54.73,
            "range": "±2.97%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 74.5,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3a99f9693b2542fe0014af8fe7790d37f11f5999",
          "message": "pkg: Update all non-major dependencies (#2362)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-01-15T09:16:54-08:00",
          "tree_id": "31ce924b02ba6b5a3913238d3e07a06010942b0d",
          "url": "https://github.com/coinbase/rest-hooks/commit/3a99f9693b2542fe0014af8fe7790d37f11f5999"
        },
        "date": 1673803331817,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84.01,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7041,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.09,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 44.44,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 44.04,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 43.61,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "receiveLong",
            "value": 83.14,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 54.06,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 76.61,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "e86a38a66e3e1b1c8b09df56578541cc1f47890c",
          "message": "fix: Handle null schemas properly",
          "timestamp": "2023-01-20T08:37:17-06:00",
          "tree_id": "5e91f3bbcd9ed54ea747fbb2cd52866f2904f282",
          "url": "https://github.com/coinbase/rest-hooks/commit/e86a38a66e3e1b1c8b09df56578541cc1f47890c"
        },
        "date": 1674226071442,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 98.72,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7246,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.45,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.59,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 45.49,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 44.87,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 99.4,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 63.43,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 79.86,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "5d27807e389b5d54234a695e39a8226c2d987690",
          "message": "internal: Update tests\n\ninternal: update tests",
          "timestamp": "2023-01-22T12:56:32-06:00",
          "tree_id": "6a22186e5cd9e686ec5ca3e54cdd7d0b6b960c24",
          "url": "https://github.com/coinbase/rest-hooks/commit/5d27807e389b5d54234a695e39a8226c2d987690"
        },
        "date": 1674414565692,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 89.97,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7368,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 44.97,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 50.72,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 50.14,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 49.92,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLong",
            "value": 90.1,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 61.34,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 80.95,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "305debd269216444519d80c351fd63805a974343",
          "message": "pkg: Update linting packages (#2376)\n\n* pkg: Update linting packages\r\n\r\n* internal: Format code with updated linters\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-01-22T13:46:50-08:00",
          "tree_id": "1f051c47c9e96de2553f624ed05006b951fc4595",
          "url": "https://github.com/coinbase/rest-hooks/commit/305debd269216444519d80c351fd63805a974343"
        },
        "date": 1674424309963,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 92.78,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7244,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.21,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 53.35,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 51.86,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 52.35,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 92.95,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 64.19,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 82.25,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "86c630b4b313679c7a441cc7fa060dfb9005d1da",
          "message": "docs: Update docs for @rest-hooks/test@10",
          "timestamp": "2023-01-23T09:14:40-06:00",
          "tree_id": "777eb318f255f03ed9c7efb9a48c3f4b83f47b24",
          "url": "https://github.com/coinbase/rest-hooks/commit/86c630b4b313679c7a441cc7fa060dfb9005d1da"
        },
        "date": 1674495742108,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 97.07,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7262,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 46.41,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 49.45,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 49.29,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 49.04,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "receiveLong",
            "value": 98.69,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 63.84,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 81.73,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "653add95a53d42790b84cc6573f08d858142d81e",
          "message": "docs: Update invalidate demo on expiry concept page",
          "timestamp": "2023-01-24T10:31:42-08:00",
          "tree_id": "6d9a59918fb3a569bdc2466fd9bf00412492d58e",
          "url": "https://github.com/coinbase/rest-hooks/commit/653add95a53d42790b84cc6573f08d858142d81e"
        },
        "date": 1674585452186,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 84.76,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4960,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.16,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 46.96,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 46.74,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 46.06,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "receiveLong",
            "value": 82.25,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 55.21,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 71.53,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "e2ac3222a0cfd1d3698787f8eb2bcc433636dbcf",
          "message": "docs: Add Entity.mergeWithStore()",
          "timestamp": "2023-01-28T08:58:13-06:00",
          "tree_id": "20b0027594559d68a2892a4199edfb42c62b274b",
          "url": "https://github.com/coinbase/rest-hooks/commit/e2ac3222a0cfd1d3698787f8eb2bcc433636dbcf"
        },
        "date": 1674918639613,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 98.24,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7268,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.27,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.21,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 47.94,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 47.33,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 98.23,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 66.13,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 81.22,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "e33e15580c309a3453ba57afec006e496f64c23b",
          "message": "fix: Improve resource endpoint .extend() works with searchParams (#2386)",
          "timestamp": "2023-01-28T17:19:41-08:00",
          "tree_id": "d3d94886c22bae1e29f8690070f0ecda921c25f1",
          "url": "https://github.com/coinbase/rest-hooks/commit/e33e15580c309a3453ba57afec006e496f64c23b"
        },
        "date": 1674955476168,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 97.41,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7310,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.04,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 48.18,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 48,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 47.75,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 97.11,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 67.97,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 82.87,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "4a894fe813a2ba241a17f0e4afd5cbb58c8a7b8f",
          "message": "docs: Update website with new release",
          "timestamp": "2023-01-29T10:40:39-06:00",
          "tree_id": "78e8c3a9e80481c4c254acfda47116391c505482",
          "url": "https://github.com/coinbase/rest-hooks/commit/4a894fe813a2ba241a17f0e4afd5cbb58c8a7b8f"
        },
        "date": 1675011167470,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 94.42,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5671,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 47.31,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 52.09,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 50.91,
            "range": "±4.62%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 51.68,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.06,
            "range": "±2.98%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 65.07,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 85.27,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45faab1962cad292d1f77a0a997e8c321a6917db",
          "message": "docs: Update github organization to data-client (#2396)",
          "timestamp": "2023-01-30T14:06:43-08:00",
          "tree_id": "27aaf119e023d2400344f8da5ae1a4915ed6137e",
          "url": "https://github.com/data-client/rest-hooks/commit/45faab1962cad292d1f77a0a997e8c321a6917db"
        },
        "date": 1675118145343,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 93.04,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7175,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 44.85,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 47.19,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 47.56,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 47.61,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLong",
            "value": 94.5,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 64.12,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 94.2,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": false,
          "id": "45b40604ea463629e63808964090c4f2a175172c",
          "message": "internal: publish\n\n - @rest-hooks/core@4.2.1\n - @rest-hooks/endpoint@3.4.1\n - @rest-hooks/experimental@9.3.2\n - @rest-hooks/graphql@0.3.14\n - @rest-hooks/hooks@3.1.7\n - @rest-hooks/img@0.8.4\n - @rest-hooks/legacy@6.0.1\n - @rest-hooks/normalizr@9.4.1\n - @rest-hooks/react@7.2.1\n - @rest-hooks/redux@6.3.1\n - rest-hooks@7.0.9\n - @rest-hooks/rest@6.3.3\n - @rest-hooks/ssr@0.7.8\n - @rest-hooks/test@10.1.1\n - @rest-hooks/use-enhanced-reducer@1.2.5",
          "timestamp": "2023-01-30T17:03:07-06:00",
          "tree_id": "85b8545735fdfc868f9ffa4988555d24cbf5b491",
          "url": "https://github.com/data-client/rest-hooks/commit/45b40604ea463629e63808964090c4f2a175172c"
        },
        "date": 1675120482770,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 86.52,
            "range": "±3.07%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7138,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 43.76,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 45.75,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 45.88,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 45.95,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "receiveLong",
            "value": 87.81,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 59.7,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 85.92,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5bb49592494a8786ab8504c4c822d39c3023744c",
          "message": "internal: Code formatting",
          "timestamp": "2023-01-31T10:54:22-06:00",
          "tree_id": "541a73440f7da1fa08745239643a5c2a3e1b7105",
          "url": "https://github.com/data-client/rest-hooks/commit/5bb49592494a8786ab8504c4c822d39c3023744c"
        },
        "date": 1675184358987,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 89.66,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5609,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 42.69,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 46.74,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 47.07,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 45.99,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "receiveLong",
            "value": 88.91,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 62.42,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 91.35,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1b628bcca7dd1044b31cdae41574c64aa147d48",
          "message": "pkg: Update JS test packages (#2391)\n\n* pkg: Update JS test packages\r\n\r\n* internal(fix): Restore warn mock\r\n\r\n---------\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-02-06T12:50:34-08:00",
          "tree_id": "80ed91821d60248e75822e8ef630ea231595498f",
          "url": "https://github.com/data-client/rest-hooks/commit/c1b628bcca7dd1044b31cdae41574c64aa147d48"
        },
        "date": 1675717002894,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 79.75,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4749,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 37.15,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 41.17,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 41.84,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 40.71,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "receiveLong",
            "value": 74.76,
            "range": "±2.63%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "receiveLongWithMerge",
            "value": 52.21,
            "range": "±2.93%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "receiveLongWithSimpleMerge",
            "value": 76.87,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f851da99be356c5805d76fb3b2242cd84966e5e",
          "message": "internal(build): Hoist sourcemap inline to babel.config (#2421)",
          "timestamp": "2023-02-09T09:01:14-08:00",
          "tree_id": "184cda04fe36a5766ef51bc974b835c7eb9d7b48",
          "url": "https://github.com/data-client/rest-hooks/commit/5f851da99be356c5805d76fb3b2242cd84966e5e"
        },
        "date": 1675962400352,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 264,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4486,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 121,
            "range": "±2.98%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 133,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 134,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 126,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "getResponse",
            "value": 133,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLong",
            "value": 262,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 102,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5cebe8be96d17e5799e3a2298ebf6516e7aacdc3",
          "message": "internal: Run benchmark when bench dir changes",
          "timestamp": "2023-02-09T11:58:05-06:00",
          "tree_id": "8ecddabf3e56a5019c9142db82cb449fb4fd2777",
          "url": "https://github.com/data-client/rest-hooks/commit/5cebe8be96d17e5799e3a2298ebf6516e7aacdc3"
        },
        "date": 1675965760993,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 392,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7181,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 179,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 193,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 187,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 188,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 185,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 392,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 138,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "41153c63f9e3b32ef48cf6a3f0a81d1d1185c17b",
          "message": "feat: Entity.createIfValid() lifecycle (#2417)",
          "timestamp": "2023-02-10T13:57:10-08:00",
          "tree_id": "a9cea8c2de4841bc9d14c949f77a4930d85118fd",
          "url": "https://github.com/data-client/rest-hooks/commit/41153c63f9e3b32ef48cf6a3f0a81d1d1185c17b"
        },
        "date": 1676066498783,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 388,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7187,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 176,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 207,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 203,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 200,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse",
            "value": 200,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 384,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 131,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f67b8255f9938fce2a125df5c31eb73380bc844",
          "message": "enhance: Alert users of class mangling issues (#2428)",
          "timestamp": "2023-02-10T15:48:47-08:00",
          "tree_id": "a7a87660a283c34b6680deaa3426b264288f9422",
          "url": "https://github.com/data-client/rest-hooks/commit/7f67b8255f9938fce2a125df5c31eb73380bc844"
        },
        "date": 1676073195784,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 377,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7111,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 173,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 205,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 198,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 194,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 201,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 381,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "617bfcfad80ce8fc3b7c83f5b45bac6848d6bab0",
          "message": "enhance: Distinctly handle legacy and new actions (#2429)",
          "timestamp": "2023-02-10T16:08:21-08:00",
          "tree_id": "0debcd02e2ae313c90d019921823751743b692d7",
          "url": "https://github.com/data-client/rest-hooks/commit/617bfcfad80ce8fc3b7c83f5b45bac6848d6bab0"
        },
        "date": 1676074365831,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 389,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7159,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 177,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 199,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 199,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 196,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse",
            "value": 201,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 380,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 136,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5f6a39b42b586743b966fc7c2eac401991c84ac6",
          "message": "internal: Add key to Entities in benchmark",
          "timestamp": "2023-02-10T19:01:30-06:00",
          "tree_id": "27f19fdec0b9e85faf50040ff9ba7fe09b9f2edd",
          "url": "https://github.com/data-client/rest-hooks/commit/5f6a39b42b586743b966fc7c2eac401991c84ac6"
        },
        "date": 1676077561070,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 417,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7184,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 198,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 231,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 227,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 222,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 228,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 422,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 140,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b2489032c8ebc8f542fccafa046df906f52cab72",
          "message": "feat: Allow direct assignment to Entity.key (#2430)",
          "timestamp": "2023-02-11T09:00:14-08:00",
          "tree_id": "bc0510609cdd45b7382277e03d75ade94af240b8",
          "url": "https://github.com/data-client/rest-hooks/commit/b2489032c8ebc8f542fccafa046df906f52cab72"
        },
        "date": 1676135082068,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 409,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7194,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 198,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 216,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 209,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 203,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 204,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 398,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 137,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26fbbe5cf048e85986b06f35f04d1409c24b6a71",
          "message": "internal(fix): Fix benchmark (#2432)",
          "timestamp": "2023-02-11T09:51:13-08:00",
          "tree_id": "fac3b0d3ec02d456f989ca40b7f18b0a7625b4ed",
          "url": "https://github.com/data-client/rest-hooks/commit/26fbbe5cf048e85986b06f35f04d1409c24b6a71"
        },
        "date": 1676138135775,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 275,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5677,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 161,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 160,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 157,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 154,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse",
            "value": 157,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 248,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 263,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "c48f4a07da79218359377a86d3bf79e976025052",
          "message": "internal: Make benchmark only use Endpoint to encourage monomorphism",
          "timestamp": "2023-02-11T13:13:17-06:00",
          "tree_id": "379b9585cb35a228835a83287e7cd41256ec9c9a",
          "url": "https://github.com/data-client/rest-hooks/commit/c48f4a07da79218359377a86d3bf79e976025052"
        },
        "date": 1676143063027,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 296,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5682,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 195,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 227,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 227,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 221,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 229,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 305,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 297,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 135,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5cc8c8d8521d5eb1e07965635b2cf764cba38806",
          "message": "internal: Make benchmark only use Endpoint to encourage monomorphism",
          "timestamp": "2023-02-11T13:12:47-06:00",
          "tree_id": "a5ff87122417946c77399abd011ee49d41a5ff7e",
          "url": "https://github.com/data-client/rest-hooks/commit/5cc8c8d8521d5eb1e07965635b2cf764cba38806"
        },
        "date": 1676143070211,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 298,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4746,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 151,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 189,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 185,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 185,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse",
            "value": 189,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 339,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 306,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 113,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 121,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "822804aa95a521a46390c60b1f4c8675572688a0",
          "message": "internal: Make benchmark only use Endpoint to encourage monomorphism",
          "timestamp": "2023-02-11T13:15:03-06:00",
          "tree_id": "0117d7e2ddb76fbd1fad31e5a3ed87debf854cf0",
          "url": "https://github.com/data-client/rest-hooks/commit/822804aa95a521a46390c60b1f4c8675572688a0"
        },
        "date": 1676143168612,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 292,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5660,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 179,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 222,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 216,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 213,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 219,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 288,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 287,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ff0f8f93fff820ab12868259f75b81ff44d6267c",
          "message": "internal: Simplify benchmark for github User (#2433)",
          "timestamp": "2023-02-11T11:51:51-08:00",
          "tree_id": "1aaa041ed6d89ef04363ffc3c1960d944969d5f9",
          "url": "https://github.com/data-client/rest-hooks/commit/ff0f8f93fff820ab12868259f75b81ff44d6267c"
        },
        "date": 1676145370004,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 287,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5688,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 184,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 224,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 219,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 216,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 221,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 605,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 288,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 130,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64eb635bbef725abfab4537e15ae7cb1c467abc9",
          "message": "enhance: Denormalize code clean and slight optimize (#2434)",
          "timestamp": "2023-02-11T17:06:36-08:00",
          "tree_id": "240d7b1dad83b50f03e00ea6b5d8e57c1e144cdc",
          "url": "https://github.com/data-client/rest-hooks/commit/64eb635bbef725abfab4537e15ae7cb1c467abc9"
        },
        "date": 1676164293019,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 245,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4802,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 165,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 203,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 198,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 193,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 198,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 519,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 246,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 104,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 110,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "395e3d8ca554552736b4b7c3c3af823ca6290ae9",
          "message": "enhance: Use self-overwriting memoization pattern (#2437)",
          "timestamp": "2023-02-13T18:43:30-08:00",
          "tree_id": "ffbc688e90aad727866dc7e53ffb6d334e9ca2e1",
          "url": "https://github.com/data-client/rest-hooks/commit/395e3d8ca554552736b4b7c3c3af823ca6290ae9"
        },
        "date": 1676342871779,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 284,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5668,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 189,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 231,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 226,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 223,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 227,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 622,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 286,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 129,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "88750ee92c635dc101c832f829cea1ed4accd455",
          "message": "enhance: Use self-overwriting pattern to limit error spam (#2438)",
          "timestamp": "2023-02-13T18:55:03-08:00",
          "tree_id": "5c78f8b3ae095c40243b6d793991b189acd77c9e",
          "url": "https://github.com/data-client/rest-hooks/commit/88750ee92c635dc101c832f829cea1ed4accd455"
        },
        "date": 1676343573774,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 345,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7122,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 211,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 245,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 242,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 237,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse",
            "value": 246,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 606,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 342,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 134,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "8d3be93d44408c4b2b565486df25a30df543f21f",
          "message": "internal: publish\n\n - @rest-hooks/core@4.2.3\n - @rest-hooks/endpoint@3.5.1\n - @rest-hooks/graphql@0.3.16\n - @rest-hooks/hooks@3.1.9\n - @rest-hooks/img@0.8.6\n - @rest-hooks/normalizr@9.5.1\n - @rest-hooks/react@7.2.3\n - rest-hooks@7.0.11\n - @rest-hooks/rest@6.3.5",
          "timestamp": "2023-02-13T21:06:41-06:00",
          "tree_id": "7d0adc5a929ee9023100b488f13242ee6ab119c9",
          "url": "https://github.com/data-client/rest-hooks/commit/8d3be93d44408c4b2b565486df25a30df543f21f"
        },
        "date": 1676344273247,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 333,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7083,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 205,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 249,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 246,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 242,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 248,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 625,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 340,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 127,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 134,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "44e85349f129c8c611412b7e0a824fea6895e214",
          "message": "fix: Entity.defaults should work with inheritance (#2440)",
          "timestamp": "2023-02-14T08:27:28-08:00",
          "tree_id": "a9e88ca874e895698df84c31af46d80290698f84",
          "url": "https://github.com/data-client/rest-hooks/commit/44e85349f129c8c611412b7e0a824fea6895e214"
        },
        "date": 1676392312795,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 293,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5820,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 192,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 236,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 231,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 226,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 227,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 606,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 289,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 123,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 133,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "28f3fe8890da119c7fa6498d4617a66da74ed0b4",
          "message": "enhance: Use null-object over Object.hasOwn when possible (#2441)",
          "timestamp": "2023-02-14T10:03:40-08:00",
          "tree_id": "a01ea9d578fd04369bcc090f636b276c7a61ee0f",
          "url": "https://github.com/data-client/rest-hooks/commit/28f3fe8890da119c7fa6498d4617a66da74ed0b4"
        },
        "date": 1676398099124,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 340,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7056,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 209,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 252,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 251,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 245,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 249,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 641,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 338,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f963675ecde98b9008cedef192b938654a59de05",
          "message": "enhance: Global denormalize cache lookups up to 25x faster (#2444)",
          "timestamp": "2023-02-19T11:04:50-08:00",
          "tree_id": "754c04b434d96c1784492b3d283980b8c9a3c0a5",
          "url": "https://github.com/data-client/rest-hooks/commit/f963675ecde98b9008cedef192b938654a59de05"
        },
        "date": 1676833786331,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 243,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4798,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 122,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3516,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4196,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4227,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3973,
            "range": "±3.65%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1510,
            "range": "±3.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 249,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 102,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 107,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3da7e5450e4e402f08415d1be9beefbb10c3ee74",
          "message": "internal: Add getResponse Query-sorted bench",
          "timestamp": "2023-02-20T10:26:01-06:00",
          "tree_id": "73ccaa99c63faa5b93888902186c700c58e18156",
          "url": "https://github.com/data-client/rest-hooks/commit/3da7e5450e4e402f08415d1be9beefbb10c3ee74"
        },
        "date": 1676910630375,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 264,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5657,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 142,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4062,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4907,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4687,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 3867,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1765,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 471,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 264,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 122,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 132,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3c4d50569e2daa275c1f8ef886fea0ace23b5101",
          "message": "internal: Extract some of the result cache logic",
          "timestamp": "2023-02-20T11:43:28-06:00",
          "tree_id": "1100f6f453432c4a33d9dc5745f7a3111234824c",
          "url": "https://github.com/data-client/rest-hooks/commit/3c4d50569e2daa275c1f8ef886fea0ace23b5101"
        },
        "date": 1676915347315,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 219,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4429,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 106,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3217,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3573,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3503,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse",
            "value": 3553,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1388,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 346,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLong",
            "value": 220,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 92.16,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 98.35,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "05855b4b4d74b03a2fbe67d6f0bb7f3863280856",
          "message": "enhance: Denormalize optimizations (#2445)",
          "timestamp": "2023-02-20T11:19:19-08:00",
          "tree_id": "836c2ebd6e1b3327278ec83dd6ea5df11bb909af",
          "url": "https://github.com/data-client/rest-hooks/commit/05855b4b4d74b03a2fbe67d6f0bb7f3863280856"
        },
        "date": 1676921040567,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 314,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7222,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 171,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5070,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5728,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5745,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5634,
            "range": "±3.49%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1789,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 549,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 311,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 134,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "4be7330a58ae48d162a641c5f98c553822110b86",
          "message": "internal: Add getSmallInferredResponse bench",
          "timestamp": "2023-02-20T14:04:58-06:00",
          "tree_id": "debdfde4aac116b4d35787a38b0fe9512955e652",
          "url": "https://github.com/data-client/rest-hooks/commit/4be7330a58ae48d162a641c5f98c553822110b86"
        },
        "date": 1676923773855,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 290,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5819,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 167,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4242,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5014,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4940,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 4401,
            "range": "±2.75%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1836,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1191,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 509,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 293,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 123,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 132,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "32de97fb1d37f95a13ef6cd524c29c008d870482",
          "message": "fix: Correct `expiresAt` computation when cached + inferred results (#2447)",
          "timestamp": "2023-02-20T17:02:27-08:00",
          "tree_id": "cd5edf63cd8f5cf772593beb9c99ca8acfcd49bc",
          "url": "https://github.com/data-client/rest-hooks/commit/32de97fb1d37f95a13ef6cd524c29c008d870482"
        },
        "date": 1676941649415,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 259,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4993,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 119,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3463,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4047,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4156,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3810,
            "range": "±4.18%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1644,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1481,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 382,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 250,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 107,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 113,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "fa8dd141dc68b7be8ee063ecc012c88a3f4eae62",
          "message": "internal: Add code comment\n\nBREAKING CHANGE:\n- Denormalize fourth value is now an array of entity paths\n- Denormalize resultCache expects a WeakMap\n- Removed WeakListMap export",
          "timestamp": "2023-02-21T08:03:45-06:00",
          "tree_id": "eceeb2e1251348693ecdb907a1125c8e76874366",
          "url": "https://github.com/data-client/rest-hooks/commit/fa8dd141dc68b7be8ee063ecc012c88a3f4eae62"
        },
        "date": 1676988746948,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 320,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7182,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 148,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4707,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5717,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5639,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5259,
            "range": "±3.75%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1859,
            "range": "±3.74%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1671,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 545,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 312,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 127,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 135,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "14bd76225701b8d443fc41d006995da3c2532050",
          "message": "enhance: Do not key on schema in result cache (#2448)",
          "timestamp": "2023-02-21T07:07:30-08:00",
          "tree_id": "5c429d08c1b70308f6839fee9759c6ff4d980b4a",
          "url": "https://github.com/data-client/rest-hooks/commit/14bd76225701b8d443fc41d006995da3c2532050"
        },
        "date": 1676992393836,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 234,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4742,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 99.38,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3451,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3795,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3732,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 3595,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1296,
            "range": "±3.12%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1230,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 315,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLong",
            "value": 228,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 89.91,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 93.68,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "1a836e43286f1866b62b61789f824f02ba0674d0",
          "message": "enhance: Make Entity.__defaults non-enumerable",
          "timestamp": "2023-02-21T09:27:56-06:00",
          "tree_id": "b493ed119a8d4d91a8980bf1e379dfb842dd899e",
          "url": "https://github.com/data-client/rest-hooks/commit/1a836e43286f1866b62b61789f824f02ba0674d0"
        },
        "date": 1676993581431,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 349,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7198,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 149,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5647,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5744,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5421,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5169,
            "range": "±3.62%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1907,
            "range": "±3.62%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1427,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 523,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 349,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 133,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "8b0eda4d5e129ba0a02d704a65cdfeb402bafc4f",
          "message": "internal: publish\n\n - @rest-hooks/core@4.2.4\n - @rest-hooks/endpoint@3.6.0\n - @rest-hooks/experimental@9.3.4\n - @rest-hooks/graphql@0.4.0\n - @rest-hooks/hooks@3.1.10\n - @rest-hooks/img@0.8.7\n - @rest-hooks/normalizr@10.0.0\n - @rest-hooks/react@7.2.4\n - rest-hooks@7.0.12\n - @rest-hooks/rest@6.3.6\n - @rest-hooks/test@10.2.0",
          "timestamp": "2023-02-21T11:17:35-06:00",
          "tree_id": "bd3e3bd5e49f441584d34327ed7e599d350998f1",
          "url": "https://github.com/data-client/rest-hooks/commit/8b0eda4d5e129ba0a02d704a65cdfeb402bafc4f"
        },
        "date": 1677000174784,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 227,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5062,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 120,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3261,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3581,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3713,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 3389,
            "range": "±2.39%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1521,
            "range": "±4.02%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1424,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 382,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 233,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 108,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 112,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "efb159de96315c80cffd80838f9941afe59761b8",
          "message": "enhance: Only use mergeWithStore logic when entityMeta exists (#2450)",
          "timestamp": "2023-02-23T09:06:52-08:00",
          "tree_id": "6092c91e33de7dd19c9b65f8cc2195a2a67b8edc",
          "url": "https://github.com/data-client/rest-hooks/commit/efb159de96315c80cffd80838f9941afe59761b8"
        },
        "date": 1677172359346,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 219,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4465,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 101,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3034,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3339,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3271,
            "range": "±2.89%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 3170,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1441,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1125,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 340,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 218,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 92.32,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 94.39,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bdbed37b419c6f4b1b626e5d811f283e187ad7e1",
          "message": "enhance: Optimize index check in normalize (#2451)",
          "timestamp": "2023-02-23T18:21:51-08:00",
          "tree_id": "50970838bb4616ecfa32c2d46e785cb09625288f",
          "url": "https://github.com/data-client/rest-hooks/commit/bdbed37b419c6f4b1b626e5d811f283e187ad7e1"
        },
        "date": 1677205588646,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 260,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5907,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 125,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4758,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4775,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4908,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4237,
            "range": "±2.73%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1881,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1683,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 426,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 253,
            "range": "±2.79%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 127,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "69b6a049861eeefc608f5a5df86b9833021961df",
          "message": "enhance: Allow 'false' as Endpoint.sideEffect (#2452)",
          "timestamp": "2023-02-23T18:58:29-08:00",
          "tree_id": "5373175dd0478eb0a0d12ff0f07246c1e75c4565",
          "url": "https://github.com/data-client/rest-hooks/commit/69b6a049861eeefc608f5a5df86b9833021961df"
        },
        "date": 1677207796915,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 327,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7166,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 137,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4290,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5520,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5561,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4168,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1848,
            "range": "±3.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1649,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 491,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 320,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 131,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 137,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6c5d5db7f5856c21927e9fa389c09ead11e93ea0",
          "message": "feat: Add mixin schema.Entity() (#2449)",
          "timestamp": "2023-02-24T16:56:52-08:00",
          "tree_id": "93fe73310a5fbdc0ba250eb8cf669243ce51776b",
          "url": "https://github.com/data-client/rest-hooks/commit/6c5d5db7f5856c21927e9fa389c09ead11e93ea0"
        },
        "date": 1677286908173,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 342,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7214,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 133,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 141,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5510,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5739,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5708,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5229,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1816,
            "range": "±3.70%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1584,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 502,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 336,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 125,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 134,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "00e57223ebaf18ef2383eddd53cd5978f25d7731",
          "message": "internal: Re-enable accidentally disabled tests",
          "timestamp": "2023-02-24T20:53:56-06:00",
          "tree_id": "f648498ac17a808aabf1ba3f9c4f9fec7374a9a0",
          "url": "https://github.com/data-client/rest-hooks/commit/00e57223ebaf18ef2383eddd53cd5978f25d7731"
        },
        "date": 1677293919711,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 293,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5982,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 131,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 145,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3904,
            "range": "±0.05%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5121,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4700,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4022,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1896,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1624,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 473,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 298,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 125,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 130,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45c4a0ab4ebd6112db75e8c6f09e5ad1add74c8b",
          "message": "pkg: Update babel packages (#2457)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-02-26T13:02:22-08:00",
          "tree_id": "8cdb8adfa80c926fccdff575e9eff706934c56f0",
          "url": "https://github.com/data-client/rest-hooks/commit/45c4a0ab4ebd6112db75e8c6f09e5ad1add74c8b"
        },
        "date": 1677445622454,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 266,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5913,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 134,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 136,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3873,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4986,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4854,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4178,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1801,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1629,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 445,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 261,
            "range": "±2.56%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 125,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 130,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "532a56f7ae8547a7bd7126a8a1206b6853bd95ab",
          "message": "pkg: Update all non-major dependencies (#2459)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-02-26T21:44:55Z",
          "tree_id": "a76c81ce806a54743162aa424be3ddbe51df6e65",
          "url": "https://github.com/data-client/rest-hooks/commit/532a56f7ae8547a7bd7126a8a1206b6853bd95ab"
        },
        "date": 1677448536984,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 266,
            "range": "±2.39%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5910,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 130,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 137,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4062,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4829,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4812,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4479,
            "range": "±3.63%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1758,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1629,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 429,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 257,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 125,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "24e8ec6a5bac201f673d85a6ab9836a2c11502f6",
          "message": "feat: Add Entity lifecycle overrides to mixin options (#2468)",
          "timestamp": "2023-02-28T16:46:59-08:00",
          "tree_id": "c4d3aabfd0aea522815e58e87295d7110464074d",
          "url": "https://github.com/data-client/rest-hooks/commit/24e8ec6a5bac201f673d85a6ab9836a2c11502f6"
        },
        "date": 1677631913858,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 343,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7287,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 139,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 149,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4590,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5819,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5621,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5259,
            "range": "±3.52%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1695,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1632,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 530,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 339,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 133,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "908e6d627daf8de8ce7d07f9cc1d29e8c8399352",
          "message": "fix: Remove accidental import",
          "timestamp": "2023-02-28T18:48:40-06:00",
          "tree_id": "97e25401eacec02c580d9398be3ca191ec211847",
          "url": "https://github.com/data-client/rest-hooks/commit/908e6d627daf8de8ce7d07f9cc1d29e8c8399352"
        },
        "date": 1677632013270,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 328,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7240,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 148,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 163,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4460,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5346,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5390,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5365,
            "range": "±3.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1897,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1672,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 541,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 327,
            "range": "±2.50%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 131,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 137,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "b5df3f876753dd79d9202720edb9fcd8f3e5fa3e",
          "message": "internal: publish\n\n - @rest-hooks/core@4.2.5\n - @rest-hooks/endpoint@3.6.1\n - @rest-hooks/experimental@9.3.5\n - @rest-hooks/graphql@0.4.1\n - @rest-hooks/hooks@3.1.11\n - @rest-hooks/img@0.8.8\n - @rest-hooks/legacy@6.0.3\n - @rest-hooks/normalizr@10.0.1\n - @rest-hooks/react@7.2.5\n - @rest-hooks/redux@6.3.3\n - rest-hooks@7.0.13\n - @rest-hooks/rest@6.3.8\n - @rest-hooks/ssr@0.7.10\n - @rest-hooks/test@10.2.1\n - @rest-hooks/use-enhanced-reducer@1.2.7",
          "timestamp": "2023-03-02T09:35:27-06:00",
          "tree_id": "dc6754e45a31f781d355c74d917468910c882ce5",
          "url": "https://github.com/data-client/rest-hooks/commit/b5df3f876753dd79d9202720edb9fcd8f3e5fa3e"
        },
        "date": 1677771694282,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 205,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4380,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 98.33,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 104,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3091,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3385,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3372,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 3159,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1410,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1065,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 335,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 210,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 87.4,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 89.22,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "64 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b2ac7b6127a2109b6bbb016cc386830bafc3c17a",
          "message": "enhance: Allow DevToolsManager in prod (#2471)",
          "timestamp": "2023-03-05T18:21:24-08:00",
          "tree_id": "b9446fd500afe93af0e1ecdab07c52c7a8fc162f",
          "url": "https://github.com/data-client/rest-hooks/commit/b2ac7b6127a2109b6bbb016cc386830bafc3c17a"
        },
        "date": 1678069561669,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 289,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5961,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 132,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 134,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5455,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4992,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4913,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 4524,
            "range": "±3.03%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1823,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1654,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 465,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 288,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 122,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 129,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b0760808bafe3f0fcacd1c30668343e9b4dd470",
          "message": "docs: Update relational guide (#2472)",
          "timestamp": "2023-03-09T12:32:49-08:00",
          "tree_id": "ee5d3b8aa8640e8d4378b94a092e0ea9dd773c19",
          "url": "https://github.com/data-client/rest-hooks/commit/3b0760808bafe3f0fcacd1c30668343e9b4dd470"
        },
        "date": 1678394265319,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 305,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7185,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 134,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 127,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6157,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5638,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5553,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4750,
            "range": "±2.87%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1843,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1599,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 496,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 304,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 125,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 132,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8945e7a41e3943149fc083693dbf4eb58a466c83",
          "message": "feat: Add FetchInterceptor - a lower-level interceptor (#2479)",
          "timestamp": "2023-03-11T16:28:17-08:00",
          "tree_id": "0409b6bfcda2a848a39bcafa24db1d8a80b17e11",
          "url": "https://github.com/data-client/rest-hooks/commit/8945e7a41e3943149fc083693dbf4eb58a466c83"
        },
        "date": 1678581216232,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 259,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5287,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 122,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 124,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3866,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4260,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4166,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 4213,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1732,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1503,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 439,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 262,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 112,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 115,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "e219f0a91d60d7a31a1ab26d0245b317556eb6e8",
          "message": "fix: Keep same Entity.key algo even when mangling is detected",
          "timestamp": "2023-03-11T20:25:58-06:00",
          "tree_id": "c345d9ad76a13c8e0b0f10d9a1aa9848f33babd2",
          "url": "https://github.com/data-client/rest-hooks/commit/e219f0a91d60d7a31a1ab26d0245b317556eb6e8"
        },
        "date": 1678588306224,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 242,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4797,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 114,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 114,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3397,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3511,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3308,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse",
            "value": 3263,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1457,
            "range": "±3.87%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1186,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 350,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 230,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 96.94,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 104,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "9b654c9b541ea785dcd9636f4ae1755e2344e6be",
          "message": "internal: publish\n\n - @rest-hooks/core@4.2.6\n - @rest-hooks/endpoint@3.7.1\n - @rest-hooks/experimental@9.3.6\n - @rest-hooks/graphql@0.4.2\n - @rest-hooks/img@0.8.9\n - @rest-hooks/legacy@6.0.4\n - @rest-hooks/react@7.2.6\n - rest-hooks@7.0.14\n - @rest-hooks/rest@6.3.9\n - @rest-hooks/test@10.2.2",
          "timestamp": "2023-03-11T23:23:49-06:00",
          "tree_id": "1d4a08b085c88a38321ce00b43f5bc90d9602ac1",
          "url": "https://github.com/data-client/rest-hooks/commit/9b654c9b541ea785dcd9636f4ae1755e2344e6be"
        },
        "date": 1678598920792,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 354,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7257,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 138,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 160,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5671,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5550,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5442,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 5209,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1742,
            "range": "±3.04%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1599,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 537,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 349,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 138,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "922ed06e929151f59b51161629e220824da0b080",
          "message": "internal: Publish test major",
          "timestamp": "2023-03-11T23:32:17-06:00",
          "tree_id": "14371f7af5c1bec5f98717641ae38a546aeea173",
          "url": "https://github.com/data-client/rest-hooks/commit/922ed06e929151f59b51161629e220824da0b080"
        },
        "date": 1678599475353,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 223,
            "range": "±2.63%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4865,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 110,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 115,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3625,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3989,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3968,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 3625,
            "range": "±3.54%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1559,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1276,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 380,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 225,
            "range": "±3.07%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 106,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9d57220d4cb82fa3090f4127b277bcf6b62a34b1",
          "message": "enhance: Include extension in all imports (#2482)",
          "timestamp": "2023-03-13T21:06:56-07:00",
          "tree_id": "75b7389ecec44cbfbd6947b5c91c61dde976461c",
          "url": "https://github.com/data-client/rest-hooks/commit/9d57220d4cb82fa3090f4127b277bcf6b62a34b1"
        },
        "date": 1678767108950,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 344,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7261,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 142,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 160,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4407,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5469,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5564,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5317,
            "range": "±4.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1885,
            "range": "±3.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1640,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 531,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 345,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 134,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3fc9efc0bfc818ae7b4a1113cf6f7daa8bbcba8c",
          "message": "pkg: Update babel packages (#2487)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-03-15T18:34:42Z",
          "tree_id": "9240952c706c4a13c1c552b94019c39cc8dcfc49",
          "url": "https://github.com/data-client/rest-hooks/commit/3fc9efc0bfc818ae7b4a1113cf6f7daa8bbcba8c"
        },
        "date": 1678906004969,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 251,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4935,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 113,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 125,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3495,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4263,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4376,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3841,
            "range": "±3.85%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1617,
            "range": "±4.12%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1368,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 391,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 246,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 106,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 110,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "a1c7373956f3fd885390e13840553c920da4a62f",
          "message": "internal: publish\n\n - @rest-hooks/core@4.2.7\n - @rest-hooks/endpoint@3.7.2\n - @rest-hooks/experimental@9.3.7\n - @rest-hooks/graphql@0.4.3\n - @rest-hooks/hooks@3.1.12\n - @rest-hooks/img@0.8.10\n - @rest-hooks/legacy@6.0.5\n - @rest-hooks/normalizr@10.0.2\n - @rest-hooks/react@7.2.7\n - @rest-hooks/redux@6.3.4\n - rest-hooks@7.0.15\n - @rest-hooks/rest@6.3.10\n - @rest-hooks/ssr@0.7.11\n - @rest-hooks/test@10.3.1\n - @rest-hooks/use-enhanced-reducer@1.2.8",
          "timestamp": "2023-03-15T14:54:09-05:00",
          "tree_id": "c48856939d9444b7daa9ab9a3ce1103e1be411e4",
          "url": "https://github.com/data-client/rest-hooks/commit/a1c7373956f3fd885390e13840553c920da4a62f"
        },
        "date": 1678910331379,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 284,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5904,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 123,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 132,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4173,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5045,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4849,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4309,
            "range": "±3.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1845,
            "range": "±2.89%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1662,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 447,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 284,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 121,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43ea68cc198b4a961a66106f63da48abc17447cc",
          "message": "pkg: Update webpack packages (#2496)\n\n* pkg: Update webpack packages\r\n\r\n* pkg: Consolidate webpack\r\n\r\n---------\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-03-17T19:57:26-07:00",
          "tree_id": "a210bceddb657c1f7de92f5238042c677b97f530",
          "url": "https://github.com/data-client/rest-hooks/commit/43ea68cc198b4a961a66106f63da48abc17447cc"
        },
        "date": 1679108546521,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 281,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5540,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 125,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 125,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3969,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4630,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4551,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4361,
            "range": "±3.71%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1827,
            "range": "±3.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1596,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 445,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 284,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 121,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ea8b4b7a0a6aabcf4808513e5e32406bad6edbc1",
          "message": "internal: Test multiple typescript versions",
          "timestamp": "2023-03-18T19:36:12-05:00",
          "tree_id": "97493dd4f5679a38325f8ef4d4971c44dd27f413",
          "url": "https://github.com/data-client/rest-hooks/commit/ea8b4b7a0a6aabcf4808513e5e32406bad6edbc1"
        },
        "date": 1679186440189,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 263,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5215,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 113,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 119,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3050,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3569,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3497,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse",
            "value": 3634,
            "range": "±2.80%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1759,
            "range": "±3.89%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1662,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 407,
            "range": "±2.74%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLong",
            "value": 267,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 121,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "632041259785761eaa0fbd08d54aaf7d99a7c886",
          "message": "internal(CI): Only build necessary packages (#2503)",
          "timestamp": "2023-03-19T11:02:12-07:00",
          "tree_id": "a9b0d4d889932f895877ab7934bc80357a81106a",
          "url": "https://github.com/data-client/rest-hooks/commit/632041259785761eaa0fbd08d54aaf7d99a7c886"
        },
        "date": 1679249194612,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 320,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7301,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 144,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 160,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4527,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5647,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5715,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5100,
            "range": "±2.78%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1815,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1406,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 533,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 316,
            "range": "±2.39%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 140,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "c0248d68395248454f494f4cb8203ed7a5cdd94a",
          "message": "internal: publish\n\n - @rest-hooks/core@4.2.8\n - @rest-hooks/endpoint@3.7.3\n - @rest-hooks/experimental@9.3.8\n - @rest-hooks/graphql@0.4.4\n - @rest-hooks/hooks@3.1.13\n - @rest-hooks/img@0.8.11\n - @rest-hooks/normalizr@10.0.3\n - @rest-hooks/react@7.2.8\n - @rest-hooks/redux@6.3.5\n - rest-hooks@7.0.16\n - @rest-hooks/rest@6.3.11",
          "timestamp": "2023-03-19T13:42:22-05:00",
          "tree_id": "2570ba11c4bf8d18b58673843accdc37662a70e8",
          "url": "https://github.com/data-client/rest-hooks/commit/c0248d68395248454f494f4cb8203ed7a5cdd94a"
        },
        "date": 1679251585362,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 293,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5595,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 136,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 142,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4845,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4786,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4816,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4343,
            "range": "±3.43%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1876,
            "range": "±3.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1570,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 461,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 295,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 123,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 133,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "natmaster@gmail.com",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "e6bfc4f049e5b6b721c7949032494080c9851b86",
          "message": "internal: Test TypeScript 4.0, 4.1, 4.3 (#2505)",
          "timestamp": "2023-03-21T12:19:39-05:00",
          "tree_id": "d7fa8400ac8cae009048495e9acd032b294e6285",
          "url": "https://github.com/data-client/rest-hooks/commit/e6bfc4f049e5b6b721c7949032494080c9851b86"
        },
        "date": 1679419443075,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 338,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7286,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 146,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 144,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5896,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5764,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5686,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5246,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1823,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1507,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 518,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 345,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 131,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 138,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "1016e7dccc602d3f9232dcd59e588ac27769071f",
          "message": "internal: publish\n\n - @rest-hooks/core@4.2.9\n - @rest-hooks/endpoint@3.7.4\n - @rest-hooks/graphql@0.4.5\n - @rest-hooks/img@0.8.12\n - @rest-hooks/react@7.2.9\n - rest-hooks@7.0.17\n - @rest-hooks/rest@6.3.12",
          "timestamp": "2023-03-21T13:33:06-05:00",
          "tree_id": "820379b7fa94239e8573b65e6e4513c95d815b39",
          "url": "https://github.com/data-client/rest-hooks/commit/1016e7dccc602d3f9232dcd59e588ac27769071f"
        },
        "date": 1679423855947,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 311,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7264,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 136,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 140,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4584,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5565,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5296,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 5329,
            "range": "±3.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1825,
            "range": "±3.68%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1414,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 527,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 313,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 137,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8275294467679ebe4cc7ef15610d892f5b91ffc5",
          "message": "pkg: Update all non-major dependencies (#2526)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-03-27T03:58:51Z",
          "tree_id": "1752c8662e7f5466b9a1e0cdf43629903a80712d",
          "url": "https://github.com/data-client/rest-hooks/commit/8275294467679ebe4cc7ef15610d892f5b91ffc5"
        },
        "date": 1679890156251,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 322,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7326,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 153,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 165,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4663,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5772,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5743,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5236,
            "range": "±3.13%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1887,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1665,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 538,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 319,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 137,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "68afee8516d471f6f39e6c558f0719d2ea6f4993",
          "message": "internal: Centralize common scripts (#2533)",
          "timestamp": "2023-03-27T19:47:35-07:00",
          "tree_id": "067ca2481c210e5ad9140152ba35740f12bf91b0",
          "url": "https://github.com/data-client/rest-hooks/commit/68afee8516d471f6f39e6c558f0719d2ea6f4993"
        },
        "date": 1679971930299,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 347,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7314,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 151,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 165,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4467,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5747,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5679,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5575,
            "range": "±3.79%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1872,
            "range": "±3.81%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1577,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 543,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 347,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 133,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d966e96a9ab3b697f4b07815bf0cc3ada815a99",
          "message": "fix: PnP compatibility improvements (#2535)",
          "timestamp": "2023-03-28T14:29:27-05:00",
          "tree_id": "32c55783e061a742e54ee99c70f0c67eb982ac5f",
          "url": "https://github.com/data-client/rest-hooks/commit/0d966e96a9ab3b697f4b07815bf0cc3ada815a99"
        },
        "date": 1680032026111,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 259,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5466,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 127,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 125,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5270,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4823,
            "range": "±0.04%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4685,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 3940,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1804,
            "range": "±3.00%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1524,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 428,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 256,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 123,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "0c5cee8afb8b4322175043d67453ddf72086fdbb",
          "message": "fix: PnP compatibility improvements (#2535)",
          "timestamp": "2023-03-28T15:45:17-05:00",
          "tree_id": "ffecf1c4af4ad951823e1a3751e27af93afbf5ad",
          "url": "https://github.com/data-client/rest-hooks/commit/0c5cee8afb8b4322175043d67453ddf72086fdbb"
        },
        "date": 1680036583763,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 280,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5541,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 127,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 134,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3890,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4757,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4752,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 4477,
            "range": "±3.26%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1861,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1530,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 408,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 280,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 116,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 125,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "cbcc603dc596d1f249d01993addac12fc0da7635",
          "message": "fix: PnP compatibility improvements (#2535)",
          "timestamp": "2023-03-28T16:30:11-05:00",
          "tree_id": "a3fba5a71bac4a051f6eff4b352e8703ac94c393",
          "url": "https://github.com/data-client/rest-hooks/commit/cbcc603dc596d1f249d01993addac12fc0da7635"
        },
        "date": 1680039270661,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 277,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5491,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 112,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 125,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5155,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5506,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4702,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4308,
            "range": "±3.19%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1822,
            "range": "±3.00%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1641,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 403,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 275,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 110,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 117,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "7f6e97fbe8de762060567fcf0d9c9acb319de60f",
          "message": "fix: PnP compatibility improvements (#2535)",
          "timestamp": "2023-03-28T16:41:15-05:00",
          "tree_id": "c979e93f8597bc3a9db49afb408540aec5486fd6",
          "url": "https://github.com/data-client/rest-hooks/commit/7f6e97fbe8de762060567fcf0d9c9acb319de60f"
        },
        "date": 1680039844447,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 242,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4834,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 113,
            "range": "±3.21%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 118,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3888,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3653,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3490,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 3631,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1551,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1279,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 379,
            "range": "±2.54%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 246,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±3.03%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 106,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "f927a15c1434b20a9fda7f75ba651b48a32aad63",
          "message": "fix: PnP compatibility improvements (#2535)",
          "timestamp": "2023-03-28T16:44:24-05:00",
          "tree_id": "cb49bd9caf888e5c1c18b9358de0faa6985c726c",
          "url": "https://github.com/data-client/rest-hooks/commit/f927a15c1434b20a9fda7f75ba651b48a32aad63"
        },
        "date": 1680040033116,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 243,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4745,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 94.09,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 117,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3049,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3388,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3311,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 3310,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1549,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1288,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 363,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 240,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 101,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "94bc0bf44fac33a6b4851dc37d3fdaf23568ac1d",
          "message": "internal: Publish new version (#2536)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-03-28T21:51:48Z",
          "tree_id": "66561d963390871973323c35d6dccfe7c467d045",
          "url": "https://github.com/data-client/rest-hooks/commit/94bc0bf44fac33a6b4851dc37d3fdaf23568ac1d"
        },
        "date": 1680041034439,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 336,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7233,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 136,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 140,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4371,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5327,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5368,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5103,
            "range": "±3.84%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1792,
            "range": "±3.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1587,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 511,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 337,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ff887774128e60cfd35fea5e268fae09e0dabd2a",
          "message": "pkg: Update all non-major dependencies (#2538)\n\n* pkg: Update all non-major dependencies\n\n* pkg: Fix yarn.lock\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-03-28T23:28:06Z",
          "tree_id": "fe4cd157c4a82afb70bdf8a7223fe5f0103dcf7d",
          "url": "https://github.com/data-client/rest-hooks/commit/ff887774128e60cfd35fea5e268fae09e0dabd2a"
        },
        "date": 1680046732377,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 287,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5540,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 131,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 134,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4081,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5090,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4845,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4372,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1891,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1714,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 464,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 287,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 129,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dbc4d0b84319879cb331526dce9015d2139df91b",
          "message": "fix: Improve subscription edge case handling (#2540)",
          "timestamp": "2023-03-29T17:37:52-07:00",
          "tree_id": "a5b3a01d0f5922568843e1c23fc90963f4330851",
          "url": "https://github.com/data-client/rest-hooks/commit/dbc4d0b84319879cb331526dce9015d2139df91b"
        },
        "date": 1680136813720,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 312,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7276,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 135,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 138,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5744,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5652,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5794,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5242,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1814,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1601,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 507,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 304,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "379e24839190cde5893fd55504975e0c481b6a0f",
          "message": "internal: Publish new version (#2541)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-03-30T01:16:09Z",
          "tree_id": "bc8e8e4d960ec133136516a787ff6d7a55a18dcd",
          "url": "https://github.com/data-client/rest-hooks/commit/379e24839190cde5893fd55504975e0c481b6a0f"
        },
        "date": 1680139642168,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 222,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4827,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 115,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 121,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3914,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3469,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3464,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getResponse",
            "value": 3426,
            "range": "±2.50%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1462,
            "range": "±3.43%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1247,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 358,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 201,
            "range": "±3.20%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 97.01,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 95.83,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "775352c9ab261fd1bfa01e73fe12f95f27415922",
          "message": "feat: Controller.fetch returns denoramlized form (#2545)",
          "timestamp": "2023-03-30T13:13:00-07:00",
          "tree_id": "be5e23754123f5b53b07f8ef122852d1ed5c3477",
          "url": "https://github.com/data-client/rest-hooks/commit/775352c9ab261fd1bfa01e73fe12f95f27415922"
        },
        "date": 1680207324714,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 312,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7151,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 139,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 149,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5091,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4738,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5024,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5419,
            "range": "±3.69%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1833,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1584,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 510,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 307,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 135,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "54aad5e028ad3f6c5ac0beca8d9e541d5272905e",
          "message": "enhance: Type update RestEndpoint option (#2547)",
          "timestamp": "2023-03-30T15:44:15-07:00",
          "tree_id": "5aa1bc6b8556e0c52bb8fe37d0fee501e1773bcc",
          "url": "https://github.com/data-client/rest-hooks/commit/54aad5e028ad3f6c5ac0beca8d9e541d5272905e"
        },
        "date": 1680216410612,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 254,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4925,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 118,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 125,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3227,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3701,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3794,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 3476,
            "range": "±2.83%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1649,
            "range": "±4.16%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1548,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 427,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 297,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 127,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5eb3a564700ad3d0be6c0d1cacac5e9469fce6a4",
          "message": "internal: Publish new version (#2546)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-03-30T23:03:43Z",
          "tree_id": "2996ce98b9d330f81ea1984a4d6e3b2fde5f0e14",
          "url": "https://github.com/data-client/rest-hooks/commit/5eb3a564700ad3d0be6c0d1cacac5e9469fce6a4"
        },
        "date": 1680218163692,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 244,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4895,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 117,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 113,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3393,
            "range": "±2.96%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3806,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3786,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 3779,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1494,
            "range": "±3.87%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1356,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 381,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 245,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 105,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9157e9eba80d10cae3231c2649513c01f72427a1",
          "message": "fix: SSR will complete suspense (#2548)",
          "timestamp": "2023-03-30T19:33:01-07:00",
          "tree_id": "c326b5e73242c0e9de198dcd437f5b122a122ed0",
          "url": "https://github.com/data-client/rest-hooks/commit/9157e9eba80d10cae3231c2649513c01f72427a1"
        },
        "date": 1680230127352,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 263,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5582,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 123,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 137,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4739,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4987,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4736,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4098,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1855,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1608,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 429,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 260,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 123,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "220e5caef02c8e28dd6f7643e14531c3ad0ab86b",
          "message": "internal: Publish new version (#2549)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-03-31T02:40:27Z",
          "tree_id": "a16f0edb0b77d7df4309f33fd31db2abccdc6df5",
          "url": "https://github.com/data-client/rest-hooks/commit/220e5caef02c8e28dd6f7643e14531c3ad0ab86b"
        },
        "date": 1680231057253,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 237,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4794,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 107,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 112,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3131,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3432,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3454,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 3209,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1484,
            "range": "±4.30%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1310,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 356,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 232,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 97.45,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 102,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1951401dbeb4b324d475b995a1fc26abb6f2192d",
          "message": "feat: Split denormalize into two functions that use global cache or not (#2555)\n\n* enhance: Refactor denormalize\r\n\r\n* enhance: Add cache abstraction\r\n\r\n* feat: Add non-cached denormalize path\r\n\r\n* internal: Add bench and test\r\n\r\n* internal: Add changesets\r\n\r\n* internal: Move denormalize logic to one folder",
          "timestamp": "2023-04-02T18:27:39-07:00",
          "tree_id": "cb7acd73b8bc145aad8e177b87772c1dfdfc6600",
          "url": "https://github.com/data-client/rest-hooks/commit/1951401dbeb4b324d475b995a1fc26abb6f2192d"
        },
        "date": 1680485415728,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 352,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7447,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 151,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 413,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 894,
            "range": "±3.44%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 573,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 155,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4468,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5569,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5639,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4053,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1893,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1634,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 499,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 343,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 138,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c6ce7651cc0eadb21dd6ffc624a69ee48c1a63f7",
          "message": "pkg: Update all non-major dependencies (#2559)\n\n* pkg: Update all non-major dependencies\n\n* internal: fix yarn.lock\n\n* fix: Typing of legacy resource\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-04-03T20:18:07Z",
          "tree_id": "2ddc3757129c6b7a17c898030642105943f478eb",
          "url": "https://github.com/data-client/rest-hooks/commit/c6ce7651cc0eadb21dd6ffc624a69ee48c1a63f7"
        },
        "date": 1680553749447,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 265,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5571,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 129,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 362,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 818,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 593,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 140,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4139,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5081,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4890,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4299,
            "range": "±3.45%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1838,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1599,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 423,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 257,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 118,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 124,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a46695be7102338063cc102fe335e885ef96e725",
          "message": "feat: Remove legacy resources (#2560)",
          "timestamp": "2023-04-03T20:49:58-07:00",
          "tree_id": "a1ad3c5e3eee4bac93a31927b2010beb5f4db5f5",
          "url": "https://github.com/data-client/rest-hooks/commit/a46695be7102338063cc102fe335e885ef96e725"
        },
        "date": 1680580382803,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 202,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4502,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 105,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 283,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 694,
            "range": "±4.51%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 486,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 109,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3177,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3542,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3524,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 2714,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1384,
            "range": "±4.81%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1074,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 320,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLong",
            "value": 204,
            "range": "±2.74%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 92.18,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 94.89,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "48ba88e0d66def4d2fbf600cb96708e3212313b8",
          "message": "internal: Publish new version (#2556)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-04-04T04:40:56Z",
          "tree_id": "8d2a24e324550f529b3a9622397bd27fb96850ff",
          "url": "https://github.com/data-client/rest-hooks/commit/48ba88e0d66def4d2fbf600cb96708e3212313b8"
        },
        "date": 1680583928326,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 238,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4723,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 114,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 286,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 740,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 512,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 113,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3371,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3699,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3631,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse",
            "value": 3385,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1484,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1376,
            "range": "±5.85%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 364,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 242,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 106,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c53e4fc9802a93b100200e1a0db074b61bf3bb44",
          "message": "pkg: Update babel packages (#2562)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-04-04T09:08:39Z",
          "tree_id": "6d63c5be8b98afee73138f5bb37dd032e1d275df",
          "url": "https://github.com/data-client/rest-hooks/commit/c53e4fc9802a93b100200e1a0db074b61bf3bb44"
        },
        "date": 1680600001842,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 219,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4925,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 116,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 316,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 757,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 513,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 114,
            "range": "±2.34%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3230,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3659,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3543,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 3006,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1567,
            "range": "±5.01%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1327,
            "range": "±3.89%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 361,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 215,
            "range": "±2.36%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 98.26,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 105,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3c8b00e4ae0310297355ac1818d2d6d038a370d9",
          "message": "pkg: Update all non-major dependencies (#2565)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-04-04T18:50:34Z",
          "tree_id": "2dffaeb49dae7dfcfee9dbe01b7b3dd1c70b4bcd",
          "url": "https://github.com/data-client/rest-hooks/commit/3c8b00e4ae0310297355ac1818d2d6d038a370d9"
        },
        "date": 1680634916062,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 322,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7229,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 150,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 410,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 914,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 610,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 168,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4514,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5845,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5732,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5078,
            "range": "±3.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1844,
            "range": "±4.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1635,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 539,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 319,
            "range": "±2.34%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 133,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93f103e3afe703d79b3d04195c3e2e7a72f52058",
          "message": "enhance: Denormalize even when pk cannot be computed (#2570)",
          "timestamp": "2023-04-06T19:18:05-07:00",
          "tree_id": "bb2fff0933e96c3de2222fb8a7fa869326abdf01",
          "url": "https://github.com/data-client/rest-hooks/commit/93f103e3afe703d79b3d04195c3e2e7a72f52058"
        },
        "date": 1680834067844,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 212,
            "range": "±2.54%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4618,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 110,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 293,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 720,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 492,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 111,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3294,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3582,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3517,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 2962,
            "range": "±2.50%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1124,
            "range": "±3.84%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1180,
            "range": "±4.71%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 356,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 217,
            "range": "±2.87%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 102,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 103,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0c7ca6310d9b7041a6f5bb83462a7b49ca5a327b",
          "message": "enhance: Remove the need for 'found' in denormalize (#2573)",
          "timestamp": "2023-04-08T10:35:58-07:00",
          "tree_id": "de303fc3eb16cf74bcf5247e77bc1c74e8d6e176",
          "url": "https://github.com/data-client/rest-hooks/commit/0c7ca6310d9b7041a6f5bb83462a7b49ca5a327b"
        },
        "date": 1680975542549,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 223,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4565,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 103,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 277,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 702,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 473,
            "range": "±3.46%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 111,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3686,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3414,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3460,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 3071,
            "range": "±3.58%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1276,
            "range": "±3.53%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1099,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 318,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 217,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 89.85,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 97.47,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e00fd0516c26d61b6efe68042f3742b3ee10f39e",
          "message": "enhance: Remove found, deleted from denormalize (#2575)\n\n* enhance: Remove found, deleted from denormalize\r\n\r\n* enhance: Replace deleted tracking with INVALID symbol\r\n\r\n* internal: Add tests for 3.7 version schemas\r\n\r\n* fix: unvisit type\r\n\r\n* feat: Update schemas to use new denormalize path\r\n\r\n* enhance: Change denormalizeCached return type to object",
          "timestamp": "2023-04-11T13:52:19-07:00",
          "tree_id": "a33a1eb1e8a49cc8a942d461919b095e530382a0",
          "url": "https://github.com/data-client/rest-hooks/commit/e00fd0516c26d61b6efe68042f3742b3ee10f39e"
        },
        "date": 1681246525641,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 236,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4723,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 150,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 374,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 706,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 485,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 147,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 2318,
            "range": "±3.41%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3279,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3227,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse",
            "value": 2586,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1461,
            "range": "±3.73%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1209,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 324,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 241,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 95.65,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 98.38,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "a4849d95fa7444ec7159e0c89cf547f4e3255ad2",
          "message": "internal: Add legacy normalizr benchmark for comparison",
          "timestamp": "2023-04-11T20:05:09-05:00",
          "tree_id": "0432b6897caa6962acd01f507d2b832d5ec64ffe",
          "url": "https://github.com/data-client/rest-hooks/commit/a4849d95fa7444ec7159e0c89cf547f4e3255ad2"
        },
        "date": 1681261832998,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 224,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4520,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 145,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 364,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 745,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 479,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 140,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3284,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3354,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3314,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 2705,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1361,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1057,
            "range": "±4.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 322,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 225,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 91.68,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 96.34,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3eb30ad4c105d52e7d1c70abbed32083ac42bbb0",
          "message": "docs: Improve readme for benchmark",
          "timestamp": "2023-04-11T20:06:54-05:00",
          "tree_id": "e0f03354bf13bb6debf24f980f6d0da0eeed61bc",
          "url": "https://github.com/data-client/rest-hooks/commit/3eb30ad4c105d52e7d1c70abbed32083ac42bbb0"
        },
        "date": 1681261903329,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 314,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7313,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 207,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 544,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 956,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 596,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 190,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4475,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5463,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5363,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4417,
            "range": "±2.91%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1767,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1391,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 513,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 315,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 131,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 138,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "250774a09e523f078523a727b41a6a42b78aafbe",
          "message": "docs: Improve readme for benchmark",
          "timestamp": "2023-04-11T20:11:25-05:00",
          "tree_id": "c2d045a0adc079092fffe49e912dc5e00ad535ce",
          "url": "https://github.com/data-client/rest-hooks/commit/250774a09e523f078523a727b41a6a42b78aafbe"
        },
        "date": 1681262048612,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 345,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7212,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 206,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 541,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 964,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 645,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 203,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5124,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5737,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5611,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 4686,
            "range": "±3.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1840,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1501,
            "range": "±3.80%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 507,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 344,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "1b38cbc80717534650236d73d78ec090c56d1efa",
          "message": "docs: Improve readme for benchmark",
          "timestamp": "2023-04-11T20:31:09-05:00",
          "tree_id": "c2d045a0adc079092fffe49e912dc5e00ad535ce",
          "url": "https://github.com/data-client/rest-hooks/commit/1b38cbc80717534650236d73d78ec090c56d1efa"
        },
        "date": 1681263545121,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 286,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5529,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 187,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 463,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 859,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 609,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 185,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4586,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4976,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4920,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3427,
            "range": "±2.74%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1724,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1446,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 415,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 283,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 120,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9178a553cb848b043f6ac3cc8e1d346eaf934a86",
          "message": "feat: Hoist normalize index handling into function (#2580)",
          "timestamp": "2023-04-11T18:43:16-07:00",
          "tree_id": "dd0778225cb99de2338aa58d71b5bb8e539c3cc3",
          "url": "https://github.com/data-client/rest-hooks/commit/9178a553cb848b043f6ac3cc8e1d346eaf934a86"
        },
        "date": 1681263954410,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 320,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7205,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 205,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 546,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 956,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 611,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 190,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5013,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5029,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5049,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4156,
            "range": "±2.68%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1818,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1529,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 498,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 316,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7910c901e7fe5f42b920f512e9188ec87eabe090",
          "message": "feat: Add schema.Invalidate (#2579)",
          "timestamp": "2023-04-11T19:31:31-07:00",
          "tree_id": "b126fdab2ba6698e94bd5333697e85fdc0c13456",
          "url": "https://github.com/data-client/rest-hooks/commit/7910c901e7fe5f42b920f512e9188ec87eabe090"
        },
        "date": 1681266849788,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 321,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7254,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 187,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 538,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 968,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 637,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 188,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4776,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5555,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5497,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3864,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1529,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1549,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 481,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 315,
            "range": "±2.39%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "691016fea700aaee1e5328e7808027cdc56967d0",
          "message": "internal: Include merging with normalize bench",
          "timestamp": "2023-04-12T17:54:19-05:00",
          "tree_id": "da295a26f1e8c71a611a9f1f7240ac4ac3cf8d32",
          "url": "https://github.com/data-client/rest-hooks/commit/691016fea700aaee1e5328e7808027cdc56967d0"
        },
        "date": 1681340244281,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 204,
            "range": "±2.29%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4376,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 138,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 353,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 671,
            "range": "±2.91%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 451,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 134,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 2956,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3114,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3009,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getResponse",
            "value": 2475,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1258,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1103,
            "range": "±6.58%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 292,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLong",
            "value": 218,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 80.61,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 84.93,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e75312c7ee6a60cc31d8641dea7a2f018aa16d64",
          "message": "fix: Remove empty entity path from denormalize (#2581)",
          "timestamp": "2023-04-12T15:55:53-07:00",
          "tree_id": "4f33cc17cf74d8a215f363234089811233334fe4",
          "url": "https://github.com/data-client/rest-hooks/commit/e75312c7ee6a60cc31d8641dea7a2f018aa16d64"
        },
        "date": 1681340309920,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 295,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5498,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 194,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 475,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 857,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 631,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 193,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4383,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5000,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4858,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3772,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1721,
            "range": "±2.68%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1439,
            "range": "±3.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 436,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 295,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 122,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 126,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "383134552013eb07cf7b121323d618b7599a1941",
          "message": "internal: Rename variables in normalize (#2582)",
          "timestamp": "2023-04-12T16:10:15-07:00",
          "tree_id": "4cfc36655055bf8efaca5361efdf3a7b5c7dba62",
          "url": "https://github.com/data-client/rest-hooks/commit/383134552013eb07cf7b121323d618b7599a1941"
        },
        "date": 1681341172703,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 345,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7218,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 206,
            "range": "±4.54%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 541,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 959,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 615,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 202,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4285,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5699,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5552,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4503,
            "range": "±3.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1855,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1421,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 498,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 338,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 138,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "62f8b11188c4fdc3165788766bbffb00191b9d26",
          "message": "enhance: Improve entity expiry calc performance in getResponse() (#2585)",
          "timestamp": "2023-04-13T10:28:50-07:00",
          "tree_id": "de5bfe8fc8d98c20cf3965338bb64939cc795b0a",
          "url": "https://github.com/data-client/rest-hooks/commit/62f8b11188c4fdc3165788766bbffb00191b9d26"
        },
        "date": 1681407103115,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 287,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5494,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 179,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 467,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 899,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 587,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 165,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4418,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5210,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4837,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3898,
            "range": "±3.33%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 177,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1752,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1486,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 440,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 284,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 121,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6bd94947f36ef077efd196861081af56675bfc54",
          "message": "enhance: Simplified null args path for ctrl.getResponse() (#2586)",
          "timestamp": "2023-04-13T11:08:25-07:00",
          "tree_id": "1af22e5abd12ce35ddc09dca026c116c11807aee",
          "url": "https://github.com/data-client/rest-hooks/commit/6bd94947f36ef077efd196861081af56675bfc54"
        },
        "date": 1681409490340,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 245,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4618,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 158,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 389,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 752,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 521,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 156,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3523,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3723,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3886,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 3024,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2306148,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 155,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1469,
            "range": "±3.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1205,
            "range": "±3.40%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 396,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 247,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 104,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 109,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "82ac6ce0a6d017827e4abd04b94c0f9a27241f49",
          "message": "pkg: Update all non-major dependencies (#2587)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-04-14T16:45:52Z",
          "tree_id": "ccd1a545eb2d3f204f52c1b9f023ace8988b67e1",
          "url": "https://github.com/data-client/rest-hooks/commit/82ac6ce0a6d017827e4abd04b94c0f9a27241f49"
        },
        "date": 1681491431382,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 320,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7182,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 155,
            "range": "±3.07%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 543,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 965,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 455,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 148,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4566,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5385,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5420,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4498,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2883510,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 143,
            "range": "±2.63%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1820,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1421,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 558,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 320,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "68a5944091157f7376e4d6b7ed18107e9c7bccd1",
          "message": "feat: Add Entity.mergeMeta() (#2588)",
          "timestamp": "2023-04-14T15:04:15-07:00",
          "tree_id": "7b3b543a3db61e2242317a4c5d2b6a099b72398e",
          "url": "https://github.com/data-client/rest-hooks/commit/68a5944091157f7376e4d6b7ed18107e9c7bccd1"
        },
        "date": 1681510030413,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 285,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5511,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 186,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 468,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 893,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 626,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 183,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4063,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4802,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4827,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3817,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2790767,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 172,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1774,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1539,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 428,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 282,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 111,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 117,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f833e5878305f2a2e50dd72defc9a0386e1dd201",
          "message": "enhance: Invalidate/Delete uses modern normalize lifecycles (#2589)",
          "timestamp": "2023-04-14T19:39:21-07:00",
          "tree_id": "5bdf13b03773a4c41549425ecd72bd2ec22f4d4a",
          "url": "https://github.com/data-client/rest-hooks/commit/f833e5878305f2a2e50dd72defc9a0386e1dd201"
        },
        "date": 1681526535034,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 306,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7181,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 202,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 533,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 904,
            "range": "±2.99%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 591,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 200,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5069,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4776,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4796,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3423,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2850993,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 183,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1786,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1532,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 510,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 310,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 127,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 135,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a005bd06aff0fd4e0bec3b66e0094fc8c2b2584a",
          "message": "enhance: mergeMeta -> mergeMetaWithStore (#2590)",
          "timestamp": "2023-04-14T19:49:01-07:00",
          "tree_id": "414f34585a33aaa233cf473e437f4916a27df629",
          "url": "https://github.com/data-client/rest-hooks/commit/a005bd06aff0fd4e0bec3b66e0094fc8c2b2584a"
        },
        "date": 1681527138111,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 229,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4510,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 148,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 370,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 705,
            "range": "±4.45%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 495,
            "range": "±2.98%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 146,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3430,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3555,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3570,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 2893,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2144854,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 137,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1345,
            "range": "±3.61%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1082,
            "range": "±3.79%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 359,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLong",
            "value": 234,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 93.51,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 97.95,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ec8923b9cfc5c961d6ceab472017e86211ea9933",
          "message": "pkg: Update all non-major dependencies (#2596)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-04-19T19:53:57Z",
          "tree_id": "ca38788e3cb031f69492f9e6f93d0b700ab9f860",
          "url": "https://github.com/data-client/rest-hooks/commit/ec8923b9cfc5c961d6ceab472017e86211ea9933"
        },
        "date": 1681934752943,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 319,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7311,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 212,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 547,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 956,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 645,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 202,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4404,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4531,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5297,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4722,
            "range": "±3.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2922018,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 191,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1830,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1546,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 528,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 315,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 134,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "950a9826ba79815d64e3020bcb9f7ba9dfe65224",
          "message": "pkg: Update all non-major dependencies (#2604)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-04-25T19:37:48Z",
          "tree_id": "04913cd0029cf5f6f665e2883b1e7430f94af1d1",
          "url": "https://github.com/data-client/rest-hooks/commit/950a9826ba79815d64e3020bcb9f7ba9dfe65224"
        },
        "date": 1682452128387,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 346,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7377,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 214,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 547,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 981,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 637,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 208,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5091,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5490,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5435,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4012,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2873300,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 173,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1812,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1497,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 542,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 355,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 134,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 140,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dfcad22920706ec08921640944b483a33cf64421",
          "message": "feat: Add schema.Collection (#2593)",
          "timestamp": "2023-04-26T13:51:12-07:00",
          "tree_id": "77b8497f35846dc3af9fc997e27e6a84ca1343c2",
          "url": "https://github.com/data-client/rest-hooks/commit/dfcad22920706ec08921640944b483a33cf64421"
        },
        "date": 1682542472396,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 214,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4781,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 159,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 387,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 735,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 513,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 154,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3614,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4221,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4159,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3185,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2292007,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 150,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1410,
            "range": "±3.79%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1151,
            "range": "±2.77%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 382,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 219,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 110,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "93a08592c6f2d7a556378af419d6e3ed849ac037",
          "message": "feat: Add schema.Collection (#2593)",
          "timestamp": "2023-04-26T16:05:46-05:00",
          "tree_id": "2633d642b313999f77ff37104446977769f53282",
          "url": "https://github.com/data-client/rest-hooks/commit/93a08592c6f2d7a556378af419d6e3ed849ac037"
        },
        "date": 1682543322901,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 332,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7302,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 172,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 510,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 936,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 618,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 177,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5437,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5788,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5584,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4553,
            "range": "±3.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2857453,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 159,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1760,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1294,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 541,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 329,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 138,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "df9102665efb9cf62c2290cdc3712f482a14618a",
          "message": "enhance: match collections with same serialized values",
          "timestamp": "2023-04-27T00:08:10-05:00",
          "tree_id": "7f6514c11798de0daff4f7a44fbc00da25dce285",
          "url": "https://github.com/data-client/rest-hooks/commit/df9102665efb9cf62c2290cdc3712f482a14618a"
        },
        "date": 1682572261090,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 274,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7220,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 204,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 526,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 942,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 590,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 202,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5136,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5681,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5433,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4664,
            "range": "±3.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2764594,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 191,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1757,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1236,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 542,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 268,
            "range": "±3.41%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 121,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ca249b5dda2ae40f5aca0777d560b4218608705d",
          "message": "enhance: match collections with same serialized values",
          "timestamp": "2023-04-27T00:15:52-05:00",
          "tree_id": "1662bf417370446e595110404ec891f7962a32f8",
          "url": "https://github.com/data-client/rest-hooks/commit/ca249b5dda2ae40f5aca0777d560b4218608705d"
        },
        "date": 1682572732732,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 275,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5739,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 188,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 455,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 891,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 596,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 182,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4413,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4979,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4853,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3912,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2752828,
            "range": "±0.05%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 171,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1675,
            "range": "±2.68%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1415,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 434,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 272,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 113,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 120,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5df6aa2c02fecd83a1ed1f7e311476361bdd5bb4",
          "message": "pkg: Update babel packages (#2608)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-04-29T16:41:57Z",
          "tree_id": "8bb34675f7e9c05c2b727ba1e227009db588e6cc",
          "url": "https://github.com/data-client/rest-hooks/commit/5df6aa2c02fecd83a1ed1f7e311476361bdd5bb4"
        },
        "date": 1682787176956,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 273,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5862,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 202,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 478,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 901,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 625,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 196,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4108,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4876,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4702,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 3808,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2831512,
            "range": "±0.05%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 186,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1743,
            "range": "±2.80%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1564,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 478,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 270,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 135,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4dbfdb78611421d8afc62d4a2f714c462adff40c",
          "message": "internal: Publish new version (#2571)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-02T22:27:10Z",
          "tree_id": "ebddb348551dde180181a4aea37889ddfdbd68fe",
          "url": "https://github.com/data-client/rest-hooks/commit/4dbfdb78611421d8afc62d4a2f714c462adff40c"
        },
        "date": 1683067093653,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 277,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5717,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 183,
            "range": "±2.96%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 427,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 861,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 592,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 178,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4225,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4927,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4737,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3626,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2767047,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 173,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1719,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1483,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 444,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 274,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 115,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 122,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7aab4063e237a83616d05ac3d1c7b97b51b678e",
          "message": "enhance: Add missing type exports (#2616)",
          "timestamp": "2023-05-03T11:49:12-07:00",
          "tree_id": "da9e224889e16b35857d54ea24407bb354f0cc55",
          "url": "https://github.com/data-client/rest-hooks/commit/e7aab4063e237a83616d05ac3d1c7b97b51b678e"
        },
        "date": 1683139942097,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 216,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4788,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 159,
            "range": "±3.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 385,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 747,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 522,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 154,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3695,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4064,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4217,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 3259,
            "range": "±2.80%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2312554,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 149,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1437,
            "range": "±3.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1177,
            "range": "±3.57%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 375,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 219,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 98.22,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 108,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c01a884942443faaff1dabbd157ec3bf1f7fbd95",
          "message": "enhance: Collections should use .cacheWith to tell cache what to vary on (#2618)",
          "timestamp": "2023-05-03T12:06:31-07:00",
          "tree_id": "3aba28909c23b54e9ea054b5bccbf4ef29505548",
          "url": "https://github.com/data-client/rest-hooks/commit/c01a884942443faaff1dabbd157ec3bf1f7fbd95"
        },
        "date": 1683140987785,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 227,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4683,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 148,
            "range": "±2.66%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 377,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 790,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 544,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 150,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3194,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3504,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3412,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 2581,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2335811,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 141,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1457,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1235,
            "range": "±5.15%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 350,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 224,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 93.38,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 100,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "520cbb461fbf5be1b1372f86a5a9c148bdb18112",
          "message": "internal: Publish new version (#2617)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-03T19:27:03Z",
          "tree_id": "6b1e96044b533d339f16e64c5b6f54429dffeb80",
          "url": "https://github.com/data-client/rest-hooks/commit/520cbb461fbf5be1b1372f86a5a9c148bdb18112"
        },
        "date": 1683142726437,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 221,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4509,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 138,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 286,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 711,
            "range": "±3.71%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 479,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 129,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3017,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3437,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3297,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 2736,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2314375,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 127,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1310,
            "range": "±2.91%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1145,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 349,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 233,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 97.94,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 94.07,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6c59c0f805dfc982fccf1cc32ede64a70aae63d",
          "message": "internal: Publish new version (#2619)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-03T20:07:06Z",
          "tree_id": "5364360adcced717d3fbd35277d4d2dc65b94e6d",
          "url": "https://github.com/data-client/rest-hooks/commit/f6c59c0f805dfc982fccf1cc32ede64a70aae63d"
        },
        "date": 1683145130558,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 220,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4850,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 154,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 388,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 742,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 512,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 149,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3425,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4265,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4258,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3305,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2304053,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 149,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1422,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1236,
            "range": "±3.77%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 360,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 220,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 94.33,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 105,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8ad6a7f984a27aa38f5ebc3c6a75eaa7f7cff81b",
          "message": "pkg: Update all non-major dependencies (#2620)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-03T20:36:23Z",
          "tree_id": "5e3eb1cf0935af4434a54ce55e1a82f6ceb81b31",
          "url": "https://github.com/data-client/rest-hooks/commit/8ad6a7f984a27aa38f5ebc3c6a75eaa7f7cff81b"
        },
        "date": 1683146889465,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 279,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5776,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 185,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 460,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 881,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 614,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 178,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4329,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4876,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4711,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 3348,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2801917,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 173,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1774,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1398,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 453,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 276,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 118,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 133,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6912024cc4f2cb1eff92d8fd6f542146c4087a15",
          "message": "internal: Publish new version (#2621)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-03T21:33:07Z",
          "tree_id": "739ffc780508616e5720797f77cb4c09ad9ee134",
          "url": "https://github.com/data-client/rest-hooks/commit/6912024cc4f2cb1eff92d8fd6f542146c4087a15"
        },
        "date": 1683150257045,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 225,
            "range": "±3.26%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5889,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 197,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 469,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 890,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 622,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 188,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4087,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4947,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4872,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3465,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2828263,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 172,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1719,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1389,
            "range": "±3.01%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 423,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 211,
            "range": "±3.96%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 107,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 117,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d6000bc601cbda851160d9b3e9c0d52f4ff8b818",
          "message": "pkg: Update all non-major dependencies (#2623)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-05T14:04:34Z",
          "tree_id": "f4153a20bd9ba2dc1040786237145d72337db1d7",
          "url": "https://github.com/data-client/rest-hooks/commit/d6000bc601cbda851160d9b3e9c0d52f4ff8b818"
        },
        "date": 1683296197466,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 272,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5778,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 178,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 444,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 858,
            "range": "±2.83%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 589,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 176,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4195,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5038,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4654,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 3756,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2747551,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 169,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1649,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1439,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 416,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 267,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 111,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "156c1152e20342dfe286f902610050b49db421e3",
          "message": "pkg: Update babel packages (#2626)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-07T17:57:39Z",
          "tree_id": "4fda78fdd160943b747274b45b4d7dd371c9557a",
          "url": "https://github.com/data-client/rest-hooks/commit/156c1152e20342dfe286f902610050b49db421e3"
        },
        "date": 1683482961354,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 321,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7247,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 207,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 529,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 935,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 623,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 207,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5351,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5717,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5664,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4688,
            "range": "±2.73%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2883269,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 195,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1787,
            "range": "±3.64%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1491,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 566,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 318,
            "range": "±2.61%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f3413060a34c77d81225cf9d57de284eb536ac9",
          "message": "enhance: Collection has default argsKey (#2633)",
          "timestamp": "2023-05-08T18:19:45-07:00",
          "tree_id": "d3fb619355733e83ed6c1dde2cf79611194edfc9",
          "url": "https://github.com/data-client/rest-hooks/commit/3f3413060a34c77d81225cf9d57de284eb536ac9"
        },
        "date": 1683595364685,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 331,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7308,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 206,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 525,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 952,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 598,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 201,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5321,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5866,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5652,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4712,
            "range": "±3.02%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2786139,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 187,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1736,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1252,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 537,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 333,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 124,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 134,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b8179c30147a22257f16615a190a15f054f12e64",
          "message": "internal: Publish new version (#2631)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-09T01:28:07Z",
          "tree_id": "28cf9667ceee037e5e0c2536a2a39c2dff3e0c6a",
          "url": "https://github.com/data-client/rest-hooks/commit/b8179c30147a22257f16615a190a15f054f12e64"
        },
        "date": 1683596344236,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 336,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7215,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 203,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 527,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 941,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 613,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 194,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5277,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5604,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5713,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4826,
            "range": "±3.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2915769,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 189,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1793,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1488,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 581,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 351,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 132,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 142,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "03dda411e702ace1d59a7aebe9537250365b4f46",
          "message": "enhance: Infer non-nested Collections (#2634)",
          "timestamp": "2023-05-09T12:26:33-05:00",
          "tree_id": "1aa1012890aa5386883d5375de209c4abb43b46c",
          "url": "https://github.com/data-client/rest-hooks/commit/03dda411e702ace1d59a7aebe9537250365b4f46"
        },
        "date": 1683653388711,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 207,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4292,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 145,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 350,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 735,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 497,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 141,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3331,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3370,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3407,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 2622,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2121434,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 128,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1330,
            "range": "±3.20%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1132,
            "range": "±4.12%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 336,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 213,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 87.47,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 94.84,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9fa191222a0c5d5793a0d410371458e04887591",
          "message": "pkg: Update all non-major dependencies (#2636)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-09T17:44:47Z",
          "tree_id": "9576f5850fae646861929796f2a82d5b576adae9",
          "url": "https://github.com/data-client/rest-hooks/commit/e9fa191222a0c5d5793a0d410371458e04887591"
        },
        "date": 1683654940284,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 281,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5726,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 132,
            "range": "±3.51%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 464,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 887,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 418,
            "range": "±3.40%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 125,
            "range": "±3.58%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4034,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5097,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4564,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 3628,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2728361,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 123,
            "range": "±2.98%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1705,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1417,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 467,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 281,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 132,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "82de0b66dd991eb5925e229a4936f62220e80588",
          "message": "enhance: Set Collection key in constructor (#2638)",
          "timestamp": "2023-05-09T13:29:58-05:00",
          "tree_id": "0b9cdfeac608d7997876ab6bc024637f72a69fd9",
          "url": "https://github.com/data-client/rest-hooks/commit/82de0b66dd991eb5925e229a4936f62220e80588"
        },
        "date": 1683657178751,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 250,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4974,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 116,
            "range": "±3.56%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 406,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 797,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 369,
            "range": "±3.83%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 118,
            "range": "±3.52%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3622,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4712,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4250,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 3305,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2541328,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 115,
            "range": "±3.90%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1575,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1221,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 407,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 249,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 108,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 114,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "028b7f74ae7e8056a5e98bc688642a8075f7c002",
          "message": "internal: Add start:deopt script to benchmark",
          "timestamp": "2023-05-16T17:13:29-05:00",
          "tree_id": "6fe878f0b6bc5e1f42bb1f6c70ef7404509fa748",
          "url": "https://github.com/data-client/rest-hooks/commit/028b7f74ae7e8056a5e98bc688642a8075f7c002"
        },
        "date": 1684275382141,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 315,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7260,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 203,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 531,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 957,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 590,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 200,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4430,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5575,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5512,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4365,
            "range": "±3.35%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2841161,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 189,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1795,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1283,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 524,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 317,
            "range": "±2.40%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 137,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ad9d384375c50b836bec7ddef21d57f043e54ef4",
          "message": "internal: Simplify deopt command with workaround",
          "timestamp": "2023-05-16T17:28:42-05:00",
          "tree_id": "c8503ce4523f1aff7ee99830c8389c19e5c952d1",
          "url": "https://github.com/data-client/rest-hooks/commit/ad9d384375c50b836bec7ddef21d57f043e54ef4"
        },
        "date": 1684276291762,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 270,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5666,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 188,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 452,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 885,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 605,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 186,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4687,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5562,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4613,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3551,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2800443,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 172,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1744,
            "range": "±3.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1523,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 459,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 273,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 117,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 126,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ca1f942cfdf5657ee44dffbb8680a339bca1b5a6",
          "message": "internal: Fix sourcemaps for benchmark",
          "timestamp": "2023-05-16T20:00:41-05:00",
          "tree_id": "219a1ca60ad90e5de3fdcc96eeee5b43dc04a611",
          "url": "https://github.com/data-client/rest-hooks/commit/ca1f942cfdf5657ee44dffbb8680a339bca1b5a6"
        },
        "date": 1684285424368,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 286,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5684,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 197,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 461,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 888,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 605,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 189,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3883,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5109,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4714,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 3447,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2779930,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 183,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1716,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1433,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 464,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 282,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 135,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c8398fb1cab4adc7fa713aafbe99eeaf4c706ad0",
          "message": "feat: Add 'optimistic' option to createResource (#2645)",
          "timestamp": "2023-05-19T13:17:00-07:00",
          "tree_id": "00834a7c674c9f9f45af7ac42cf70787700ad2b0",
          "url": "https://github.com/data-client/rest-hooks/commit/c8398fb1cab4adc7fa713aafbe99eeaf4c706ad0"
        },
        "date": 1684527591735,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 349,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7278,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 207,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 526,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 939,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 593,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 198,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4410,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5370,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5445,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4537,
            "range": "±3.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2843763,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 183,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1785,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1523,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 517,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 335,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5345570d534322c620ccad637388ade51af36e84",
          "message": "pkg: Update babel packages (#2649)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-27T15:39:25Z",
          "tree_id": "faf7ba8b2f1f43a66b853cfee348fe7f48c183f6",
          "url": "https://github.com/data-client/rest-hooks/commit/5345570d534322c620ccad637388ade51af36e84"
        },
        "date": 1685202645933,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 277,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5766,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 189,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 450,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 866,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 617,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 186,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4149,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4843,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4670,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3801,
            "range": "±2.56%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2799337,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 176,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1740,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1452,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 454,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 275,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 115,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 131,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b03fb9e21ea033028113508113c944ed164d815",
          "message": "pkg: Update all non-major dependencies (#2652)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-05-27T23:04:43Z",
          "tree_id": "358c8dff61b090f5465739aca14389494616dfb8",
          "url": "https://github.com/data-client/rest-hooks/commit/3b03fb9e21ea033028113508113c944ed164d815"
        },
        "date": 1685229360130,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 285,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5772,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 197,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 465,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 872,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 620,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 192,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4257,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4788,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4728,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 3668,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2825665,
            "range": "±0.05%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 181,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1542,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1476,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 456,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 284,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 123,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "76f2f7b07ecf20d559f7ead00591bf34229ef1f1",
          "message": "internal: Improve source mapping for benchmark",
          "timestamp": "2023-06-01T14:43:58+07:00",
          "tree_id": "2959dd0cc12d23143009175e824b9d2ff96025d5",
          "url": "https://github.com/data-client/rest-hooks/commit/76f2f7b07ecf20d559f7ead00591bf34229ef1f1"
        },
        "date": 1685605640916,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 222,
            "range": "±3.27%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5110,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 163,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 377,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 780,
            "range": "±3.43%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 508,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 144,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3042,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3382,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3315,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 2804,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2311727,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 143,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1440,
            "range": "±3.25%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1135,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 348,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLong",
            "value": 208,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 111,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c34156d7e2d80a07eb370cc9a5e271801509a296",
          "message": "pkg: Update all non-major dependencies (#2657)\n\n* pkg: Update all non-major dependencies\n\n* internal: Fix types/react version consistency\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-06-05T07:40:16Z",
          "tree_id": "075669d27212b38a22bb4fbe719121b85c5f82b4",
          "url": "https://github.com/data-client/rest-hooks/commit/c34156d7e2d80a07eb370cc9a5e271801509a296"
        },
        "date": 1685951461261,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 285,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 6571,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 206,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 495,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 988,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 693,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 201,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4524,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5701,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5407,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4218,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3199214,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 195,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1956,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1625,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 476,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 283,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 138,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "234c694fed14e12a2490384b66aed20008e3ad16",
          "message": "pkg: Update babel packages (#2662)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-06-11T03:42:59Z",
          "tree_id": "bebe4f0162a2766f8a1c846e275c9b9a9b084d8c",
          "url": "https://github.com/data-client/rest-hooks/commit/234c694fed14e12a2490384b66aed20008e3ad16"
        },
        "date": 1686455659214,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 221,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4873,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 163,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 397,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 749,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 512,
            "range": "±2.36%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 161,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3667,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4199,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3939,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 3119,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2339383,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 153,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1448,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1223,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 397,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 223,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 112,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "acc1fdde9d47c7a0833f15ee7540858266f57f2f",
          "message": "pkg: Update all non-major dependencies (#2658)\n\n* pkg: Update all non-major dependencies\n\n* enhance: Additions\n\n* fix: searchParams  should just be ignored\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-06-14T14:04:44Z",
          "tree_id": "851263968dc982e93ce539cdf411ad024ec6c72e",
          "url": "https://github.com/data-client/rest-hooks/commit/acc1fdde9d47c7a0833f15ee7540858266f57f2f"
        },
        "date": 1686752183657,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 249,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5114,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 160,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 392,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 774,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 553,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 157,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3456,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3426,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3606,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 2880,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2416039,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 150,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1486,
            "range": "±3.52%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1193,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 353,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 241,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 96.03,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 97.09,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dc77a03242b1a6d75353976e0610cfb19bb878c5",
          "message": "internal: Publish new version (#2635)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-06-14T14:38:48Z",
          "tree_id": "b4ac59c916288ac791f7d1c6c401c830b1f96061",
          "url": "https://github.com/data-client/rest-hooks/commit/dc77a03242b1a6d75353976e0610cfb19bb878c5"
        },
        "date": 1686754184391,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 169,
            "range": "±3.96%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4498,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 148,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 360,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 728,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 498,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 153,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3768,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4322,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4063,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3076,
            "range": "±3.01%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2191227,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 145,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1367,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1111,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 358,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLong",
            "value": 167,
            "range": "±4.87%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 84.08,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 89.43,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "66 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "c26ee6e2691399bd5c123085cf8c592c59e88de9",
          "message": "internal: Add new benchmark for entity-only cache",
          "timestamp": "2023-06-21T16:28:42-05:00",
          "tree_id": "b2c5e39736551a97f6c255bd4d928dff6bb710c9",
          "url": "https://github.com/data-client/rest-hooks/commit/c26ee6e2691399bd5c123085cf8c592c59e88de9"
        },
        "date": 1687383099184,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 265,
            "range": "±2.66%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7196,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 203,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 525,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 946,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 621,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 199,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4617,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1022,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5683,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5575,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 4626,
            "range": "±3.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2736555,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 187,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1707,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1245,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 521,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 255,
            "range": "±3.81%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±2.36%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 123,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "37c0c30ff5f5e8e1ef4dc52c04b12e1235a3b0c1",
          "message": "enhance: Performance improvements based on deopt inspection (#2664)",
          "timestamp": "2023-06-21T16:12:11-07:00",
          "tree_id": "ee89810798df23c9149054203b900cfe6679db54",
          "url": "https://github.com/data-client/rest-hooks/commit/37c0c30ff5f5e8e1ef4dc52c04b12e1235a3b0c1"
        },
        "date": 1687389304754,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 274,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5626,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 137,
            "range": "±3.34%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 453,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 861,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 431,
            "range": "±3.74%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 132,
            "range": "±3.20%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3887,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 845,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4785,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4372,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 3691,
            "range": "±2.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2717262,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 122,
            "range": "±3.67%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1728,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1422,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 413,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 268,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 131,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2c54f269b8646049fdc737d7bdfa93e66fe3cbc2",
          "message": "pkg: Update all non-major dependencies (#2672)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-06-22T00:47:47Z",
          "tree_id": "d6a5364c3169e22b9c8d2d4d3b428316bb0b1dd1",
          "url": "https://github.com/data-client/rest-hooks/commit/2c54f269b8646049fdc737d7bdfa93e66fe3cbc2"
        },
        "date": 1687395586201,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 200,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4287,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 129,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 352,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 690,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 486,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 130,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3337,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 643,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3450,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3382,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 2614,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2025648,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 118,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1296,
            "range": "±3.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 979,
            "range": "±3.61%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 306,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 193,
            "range": "±3.26%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 87.78,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 93.06,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d8d7432c5698bab0f2c50890f97d4aaa51f27cb3",
          "message": "pkg: Update all non-major dependencies (#2679)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-06-28T11:23:38Z",
          "tree_id": "62a93c4d252a146ccb3cf6f5035dd1328531e174",
          "url": "https://github.com/data-client/rest-hooks/commit/d8d7432c5698bab0f2c50890f97d4aaa51f27cb3"
        },
        "date": 1687952113226,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 327,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7238,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 152,
            "range": "±3.80%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 523,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 961,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 490,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 158,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3999,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1002,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5637,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5410,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4697,
            "range": "±3.78%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2828370,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 145,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1755,
            "range": "±4.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1293,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 536,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 335,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9df8607c9df744d774f32e3433a011a687c603e4",
          "message": "internal: Rest Hooks should depend on data-client packages (#2677)",
          "timestamp": "2023-07-02T15:56:06-07:00",
          "tree_id": "0f730f297d83207fcddf53e563430436d1292475",
          "url": "https://github.com/data-client/rest-hooks/commit/9df8607c9df744d774f32e3433a011a687c603e4"
        },
        "date": 1688338880974,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 218,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4655,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 160,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 391,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 747,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 539,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 148,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3584,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 772,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4076,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3927,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3077,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2316475,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 143,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1476,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1165,
            "range": "±3.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 372,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 214,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 108,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "328b62f30f4370ac0f6c66818227f41cf7a2ef5a",
          "message": "internal: Change building to match newly expected directory",
          "timestamp": "2023-07-02T18:32:01-05:00",
          "tree_id": "4270e56bc738eae474475b028ce537564010c3a7",
          "url": "https://github.com/data-client/rest-hooks/commit/328b62f30f4370ac0f6c66818227f41cf7a2ef5a"
        },
        "date": 1688340893447,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 338,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7246,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 197,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 541,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 917,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 645,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 199,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5448,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 993,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5431,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5304,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4483,
            "range": "±3.58%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2848561,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 172,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1615,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1556,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 518,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 335,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 131,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 140,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "011cc2073275ffcaea2e8b9a54b730c5007e7507",
          "message": "enhance: Remove FetchShape ultra-legacy compat (#2688)",
          "timestamp": "2023-07-03T09:22:50-07:00",
          "tree_id": "6026d60e695872f057f680d8ceb47189841d79bc",
          "url": "https://github.com/data-client/rest-hooks/commit/011cc2073275ffcaea2e8b9a54b730c5007e7507"
        },
        "date": 1688401670829,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 330,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 6974,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 189,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 519,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 852,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 653,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 187,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5139,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1006,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5744,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5451,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4835,
            "range": "±3.81%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2869227,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 181,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1830,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1511,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 504,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 334,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 137,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bf141cb5a5ed7a1872366e4e5dd75f49a960aa99",
          "message": "enhance: Remove legacy actions (#2690)",
          "timestamp": "2023-07-03T14:39:56-07:00",
          "tree_id": "17739d5e704e3c1f1b715b6bdfd2e0304c92d3cc",
          "url": "https://github.com/data-client/rest-hooks/commit/bf141cb5a5ed7a1872366e4e5dd75f49a960aa99"
        },
        "date": 1688420571230,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 258,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7044,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 186,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 515,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 913,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 635,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 185,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4326,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 972,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5701,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5277,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4491,
            "range": "±3.40%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2853116,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 166,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1767,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1254,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 473,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 253,
            "range": "±3.45%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 113,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 122,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9788090c55e848e6643add832315ff9a1d6de735",
          "message": "feat: Hoist /next for packages rest, core, and react (#2692)",
          "timestamp": "2023-07-03T21:29:31-07:00",
          "tree_id": "d0e1953cd0065fa3ac1ff597a908c6d3bad81228",
          "url": "https://github.com/data-client/rest-hooks/commit/9788090c55e848e6643add832315ff9a1d6de735"
        },
        "date": 1688445144136,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 255,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5464,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 171,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 450,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 847,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 633,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 167,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4150,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 842,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4526,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4418,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 3812,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2683393,
            "range": "±0.05%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 171,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1579,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1498,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 435,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 252,
            "range": "±2.73%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 132,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "87475a0cae0a9e3fbdf6b6e3a7b8e99fb35715ff",
          "message": "enhance: Deprecate normalizr entity interface members expiresAt and useIncoming",
          "timestamp": "2023-07-04T08:51:45-05:00",
          "tree_id": "1ec9565a64f50d23e557fb83207495b208ef0df4",
          "url": "https://github.com/data-client/rest-hooks/commit/87475a0cae0a9e3fbdf6b6e3a7b8e99fb35715ff"
        },
        "date": 1688478925861,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 277,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5491,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 175,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 454,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 868,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 600,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 167,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4158,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 875,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4853,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4619,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3887,
            "range": "±3.08%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2746572,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 171,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1690,
            "range": "±2.96%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1543,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 426,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 276,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 132,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2d95336cbe4debd84517d3330e851ab878d99b4a",
          "message": "pkg: Update babel packages (#2693)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-07-04T15:06:18Z",
          "tree_id": "27ad85aea0120d12fd29a06a4641f4d6775d4ca8",
          "url": "https://github.com/data-client/rest-hooks/commit/2d95336cbe4debd84517d3330e851ab878d99b4a"
        },
        "date": 1688483823589,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 269,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5433,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 170,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 440,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 825,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 556,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 171,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3668,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 825,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4840,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4414,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 3567,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2665447,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 155,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1617,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1428,
            "range": "±3.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 402,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 266,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 120,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "37b28b94ac2e9ce38112463d361818b682ce6fb2",
          "message": "enhance: merge Controller definition into one file",
          "timestamp": "2023-07-04T11:04:00-05:00",
          "tree_id": "de0f1db056502bce67e8e4b474f1519450e9cb21",
          "url": "https://github.com/data-client/rest-hooks/commit/37b28b94ac2e9ce38112463d361818b682ce6fb2"
        },
        "date": 1688486820269,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 210,
            "range": "±3.38%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5431,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 165,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 446,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 845,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 618,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 167,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4221,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 860,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4571,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4304,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3299,
            "range": "±2.29%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2723904,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 166,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1736,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1379,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 384,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 202,
            "range": "±4.00%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 99,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 108,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6ceffa7fd698414e6989ef5c0bb47539515b38a9",
          "message": "internal: Fix model definitions for some test (#2697)",
          "timestamp": "2023-07-04T15:08:18-07:00",
          "tree_id": "c432f94df7a214db0dc8d308009ec8044787a0cb",
          "url": "https://github.com/data-client/rest-hooks/commit/6ceffa7fd698414e6989ef5c0bb47539515b38a9"
        },
        "date": 1688508684909,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 185,
            "range": "±3.91%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4642,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 153,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 399,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 727,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 546,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 152,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3595,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 776,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4232,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4025,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 3465,
            "range": "±3.59%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2250091,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 141,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1470,
            "range": "±3.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1203,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 374,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 182,
            "range": "±3.84%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 91.93,
            "range": "±3.05%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 97.34,
            "range": "±2.64%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c05c4066d1f565fb56735eaafceb5a0bd6daafa3",
          "message": "internal: Publish new version (#2689)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-07-04T22:26:58Z",
          "tree_id": "be677a5c74cd2d0d2b5ca05d88f80d7f81d2c98f",
          "url": "https://github.com/data-client/rest-hooks/commit/c05c4066d1f565fb56735eaafceb5a0bd6daafa3"
        },
        "date": 1688510231215,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 323,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 6987,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 183,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 521,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 953,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 633,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 183,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4058,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 961,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5346,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5311,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 4550,
            "range": "±3.94%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2847633,
            "range": "±0.05%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 173,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1772,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1447,
            "range": "±3.58%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 490,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 326,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 124,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 135,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5cacc5d0cd0590f2f49515598cd568b2a4001524",
          "message": "internal: Prepare peerdeps support release",
          "timestamp": "2023-07-04T19:55:39-05:00",
          "tree_id": "42754bfa0658ae597d42b6e54788a2fdb219608e",
          "url": "https://github.com/data-client/rest-hooks/commit/5cacc5d0cd0590f2f49515598cd568b2a4001524"
        },
        "date": 1688518735102,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 224,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4572,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 142,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 386,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 722,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 528,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 137,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3751,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 739,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4330,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3878,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 2987,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2332124,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 136,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1436,
            "range": "±3.49%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1103,
            "range": "±4.21%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 362,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 230,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 99.96,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 108,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "adc78bd33c4ee3603f4c92649aaa573cd38d124a",
          "message": "pkg: Update build packages (#2701)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-07-06T16:26:50Z",
          "tree_id": "7b6b861b046e777ed732fb3cf261b1abfaafcbe4",
          "url": "https://github.com/data-client/rest-hooks/commit/adc78bd33c4ee3603f4c92649aaa573cd38d124a"
        },
        "date": 1688661293006,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 299,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7087,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 177,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 514,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 933,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 632,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 178,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4752,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 934,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5688,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5348,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4413,
            "range": "±3.33%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2884378,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 165,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1711,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1482,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 443,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 298,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 118,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 125,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7af5fc18423d367c21ef0e7c7c2a7fbe7d988d6c",
          "message": "pkg: Update validation packages (major) (#2706)\n\n* pkg: Update validation packages\n\n* internal: Update formatting\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-07-11T16:09:51Z",
          "tree_id": "185ac96bfbfcf8d5cc2cd2198c787a8efd52da0d",
          "url": "https://github.com/data-client/rest-hooks/commit/7af5fc18423d367c21ef0e7c7c2a7fbe7d988d6c"
        },
        "date": 1689092340560,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 224,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4586,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 157,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 388,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 732,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 529,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 142,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3373,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 768,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3909,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3899,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3277,
            "range": "±3.71%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2346346,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 136,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1455,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1256,
            "range": "±4.75%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 362,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 225,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 99.27,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 107,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "73f3a177444a0c935cda040a683a151aabc50e15",
          "message": "pkg: Update build packages (#2711)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-07-14T03:06:23Z",
          "tree_id": "e30d496d5bb53710fd21521f1fcd2216d95a8843",
          "url": "https://github.com/data-client/rest-hooks/commit/73f3a177444a0c935cda040a683a151aabc50e15"
        },
        "date": 1689304504022,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 260,
            "range": "±3.20%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7074,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 188,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 517,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 931,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 605,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 185,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4556,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1039,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5567,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5371,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4797,
            "range": "±3.30%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2837134,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 178,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1774,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1553,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 494,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 256,
            "range": "±3.54%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 115,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 123,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "93a753ae658ef7a9505f270e60f64900061899c0",
          "message": "pkg: Update all non-major dependencies (#2712)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-07-14T03:23:23Z",
          "tree_id": "54794b7bf18713fd7d0f016d8888af7d7dea365c",
          "url": "https://github.com/data-client/rest-hooks/commit/93a753ae658ef7a9505f270e60f64900061899c0"
        },
        "date": 1689305567925,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 256,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5469,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 170,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 449,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 863,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 636,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 168,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3725,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 851,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4491,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4353,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3540,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2743806,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 171,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1759,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1548,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 415,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 251,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 131,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "69ce1f8b6b315c668a05d81e34828ae6a3946ff1",
          "message": "docs: Add some more JSDoc links",
          "timestamp": "2023-07-18T22:55:59-05:00",
          "tree_id": "82406f1e816183d890e3555a5b8ba2c00f4ab97d",
          "url": "https://github.com/data-client/rest-hooks/commit/69ce1f8b6b315c668a05d81e34828ae6a3946ff1"
        },
        "date": 1689739150122,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 241,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4798,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 151,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 398,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 752,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 567,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 157,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3625,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 796,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4294,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4047,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 3266,
            "range": "±3.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2423652,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 143,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1531,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1364,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 373,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 240,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 105,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 113,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "6c8f0be9001cd83d88f3a04e3e44f63600f88a70",
          "message": "enhance: Include class/function in error message regarding name mangling",
          "timestamp": "2023-07-21T17:48:45-05:00",
          "tree_id": "725800beeda2dfeaaf6584ccd02802331c780e41",
          "url": "https://github.com/data-client/rest-hooks/commit/6c8f0be9001cd83d88f3a04e3e44f63600f88a70"
        },
        "date": 1689979899920,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 327,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7157,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 192,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 526,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 929,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 656,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 191,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4523,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1022,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5723,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5612,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4570,
            "range": "±3.19%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2813878,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 183,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1577,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1332,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 517,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 333,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "12c25964535695fe8d9525b0427614979d79e225",
          "message": "fix: Ensure Entit.key can be set in v8 browsers",
          "timestamp": "2023-07-25T16:27:47-05:00",
          "tree_id": "d9f9403e0073f29b4353fb36eea870f95b47fcfb",
          "url": "https://github.com/data-client/rest-hooks/commit/12c25964535695fe8d9525b0427614979d79e225"
        },
        "date": 1690320665388,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 180,
            "range": "±3.68%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4458,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 159,
            "range": "±2.29%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 417,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 792,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 599,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 154,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3656,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 766,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3828,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3646,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 3032,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2498263,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 156,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1629,
            "range": "±3.59%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1281,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 374,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLong",
            "value": 192,
            "range": "±4.19%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 94.58,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 103,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "740d8da3641efd969a7121f075acb5977583a27d",
          "message": "internal: Publish new version (#2709)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-07-25T21:40:11Z",
          "tree_id": "0ab8b80baa928f812726457b802a7f0bb1366553",
          "url": "https://github.com/data-client/rest-hooks/commit/740d8da3641efd969a7121f075acb5977583a27d"
        },
        "date": 1690321731363,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 205,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4585,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 102,
            "range": "±3.59%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 376,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 717,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 347,
            "range": "±4.39%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 101,
            "range": "±4.11%",
            "unit": "ops/sec",
            "extra": "65 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3406,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 730,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4160,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3888,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 2853,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2225101,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 102,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1362,
            "range": "±3.17%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1164,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 336,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 208,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 89.03,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 95.14,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "083d5f58def49e18f74ada63bc1112dc46215c62",
          "message": "pkg: Update all non-major dependencies (#2720)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-07-26T13:56:21Z",
          "tree_id": "6203de2eecaea70c0b8c274c25c29f90d6d7cf9c",
          "url": "https://github.com/data-client/rest-hooks/commit/083d5f58def49e18f74ada63bc1112dc46215c62"
        },
        "date": 1690380338177,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 266,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5500,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 123,
            "range": "±3.75%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 435,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 836,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 404,
            "range": "±3.75%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 121,
            "range": "±3.34%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3856,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 828,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4752,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4502,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3610,
            "range": "±3.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2615426,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 116,
            "range": "±3.42%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1649,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1467,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 401,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 262,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 107,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 119,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8af1b5a8ef8d778efd00f633416c93db3db1a727",
          "message": "enhance: Detect unusable pk when pk is serialized (#2723)",
          "timestamp": "2023-07-29T18:51:56-05:00",
          "tree_id": "b7290bb6e8a38f7e4ff096d3636edc38633da52a",
          "url": "https://github.com/data-client/rest-hooks/commit/8af1b5a8ef8d778efd00f633416c93db3db1a727"
        },
        "date": 1690674892545,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 276,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5516,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 133,
            "range": "±4.51%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 456,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 871,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 434,
            "range": "±3.55%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 130,
            "range": "±3.66%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4208,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 892,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4721,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4720,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3863,
            "range": "±2.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2596185,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 129,
            "range": "±3.39%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1713,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1484,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 458,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 276,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 118,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 127,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "f4b625df5a16aa61fb9bd10bddacb62a62a3e882",
          "message": "enhance: schema.Entity.key should always be enumerable",
          "timestamp": "2023-07-30T12:53:34-05:00",
          "tree_id": "e1c1eda93f7c9c576157351ff52c329bec36ea94",
          "url": "https://github.com/data-client/rest-hooks/commit/f4b625df5a16aa61fb9bd10bddacb62a62a3e882"
        },
        "date": 1690739797275,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 277,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5532,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 176,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 461,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 874,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 633,
            "range": "±2.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 172,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4480,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 879,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4657,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4618,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 3771,
            "range": "±2.63%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2658109,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 164,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1733,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1438,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 435,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 273,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6f3b39b58554603252122a229baa366288f68db7",
          "message": "enhance: Only warn about name mangling when using SSR and once (#2726)",
          "timestamp": "2023-07-30T14:26:05-05:00",
          "tree_id": "6495244e9c8403c26ebe3c344c73e3ae6c16e810",
          "url": "https://github.com/data-client/rest-hooks/commit/6f3b39b58554603252122a229baa366288f68db7"
        },
        "date": 1690745341782,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 261,
            "range": "±3.05%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7186,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 184,
            "range": "±2.88%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 523,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 929,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 641,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 185,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4357,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1032,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5648,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5454,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4584,
            "range": "±3.28%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2866255,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 180,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1780,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1548,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 493,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 259,
            "range": "±3.54%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 116,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 124,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "063275f43537aa199d50950a421f065becc7d8f4",
          "message": "internal: Publish new version (#2724)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-07-31T02:04:03Z",
          "tree_id": "d3cba3d651021b295f428e4546baadc298492b00",
          "url": "https://github.com/data-client/rest-hooks/commit/063275f43537aa199d50950a421f065becc7d8f4"
        },
        "date": 1690769599256,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 207,
            "range": "±4.06%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5623,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 154,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 438,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 851,
            "range": "±3.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 622,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 163,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3812,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 885,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5003,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4566,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 4328,
            "range": "±4.06%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2638956,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 159,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1740,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1502,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 409,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 211,
            "range": "±3.96%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 102,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 108,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8a71700644cb6a16988c015a2657d3b7a481c983",
          "message": "enhance: Improve push/unshift/assign types (#2731)",
          "timestamp": "2023-08-06T17:18:53-07:00",
          "tree_id": "f7b0fe83bc90f4e4d889d824202ec6e6c0b1fac6",
          "url": "https://github.com/data-client/rest-hooks/commit/8a71700644cb6a16988c015a2657d3b7a481c983"
        },
        "date": 1691367707037,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 269,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5516,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 170,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 451,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 851,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 633,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 170,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3719,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 882,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4753,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4606,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3608,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2620957,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 150,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1676,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1503,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 405,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 272,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 122,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "eedc9d23a3c3b88972ac0d21e5d33498c94b52da",
          "message": "internal: Publish new version (#2730)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-07T00:41:24Z",
          "tree_id": "2cfd169b87a9360785ef91c0cc30e29df851aeec",
          "url": "https://github.com/data-client/rest-hooks/commit/eedc9d23a3c3b88972ac0d21e5d33498c94b52da"
        },
        "date": 1691369420885,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 226,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4869,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 120,
            "range": "±3.36%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 399,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 765,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 387,
            "range": "±3.72%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 115,
            "range": "±3.66%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3897,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 786,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4366,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3982,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 3322,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2320942,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 109,
            "range": "±3.80%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1415,
            "range": "±4.11%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1278,
            "range": "±4.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 374,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 215,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 105,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6fd842e4648e9cdf8d5d99677bebe270079e95ad",
          "message": "Add controller.expireAll() that sets all responses to *STALE* (#2738)",
          "timestamp": "2023-08-10T17:12:46-05:00",
          "tree_id": "6c7bb4ab15e10eb2555bee16cfe8ab3bb520e476",
          "url": "https://github.com/data-client/rest-hooks/commit/6fd842e4648e9cdf8d5d99677bebe270079e95ad"
        },
        "date": 1691705739324,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 256,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5543,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 163,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 451,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 864,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 618,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 165,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4251,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 858,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4663,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4548,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 3265,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2579500,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 170,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1744,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1495,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 427,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 248,
            "range": "±3.13%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 113,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 129,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b9b3cf7a25db881c90330faeba597dc071feeef8",
          "message": "internal: Publish new version (#2737)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-11T00:05:13Z",
          "tree_id": "ea15a7cfd2fac927da07a5fdab7127721931d032",
          "url": "https://github.com/data-client/rest-hooks/commit/b9b3cf7a25db881c90330faeba597dc071feeef8"
        },
        "date": 1691712847666,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 195,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4450,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 129,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 337,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 677,
            "range": "±3.10%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 501,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 127,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 2949,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 630,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3230,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3130,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getResponse",
            "value": 2523,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2105213,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 120,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1282,
            "range": "±4.29%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1142,
            "range": "±4.52%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 315,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLong",
            "value": 189,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 87.18,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "64 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 95.78,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4e9d34ebc139fb5dfcf157088e6f4273d61f4781",
          "message": "enhance: Optimistic creates no longer need a 'fake pk' (#2740)",
          "timestamp": "2023-08-11T15:08:26-05:00",
          "tree_id": "b384554a6f0559d14f3555a8f46024c9775e3124",
          "url": "https://github.com/data-client/rest-hooks/commit/4e9d34ebc139fb5dfcf157088e6f4273d61f4781"
        },
        "date": 1691784680714,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 301,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7180,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 151,
            "range": "±5.55%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 523,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 928,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 483,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 155,
            "range": "±2.91%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4042,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 983,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5189,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5104,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 4319,
            "range": "±3.67%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2901820,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 144,
            "range": "±2.78%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1800,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1380,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 539,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 314,
            "range": "±2.34%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c8c5575e5a367b42784c17241a9d1c7d685880b9",
          "message": "feat: Add 'paginationField' parameter to RestEndpoint and createResource (#2742)",
          "timestamp": "2023-08-12T16:26:45-05:00",
          "tree_id": "4af809e7c6955e45a58f983e7e47add07df8b6c3",
          "url": "https://github.com/data-client/rest-hooks/commit/c8c5575e5a367b42784c17241a9d1c7d685880b9"
        },
        "date": 1691875789259,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 278,
            "range": "±2.77%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5803,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 197,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 511,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 998,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 727,
            "range": "±2.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 196,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3826,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 909,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4226,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4108,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 2966,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3207304,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 186,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1886,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1724,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 425,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 277,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 133,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "30e8b3a42212d8935c886aebecf48fb8da458c43",
          "message": "internal: Publish new version (#2741)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-12T21:42:48Z",
          "tree_id": "6a3d30e6e0277e81506cf3d459dad61cf823975c",
          "url": "https://github.com/data-client/rest-hooks/commit/30e8b3a42212d8935c886aebecf48fb8da458c43"
        },
        "date": 1691877136064,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 203,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4620,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 136,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 353,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 716,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 531,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 131,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3122,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 670,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3467,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3396,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 2738,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2187933,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 123,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1337,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1113,
            "range": "±4.69%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 328,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 202,
            "range": "±2.93%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 91.8,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 98.45,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5cedd4485e8fc54fc4ca0b275b7cfe35deb098fe",
          "message": "feat: Add controller.fetchIfStale() (#2743)",
          "timestamp": "2023-08-12T21:49:44-07:00",
          "tree_id": "c6e5e1344a1ccc18a5167f7c1c0265f126ad796f",
          "url": "https://github.com/data-client/rest-hooks/commit/5cedd4485e8fc54fc4ca0b275b7cfe35deb098fe"
        },
        "date": 1691902381601,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 200,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4399,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 137,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 356,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 725,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 499,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 142,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3347,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 647,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3246,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3334,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 2825,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2245441,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 130,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1341,
            "range": "±3.93%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1238,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 339,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 208,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 99.31,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 102,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3356138f6b9daf20510e1ad3da822f4a1dc57c8b",
          "message": "internal: Publish new version (#2744)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-13T04:57:15Z",
          "tree_id": "ce20d65eb32a678789d9ae19f8d6e1f7a63ba541",
          "url": "https://github.com/data-client/rest-hooks/commit/3356138f6b9daf20510e1ad3da822f4a1dc57c8b"
        },
        "date": 1691903180244,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 202,
            "range": "±2.93%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5455,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 145,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 423,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 844,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 591,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 141,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4154,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 789,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4689,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4417,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3856,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2599636,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 139,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1585,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1452,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 270,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLong",
            "value": 187,
            "range": "±3.78%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 83.93,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 91.07,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a097d25e7a5a0d04564fe2531acf8008ffad8439",
          "message": "enhance: controller.fetchIfStale() resolves to data from store if it does not fetch (#2745)",
          "timestamp": "2023-08-13T08:42:59-07:00",
          "tree_id": "2a9e23c9ac8159441a66256a3ae4100b4dc74229",
          "url": "https://github.com/data-client/rest-hooks/commit/a097d25e7a5a0d04564fe2531acf8008ffad8439"
        },
        "date": 1691941580978,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 212,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4388,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 125,
            "range": "±3.86%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 349,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 684,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 492,
            "range": "±3.41%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 128,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 2969,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 643,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3451,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3332,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse",
            "value": 2765,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2207630,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 123,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1212,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1124,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 323,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 222,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 91.58,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 97.31,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4317adb94c648f8114e6e6c1ebe8ff80c3cd58e2",
          "message": "enhance: Collection based pagination updates entire 'root' response (#2747)",
          "timestamp": "2023-08-13T17:16:46-05:00",
          "tree_id": "ef9f765808c8ef04d523e9e5edbf92e62331db63",
          "url": "https://github.com/data-client/rest-hooks/commit/4317adb94c648f8114e6e6c1ebe8ff80c3cd58e2"
        },
        "date": 1691965195676,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 213,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4614,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 150,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 386,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 711,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 508,
            "range": "±3.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 142,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3354,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 767,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4162,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3910,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3299,
            "range": "±2.99%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2168012,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 137,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1444,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1220,
            "range": "±4.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 363,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 212,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 98.48,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 107,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5a16f8666881f906b92e13f6bc1071bc05199ad0",
          "message": "enhance: Allowing Collection class override for createCollectionFilter default",
          "timestamp": "2023-08-13T17:40:52-05:00",
          "tree_id": "9d52b6568d38eeebcdcadfbf6f9424b028fb71c8",
          "url": "https://github.com/data-client/rest-hooks/commit/5a16f8666881f906b92e13f6bc1071bc05199ad0"
        },
        "date": 1691966634277,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 269,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7181,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 190,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 515,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 936,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 658,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 192,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4490,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1032,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5696,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5479,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 4484,
            "range": "±3.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2911812,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 184,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1777,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1505,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 525,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 263,
            "range": "±3.53%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 117,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 126,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "44e81d31a3d8f8759bbccb4707bd6c44ed4b8c73",
          "message": "internal: Publish new version (#2746)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-13T22:48:23Z",
          "tree_id": "a561b6a2947758ea3c47bb6e628eb368e08dce80",
          "url": "https://github.com/data-client/rest-hooks/commit/44e81d31a3d8f8759bbccb4707bd6c44ed4b8c73"
        },
        "date": 1691967450311,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 339,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7099,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 192,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 519,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 924,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 653,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 188,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4548,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 998,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5396,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5357,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4792,
            "range": "±3.69%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2890895,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 180,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1768,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1538,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 492,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 338,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1fcaeb1a7b09cc869ce7651a136dea5ff13acd5b",
          "message": "fix: some versions of RN not working with Collections (#2748)",
          "timestamp": "2023-08-14T16:15:59-05:00",
          "tree_id": "b31b9d33d61a7c5a96e36246dfb42e2437cd086c",
          "url": "https://github.com/data-client/rest-hooks/commit/1fcaeb1a7b09cc869ce7651a136dea5ff13acd5b"
        },
        "date": 1692047936147,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 326,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7271,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 182,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 527,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 911,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 648,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 183,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4794,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 989,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5529,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5258,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4467,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2737682,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 176,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1703,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1488,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 464,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 325,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 128,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "318df89bf7d07b8c1e1f5340ada2393459c799f3",
          "message": "feat: Add nonFilterArgumentKeys argument to Collection (#2751)",
          "timestamp": "2023-08-17T13:40:24-05:00",
          "tree_id": "da0a345554b6e0e0d1e24f979aaa8de10e84f8a0",
          "url": "https://github.com/data-client/rest-hooks/commit/318df89bf7d07b8c1e1f5340ada2393459c799f3"
        },
        "date": 1692297803588,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 270,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5536,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 168,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 441,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 811,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 631,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 165,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4385,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 862,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4611,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4356,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3427,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2548536,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 157,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1530,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1484,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 414,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 269,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 117,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 122,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "89874fb8327ede7bc96597bb18860a9c09687a1e",
          "message": "internal: Publish new version (#2749)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-17T18:49:03Z",
          "tree_id": "2369ccec13d38d1d696243d7b43188d0a25551b6",
          "url": "https://github.com/data-client/rest-hooks/commit/89874fb8327ede7bc96597bb18860a9c09687a1e"
        },
        "date": 1692298728474,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 202,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4610,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 135,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 367,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 734,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 527,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 136,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3237,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 664,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3421,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3342,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 2843,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2228240,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 129,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1350,
            "range": "±3.60%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1216,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 340,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 205,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 97.04,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 97.84,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "15d5cc02ec2617ec07aefeb809a171ef503f9c57",
          "message": "internal: Update package-lock for stackblitz",
          "timestamp": "2023-08-20T17:53:39-05:00",
          "tree_id": "5500fec7bf4432bea3778ac5c98dfd39fa8ddca8",
          "url": "https://github.com/data-client/rest-hooks/commit/15d5cc02ec2617ec07aefeb809a171ef503f9c57"
        },
        "date": 1692572194605,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 330,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7182,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 199,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 536,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 951,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 628,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 193,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4016,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1053,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5459,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5263,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4576,
            "range": "±3.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2925108,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 190,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1797,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1564,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 518,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 324,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 134,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 145,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5ffe8b713790a4344058ac92a488c9f0d7426652",
          "message": "internal: Move stackblitz examples out of yarn",
          "timestamp": "2023-08-20T19:12:31-05:00",
          "tree_id": "7fc9b7b177dffa5fa13ad61874a25db5e93f0c77",
          "url": "https://github.com/data-client/rest-hooks/commit/5ffe8b713790a4344058ac92a488c9f0d7426652"
        },
        "date": 1692576943746,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 260,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5558,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 156,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 421,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 828,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 600,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 165,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3637,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 818,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4434,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4330,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3663,
            "range": "±2.83%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2608459,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 156,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1678,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1456,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 373,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 252,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 108,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "c002beb8b70dbb59c2ffca8a83c42d90731e69a3",
          "message": "internal: Move stackblitz examples out of yarn",
          "timestamp": "2023-08-20T19:14:58-05:00",
          "tree_id": "8fca35de468ee2411b9bd2079d0d64efa2134c86",
          "url": "https://github.com/data-client/rest-hooks/commit/c002beb8b70dbb59c2ffca8a83c42d90731e69a3"
        },
        "date": 1692577084545,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 269,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5561,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 158,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 447,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 834,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 611,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 154,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3921,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 874,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5032,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4561,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3745,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2632257,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 164,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1738,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1395,
            "range": "±3.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 407,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 270,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 113,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 126,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "339003cedf0e42926fc1ce79446df51c1163a3e8",
          "message": "internal: Move stackblitz examples out of yarn",
          "timestamp": "2023-08-20T19:34:21-05:00",
          "tree_id": "a81ada0c67fef89680e32c1d7dca43ceda7bef38",
          "url": "https://github.com/data-client/rest-hooks/commit/339003cedf0e42926fc1ce79446df51c1163a3e8"
        },
        "date": 1692578265413,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 204,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4189,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 120,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 343,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 679,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 476,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 117,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3194,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 611,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3292,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3178,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse",
            "value": 2626,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2063077,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 115,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1279,
            "range": "±3.25%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1107,
            "range": "±4.09%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 299,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLong",
            "value": 196,
            "range": "±2.66%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 84.48,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 90.86,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "bcea77fcdc1b92654045f82bb2558f56dac11a09",
          "message": "internal: Move stackblitz examples out of yarn",
          "timestamp": "2023-08-20T19:50:32-05:00",
          "tree_id": "562f3b066016b4400bc7e78d7cd41aec2d9480d2",
          "url": "https://github.com/data-client/rest-hooks/commit/bcea77fcdc1b92654045f82bb2558f56dac11a09"
        },
        "date": 1692579244933,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 212,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4489,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 126,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 347,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 692,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 496,
            "range": "±3.61%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 124,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3235,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 652,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3441,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3348,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 3010,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2208333,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 125,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1347,
            "range": "±3.69%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1105,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 314,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 219,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 87.58,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 92.8,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "67 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "873630baf99f0fce075ab7564fe8c175ea705cc2",
          "message": "pkg: Update all non-major dependencies (#2727)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-21T01:06:44Z",
          "tree_id": "7a51350201a954b719a39cad4f9340a0abdfb8b4",
          "url": "https://github.com/data-client/rest-hooks/commit/873630baf99f0fce075ab7564fe8c175ea705cc2"
        },
        "date": 1692580579818,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 308,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7230,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 191,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 528,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 934,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 659,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 185,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4435,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 983,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5273,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5163,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4623,
            "range": "±3.53%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2796375,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 180,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1435,
            "range": "±3.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1556,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 510,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 316,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 138,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "63d6ca971667c4cb1a14765c10b8e85a7f86fac7",
          "message": "internal: Remove example changelogs",
          "timestamp": "2023-08-21T12:15:02-05:00",
          "tree_id": "c8eeb3b688981ed232e08e4e85a3f086462e8a8d",
          "url": "https://github.com/data-client/rest-hooks/commit/63d6ca971667c4cb1a14765c10b8e85a7f86fac7"
        },
        "date": 1692638298765,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 216,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4541,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 145,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 376,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 728,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 524,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 142,
            "range": "±2.61%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3321,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 750,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3818,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3739,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 3294,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2162783,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 135,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1457,
            "range": "±4.06%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1288,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 362,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 215,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 109,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "11c0cf2372a1a7a3ac09d00a84ed6f49fded9143",
          "message": "internal: Pull examples into workspace for CI (#2767)",
          "timestamp": "2023-08-22T17:17:49-05:00",
          "tree_id": "ade8f366108f7e9de82cc237afbfd97968864620",
          "url": "https://github.com/data-client/rest-hooks/commit/11c0cf2372a1a7a3ac09d00a84ed6f49fded9143"
        },
        "date": 1692742853305,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 328,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7177,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 186,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 524,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 898,
            "range": "±3.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 646,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 187,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5237,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1014,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5793,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5511,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4658,
            "range": "±3.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2856600,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 178,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1744,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1498,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 476,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 328,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 124,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4bbf6fb9ae024e5981a67b494ac05b1f9a1f21ac",
          "message": "internal: Publish new version (#2765)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-22T23:27:32Z",
          "tree_id": "e74bffe40a20ad5d2639105e4376d1c093188ffd",
          "url": "https://github.com/data-client/rest-hooks/commit/4bbf6fb9ae024e5981a67b494ac05b1f9a1f21ac"
        },
        "date": 1692747433328,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 212,
            "range": "±3.47%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5455,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 170,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 447,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 857,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 601,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 162,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4126,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 858,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5162,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4555,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3260,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2613283,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 155,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1678,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1513,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 416,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 209,
            "range": "±4.34%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 109,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "608b7829d1efcc07a2ed003bcece2a3fb66d4dce",
          "message": "pkg: Update all non-major dependencies (#2769)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-23T18:06:17Z",
          "tree_id": "f185408670776f6af85b26779c49ef71ace1ae8c",
          "url": "https://github.com/data-client/rest-hooks/commit/608b7829d1efcc07a2ed003bcece2a3fb66d4dce"
        },
        "date": 1692814576237,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 256,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5372,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 160,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 449,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 855,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 622,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 161,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3542,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 853,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4679,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4426,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 3891,
            "range": "±2.68%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2645036,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 156,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1747,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1410,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 413,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 250,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f95dbc64d172706ccd4dc9ed2837e6d31b7ef69a",
          "message": "enhance: Collections can filter based on FormData arguments (#2771)",
          "timestamp": "2023-08-24T16:12:21-05:00",
          "tree_id": "a8f37b97ddb3be67a1ac80341750c4b7b8b91458",
          "url": "https://github.com/data-client/rest-hooks/commit/f95dbc64d172706ccd4dc9ed2837e6d31b7ef69a"
        },
        "date": 1692911725270,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 213,
            "range": "±3.32%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5522,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 128,
            "range": "±4.23%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 454,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 853,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 422,
            "range": "±3.93%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 127,
            "range": "±3.58%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3834,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 834,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4627,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4320,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3333,
            "range": "±3.15%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2094820,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 128,
            "range": "±3.28%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1639,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1431,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 444,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 209,
            "range": "±4.37%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 108,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 113,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "84c1ff89c45790f77d265e415a0437b55032c58d",
          "message": "internal: Publish new version (#2772)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-24T21:36:58Z",
          "tree_id": "c78782ca51dc8e810fd20f38ac40c385f0106629",
          "url": "https://github.com/data-client/rest-hooks/commit/84c1ff89c45790f77d265e415a0437b55032c58d"
        },
        "date": 1692913633639,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 209,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4210,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 121,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 330,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 524,
            "range": "±4.02%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 377,
            "range": "±5.50%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 120,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3251,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 621,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3420,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3242,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse",
            "value": 2764,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1798217,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 120,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1200,
            "range": "±3.72%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1031,
            "range": "±5.26%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 304,
            "range": "±3.48%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLong",
            "value": 203,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 82.12,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 87.97,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a8936f5e6d04fc4776fedee7498d84c536f116f7",
          "message": "enhance: Entity.process() now gets an addition argument of 'args' (sent from endpoint) (#2773)",
          "timestamp": "2023-08-24T16:17:23-07:00",
          "tree_id": "11b5ed979909d77b68fda7f64ca91cca9bb94d14",
          "url": "https://github.com/data-client/rest-hooks/commit/a8936f5e6d04fc4776fedee7498d84c536f116f7"
        },
        "date": 1692919224582,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 309,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7165,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 171,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 471,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 839,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 623,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 176,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4172,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 956,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5690,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5297,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4718,
            "range": "±3.77%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2366617,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 172,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1611,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1129,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 489,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 314,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 130,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1a44e04d16baeb30e3a0f5c7c2ff058152a4929c",
          "message": "pkg: Update all non-major dependencies (#2775)\n\n* pkg: Update all non-major dependencies\n\n* internal: Keep downlevel-dts on typescript 4\n\n* internal: Fix typing for test\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-08-25T02:59:35Z",
          "tree_id": "083d05e5c355ca3004402cb5f8fd77ceee380de1",
          "url": "https://github.com/data-client/rest-hooks/commit/1a44e04d16baeb30e3a0f5c7c2ff058152a4929c"
        },
        "date": 1692932968369,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 282,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5628,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 186,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 471,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 863,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 641,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 180,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4091,
            "range": "±0.05%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 913,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4686,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4391,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 3717,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2253741,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 167,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1641,
            "range": "±2.99%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1429,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 442,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 281,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 123,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "df9652fe623476131555ffce556b4d7ccee1937a",
          "message": "internal: Publish new version (#2774)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-26T19:39:04Z",
          "tree_id": "3d0cd599451305d3e1b2ff8e30483c8ed8b4f3ee",
          "url": "https://github.com/data-client/rest-hooks/commit/df9652fe623476131555ffce556b4d7ccee1937a"
        },
        "date": 1693079303110,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 207,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4505,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 137,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 383,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 713,
            "range": "±3.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 468,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 133,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3166,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 735,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4048,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3801,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3055,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1861797,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 123,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1338,
            "range": "±3.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1128,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 333,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 207,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 94.34,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 105,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3fe51a13b9e208178fcc27baa10619c43c67c109",
          "message": "pkg: Update build packages (#2778)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-27T22:47:42Z",
          "tree_id": "7c243bd48e03370c292f79ca0088ccc8ce0f7ebc",
          "url": "https://github.com/data-client/rest-hooks/commit/3fe51a13b9e208178fcc27baa10619c43c67c109"
        },
        "date": 1693177023337,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 326,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7157,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 187,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 520,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 949,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 639,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 186,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3916,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 986,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5530,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5373,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4405,
            "range": "±3.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2378705,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 179,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1600,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1366,
            "range": "±4.03%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 480,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 329,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 136,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ff51e71f45857eb172f3fe05829e34c9abb68252",
          "message": "docs: Rename rest-hooks to data-client (#2779)",
          "timestamp": "2023-08-27T21:57:43-07:00",
          "tree_id": "b77270efe742028e080195c66ada6cd7cb97fb92",
          "url": "https://github.com/data-client/rest-hooks/commit/ff51e71f45857eb172f3fe05829e34c9abb68252"
        },
        "date": 1693198842134,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 317,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7191,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 190,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 528,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 913,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 652,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 189,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4591,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 968,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5500,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5426,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4439,
            "range": "±3.48%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2380870,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 182,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1626,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1369,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 503,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 318,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 129,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5ff1d65eb526306f2a78635b659f29554625e853",
          "message": "enhance: Rename action type prefix to rdc (#2781)",
          "timestamp": "2023-08-27T22:18:51-07:00",
          "tree_id": "ce98acfb5f59ea1b4598b84440cc0fca81997957",
          "url": "https://github.com/data-client/data-client/commit/5ff1d65eb526306f2a78635b659f29554625e853"
        },
        "date": 1693200116258,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 239,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4925,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 157,
            "range": "±3.32%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 400,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 752,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 522,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 150,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3298,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 760,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4164,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3697,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 3072,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1929595,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 153,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1432,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1159,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 386,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 242,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 112,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d3343d42b970d075eda201cb85d201313120807c",
          "message": "enhance: Remove deprecated 'receive' actions (use 'set' instead) (#2782)",
          "timestamp": "2023-08-28T12:01:32-07:00",
          "tree_id": "6efa377ce40f56d68631079844481314ffca2000",
          "url": "https://github.com/data-client/data-client/commit/d3343d42b970d075eda201cb85d201313120807c"
        },
        "date": 1693249468238,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 337,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7170,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 188,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 531,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 908,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 650,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 187,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4925,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 970,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5516,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5357,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 4244,
            "range": "±3.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2401650,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 177,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1596,
            "range": "±3.77%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1437,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 488,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 335,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 140,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45ec1fcc8ab1bf68a239a801fd9eeb4d7831a06e",
          "message": "internal: Remove legacy package (#2783)",
          "timestamp": "2023-08-28T14:50:32-07:00",
          "tree_id": "2f4dadfac11b7516ce051a9d80c170b7ef35eecf",
          "url": "https://github.com/data-client/data-client/commit/45ec1fcc8ab1bf68a239a801fd9eeb4d7831a06e"
        },
        "date": 1693259633849,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 167,
            "range": "±3.98%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4468,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 131,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 361,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 739,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 542,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 137,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3360,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 677,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3712,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3579,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 3058,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1916511,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 127,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1229,
            "range": "±4.43%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1035,
            "range": "±3.37%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 327,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 168,
            "range": "±4.80%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 82.96,
            "range": "±3.08%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 88,
            "range": "±3.20%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c535f6c0ac915b5242c1c7694308b7ee7aab16a1",
          "message": "enhance: Drop support for legacy schemas (#2784)",
          "timestamp": "2023-08-28T21:07:05-07:00",
          "tree_id": "baa532be7c256ccf226951f3d4b62e80a9638f97",
          "url": "https://github.com/data-client/data-client/commit/c535f6c0ac915b5242c1c7694308b7ee7aab16a1"
        },
        "date": 1693282213732,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 210,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4544,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 142,
            "range": "±4.81%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 371,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 742,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 534,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 133,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3003,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 730,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3771,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3791,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 2991,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1878137,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 143,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1183,
            "range": "±3.38%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1205,
            "range": "±3.54%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 355,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 208,
            "range": "±2.93%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 94.08,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 100,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c865415ce598d2b882262f795c4a816b2aa0808a",
          "message": "enhance: Middleware no longer gets  prop. (#2786)",
          "timestamp": "2023-08-29T14:34:53-05:00",
          "tree_id": "17a793cf695d8fc1bd8f9b3766d3531624be9923",
          "url": "https://github.com/data-client/data-client/commit/c865415ce598d2b882262f795c4a816b2aa0808a"
        },
        "date": 1693337886052,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 226,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4664,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 160,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 404,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 740,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 548,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 150,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3358,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 772,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4225,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3943,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3120,
            "range": "±2.97%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1922440,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 148,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1451,
            "range": "±3.51%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1262,
            "range": "±3.99%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 384,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 226,
            "range": "±2.40%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 104,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 108,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "837cf57883544c7640344a01f43bf6d9e3369083",
          "message": "enhance: Remove newActions export",
          "timestamp": "2023-08-29T14:46:36-05:00",
          "tree_id": "7d623a1adbc69c08db38e442aca6cda4bbc5d11f",
          "url": "https://github.com/data-client/data-client/commit/837cf57883544c7640344a01f43bf6d9e3369083"
        },
        "date": 1693338610263,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 211,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4334,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 103,
            "range": "±3.88%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 367,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 737,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 328,
            "range": "±4.51%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 98.58,
            "range": "±3.82%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3280,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 653,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3605,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3552,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 3037,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1937207,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 98.98,
            "range": "±4.75%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1188,
            "range": "±5.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1159,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 346,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLong",
            "value": 225,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 95.84,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 103,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ccaccdbe9971d95556144e90a3afa41e8dc39183",
          "message": "enhance: makeRenderRestHook -> makeRenderDataClient (#2788)",
          "timestamp": "2023-08-29T16:27:33-05:00",
          "tree_id": "2a109d73fe14b6d6a0eaf1ab69cee33e353d2c1e",
          "url": "https://github.com/data-client/data-client/commit/ccaccdbe9971d95556144e90a3afa41e8dc39183"
        },
        "date": 1693344645036,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 233,
            "range": "±3.27%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5121,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 183,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 420,
            "range": "±3.77%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 913,
            "range": "±5.39%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 650,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 155,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3924,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 731,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4005,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3756,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse",
            "value": 3144,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2347411,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 158,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1563,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1273,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 401,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLong",
            "value": 227,
            "range": "±3.23%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 113,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 116,
            "range": "±3.16%",
            "unit": "ops/sec",
            "extra": "66 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "35ccedceb53d91dd54dd996990c7c75719be2b85",
          "message": "enhance: Serializer schemas are only processed during denormalization (#2792)",
          "timestamp": "2023-08-29T18:13:19-07:00",
          "tree_id": "e8db9f45384f5ec43d1eec364df85cdabab7b06f",
          "url": "https://github.com/data-client/data-client/commit/35ccedceb53d91dd54dd996990c7c75719be2b85"
        },
        "date": 1693358174403,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 256,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5427,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 181,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 459,
            "range": "±3.22%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 890,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 639,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 162,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3769,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 885,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4605,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4359,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3539,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2246632,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 168,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1625,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1492,
            "range": "±3.58%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 413,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 252,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 115,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 129,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "f65cf832f0cdc4d01cb2f389a2dc2b37f1e5cf04",
          "message": "enhance: Remove all /next exports",
          "timestamp": "2023-08-29T20:26:27-05:00",
          "tree_id": "fe3e6b0a539156081c228e0a350362dbf4c54527",
          "url": "https://github.com/data-client/data-client/commit/f65cf832f0cdc4d01cb2f389a2dc2b37f1e5cf04"
        },
        "date": 1693358974096,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 330,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7037,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 155,
            "range": "±4.01%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 562,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 997,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 495,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 157,
            "range": "±2.83%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4569,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1095,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5882,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5581,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 4666,
            "range": "±3.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2411075,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 149,
            "range": "±3.26%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1690,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1228,
            "range": "±3.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 551,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 323,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 143,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "79e286109b5566f8e7acfdf0f44201263072d1d1",
          "message": "enhance: Schema serializers act as functions not class (#2795)",
          "timestamp": "2023-08-30T21:26:22-07:00",
          "tree_id": "4f51a41fb58af3a75fb3a03fea7668541b88cf5b",
          "url": "https://github.com/data-client/data-client/commit/79e286109b5566f8e7acfdf0f44201263072d1d1"
        },
        "date": 1693456158391,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 263,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5643,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 180,
            "range": "±3.52%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 468,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 351,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 297,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 180,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3821,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 908,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4600,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4477,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4053,
            "range": "±3.50%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2234538,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 166,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1601,
            "range": "±2.74%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1469,
            "range": "±3.46%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 451,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 259,
            "range": "±2.96%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 122,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 132,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "570e8d033e8dbaa4829fceb60f0430a8cf91452b",
          "message": "internal: Publish new version (#2780)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-31T04:36:30Z",
          "tree_id": "7acbe3a68f8efa7f23a9c15b8f3d811510d2b61d",
          "url": "https://github.com/data-client/data-client/commit/570e8d033e8dbaa4829fceb60f0430a8cf91452b"
        },
        "date": 1693457114157,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 275,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5049,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 129,
            "range": "±4.00%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 475,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 327,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 181,
            "range": "±6.00%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 132,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3843,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 901,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5300,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4632,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3731,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2249483,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 123,
            "range": "±3.71%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1585,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1303,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 443,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 268,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 116,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dca34e8577eca53a60ca2e1c01ed047e5e9e4cf3",
          "message": "internal: Publish new version (#2798)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-08-31T15:27:26Z",
          "tree_id": "681955808798541953f310bf3ca17eec85120f91",
          "url": "https://github.com/data-client/data-client/commit/dca34e8577eca53a60ca2e1c01ed047e5e9e4cf3"
        },
        "date": 1693496227291,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 243,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4844,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 158,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 396,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 266,
            "range": "±3.41%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 226,
            "range": "±3.42%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 138,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3112,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 694,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3499,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3550,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse",
            "value": 2602,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2023211,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 141,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1474,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1081,
            "range": "±3.15%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 319,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLong",
            "value": 228,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 98.96,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 107,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "98d7a14fc1a0e19389627698a1f67d44eddb0076",
          "message": "internal: Use Date in benchmark to not have polyfill perf penalty",
          "timestamp": "2023-08-31T15:03:54-05:00",
          "tree_id": "29ff5eff5fe58259f9716a51341f59bb546e3546",
          "url": "https://github.com/data-client/data-client/commit/98d7a14fc1a0e19389627698a1f67d44eddb0076"
        },
        "date": 1693512433490,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 228,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4587,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 113,
            "range": "±5.76%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 397,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 682,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 357,
            "range": "±4.26%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 112,
            "range": "±3.91%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3269,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 779,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4090,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3827,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 3208,
            "range": "±3.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1824281,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 105,
            "range": "±4.02%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1401,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1224,
            "range": "±4.92%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 372,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLong",
            "value": 225,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 110,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26a3843d1b61900c385d8626d7062d6f0424c137",
          "message": "enhance: Remove key matching validation in Entity (#2799)",
          "timestamp": "2023-09-01T17:21:08-07:00",
          "tree_id": "c1cd18ce41ff76e9a5efad8e358c56aa64c4581f",
          "url": "https://github.com/data-client/data-client/commit/26a3843d1b61900c385d8626d7062d6f0424c137"
        },
        "date": 1693614244891,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 321,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7272,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 149,
            "range": "±4.08%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 548,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 888,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 444,
            "range": "±3.10%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 154,
            "range": "±3.03%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4645,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1003,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5488,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5070,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4234,
            "range": "±3.01%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2427423,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 144,
            "range": "±3.15%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1740,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1507,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 533,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 317,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 142,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "1e6f1aa7281465b2863825d17b5d71ea01de0eea",
          "message": "enhance: Remove dev warning for missing normalize args",
          "timestamp": "2023-09-01T19:40:55-05:00",
          "tree_id": "975079a5fca5d075301d15b3d97702c34687ffb5",
          "url": "https://github.com/data-client/data-client/commit/1e6f1aa7281465b2863825d17b5d71ea01de0eea"
        },
        "date": 1693615438149,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 258,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5394,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 180,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 465,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 820,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 613,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 179,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3912,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 884,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4292,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4441,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 3457,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2253475,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 169,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1685,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1475,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 418,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 262,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 121,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 132,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "664d3eacff08c3c75e8ed7c3ccc64ee21faa6f7f",
          "message": "enhance: Remove dev warning for missing normalize args",
          "timestamp": "2023-09-01T20:10:17-05:00",
          "tree_id": "6555033993881d45993c483207efb4c25699fb26",
          "url": "https://github.com/data-client/data-client/commit/664d3eacff08c3c75e8ed7c3ccc64ee21faa6f7f"
        },
        "date": 1693617214180,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 219,
            "range": "±2.54%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4650,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 157,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 394,
            "range": "±3.10%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 688,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 502,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 153,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3100,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 781,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3700,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3508,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 3592,
            "range": "±4.54%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1829068,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 151,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1464,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1260,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 374,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 221,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 112,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b01a270cecb67f421bff07dae015e5bd3869fd3d",
          "message": "internal: Publish new version (#2800)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-02T01:32:11Z",
          "tree_id": "1753db1a45d9be2ab19b8022654c1253a945dc49",
          "url": "https://github.com/data-client/data-client/commit/b01a270cecb67f421bff07dae015e5bd3869fd3d"
        },
        "date": 1693618909604,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 320,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7102,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 199,
            "range": "±3.36%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 548,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 906,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 624,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 203,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4168,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1020,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5204,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5059,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4354,
            "range": "±3.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2421047,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 192,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1695,
            "range": "±3.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1508,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 520,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 341,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 140,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "a7da00e82d5473f12881b85c9736a79e016ee526",
          "message": "enhance: Endpoint properties fully visible in devtool",
          "timestamp": "2023-09-02T16:25:40-05:00",
          "tree_id": "611faeebc6fdf080b14f26b5497fb342547e480b",
          "url": "https://github.com/data-client/data-client/commit/a7da00e82d5473f12881b85c9736a79e016ee526"
        },
        "date": 1693690118924,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 266,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5424,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 176,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 457,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 777,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 587,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 175,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3864,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 873,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4831,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4353,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3809,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2242990,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 166,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1542,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1362,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 416,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 257,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 112,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "2d2e94126e5962511e250df5d813d056646de41b",
          "message": "enhance: DevTools no longer forgets history if not open on page load",
          "timestamp": "2023-09-02T17:37:29-05:00",
          "tree_id": "15bcaadaa3356293c2c7f1a07eb023c4c57a4d94",
          "url": "https://github.com/data-client/data-client/commit/2d2e94126e5962511e250df5d813d056646de41b"
        },
        "date": 1693694427720,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 264,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5539,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 181,
            "range": "±4.18%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 472,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 808,
            "range": "±3.06%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 582,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 168,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4456,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 875,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4949,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4611,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 3281,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2251018,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 169,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1709,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1471,
            "range": "±3.76%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 418,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 255,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 121,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 130,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "fa12cca8018a9045c144b50ffd6f6854a7fcaee8",
          "message": "fix: Do not crash on devtool not being installed",
          "timestamp": "2023-09-02T17:45:38-05:00",
          "tree_id": "2228cc1fb77e41750411893dc9da69ea9bd5eb3f",
          "url": "https://github.com/data-client/data-client/commit/fa12cca8018a9045c144b50ffd6f6854a7fcaee8"
        },
        "date": 1693694936320,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 209,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4525,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 148,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 387,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 647,
            "range": "±3.52%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 493,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 141,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3247,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 779,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3768,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3735,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 2952,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1692532,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 133,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1205,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1153,
            "range": "±3.99%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 332,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 207,
            "range": "±3.00%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 91.78,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 104,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "aab0472450c72d31b893370e63ef0aa000ebf638",
          "message": "fix: Do not crash on devtool not being installed",
          "timestamp": "2023-09-02T17:47:15-05:00",
          "tree_id": "a9a2e8fdb48c1a6e5adebed97f6653777efe3376",
          "url": "https://github.com/data-client/data-client/commit/aab0472450c72d31b893370e63ef0aa000ebf638"
        },
        "date": 1693695042579,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 230,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4845,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 141,
            "range": "±3.43%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 381,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 718,
            "range": "±3.43%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 537,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 139,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3093,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 679,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3500,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3492,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 2617,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1980735,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 135,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1390,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1222,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 323,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLong",
            "value": 228,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 94.14,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 98.73,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fe1a7ff3ec39837340b2ef94b6d397682949b1dd",
          "message": "pkg: Update build packages (#2805)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-04T19:01:59Z",
          "tree_id": "1856f47e421d2eff762d169ff739c830f59bf6e4",
          "url": "https://github.com/data-client/data-client/commit/fe1a7ff3ec39837340b2ef94b6d397682949b1dd"
        },
        "date": 1693854718349,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 217,
            "range": "±2.36%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4751,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 151,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 393,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 706,
            "range": "±2.73%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 536,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 148,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3099,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 698,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3423,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3328,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 2807,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2053372,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 139,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1347,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1141,
            "range": "±3.77%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 333,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 215,
            "range": "±3.46%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 108,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "386372ed4d0b454687847ba2b8eed4369ef7cdf7",
          "message": "feat: Add button to open devtool (#2803)",
          "timestamp": "2023-09-04T15:39:34-05:00",
          "tree_id": "e291878e33644879f8d647632aed160c4584dfb5",
          "url": "https://github.com/data-client/data-client/commit/386372ed4d0b454687847ba2b8eed4369ef7cdf7"
        },
        "date": 1693860156476,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 349,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7315,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 154,
            "range": "±3.98%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 548,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 857,
            "range": "±3.14%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 458,
            "range": "±3.13%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 150,
            "range": "±3.19%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4649,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1030,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5317,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4985,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4480,
            "range": "±3.46%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2401379,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 151,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1676,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1436,
            "range": "±4.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 530,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 335,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 141,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f520fbcf05f263cd17ff6096e99bdf42febe2c5a",
          "message": "internal: Publish new version (#2802)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-04T20:50:38Z",
          "tree_id": "1c46d83b02cee52ba920d8e9fb76007999df903d",
          "url": "https://github.com/data-client/data-client/commit/f520fbcf05f263cd17ff6096e99bdf42febe2c5a"
        },
        "date": 1693861234565,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 218,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4562,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 143,
            "range": "±3.28%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 370,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 675,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 482,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 137,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3050,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 681,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3470,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3384,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getResponse",
            "value": 2692,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1956682,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 137,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1339,
            "range": "±4.28%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1195,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 335,
            "range": "±2.34%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 225,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 95.92,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 103,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "73 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "c9ca31f3f4f2f6e3174c74172ebc194edbe56bb2",
          "message": "feat: Better track state changes between each action",
          "timestamp": "2023-09-05T23:50:36-05:00",
          "tree_id": "872f684a29d842d3088c41b427f62d16d7b4cdd6",
          "url": "https://github.com/data-client/data-client/commit/c9ca31f3f4f2f6e3174c74172ebc194edbe56bb2"
        },
        "date": 1693976016813,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 261,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5493,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 182,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 472,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 798,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 575,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 171,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3613,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 870,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5005,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4696,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 3697,
            "range": "±3.08%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2249598,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 171,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1628,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1460,
            "range": "±3.00%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 419,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 255,
            "range": "±3.02%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 119,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 130,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "04b067c2d464c603d6c4daf6420cf462bce9359e",
          "message": "docs: Update github links in changelogs",
          "timestamp": "2023-09-07T15:52:14-05:00",
          "tree_id": "bc4c32a068285c3b211be9ac961d3af23c895a65",
          "url": "https://github.com/reactive/data-client/commit/04b067c2d464c603d6c4daf6420cf462bce9359e"
        },
        "date": 1694120109324,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 323,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7244,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 151,
            "range": "±5.37%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 545,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 845,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 472,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 155,
            "range": "±3.01%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4854,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1016,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5703,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5435,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4525,
            "range": "±3.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2445236,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 145,
            "range": "±3.24%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1683,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1508,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 544,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 316,
            "range": "±2.68%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 143,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a02bb768c110b4291cef5399e784b346a99a27ab",
          "message": "internal: Publish new version (#2810)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-07T21:14:15Z",
          "tree_id": "55439fb79bdea5bf7f8c9095b9bbf0d206a72bda",
          "url": "https://github.com/reactive/data-client/commit/a02bb768c110b4291cef5399e784b346a99a27ab"
        },
        "date": 1694121787153,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 337,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7250,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 195,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 551,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 893,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 561,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 186,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4316,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1010,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5633,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5188,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 4307,
            "range": "±3.20%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2392173,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 185,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1712,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1494,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 505,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 335,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 127,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3433776dfbd75c9b8d577668d2826f391f5f29da",
          "message": "pkg: Update build packages (#2815)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-16T04:42:19Z",
          "tree_id": "e5b97dc087540bcc9906e30f9d5931b7ef9ef56a",
          "url": "https://github.com/reactive/data-client/commit/3433776dfbd75c9b8d577668d2826f391f5f29da"
        },
        "date": 1694839878371,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 309,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7273,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 146,
            "range": "±3.62%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 543,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 860,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 443,
            "range": "±3.40%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 144,
            "range": "±3.30%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4170,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 960,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5227,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5339,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4200,
            "range": "±4.18%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2310720,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 130,
            "range": "±3.25%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1398,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1320,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 477,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 309,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 123,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 134,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "02d33e8e09dc6ab7a2a9faee3ac342119ea392f0",
          "message": "pkg: Update all non-major dependencies (#2816)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-16T05:00:23Z",
          "tree_id": "ab9c94fd4922db964048bf158ee8e214210609e7",
          "url": "https://github.com/reactive/data-client/commit/02d33e8e09dc6ab7a2a9faee3ac342119ea392f0"
        },
        "date": 1694841011228,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 225,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4394,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 133,
            "range": "±3.79%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 350,
            "range": "±3.35%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 642,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 486,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 137,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 2962,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 682,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3397,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3275,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 2637,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1822302,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 128,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1298,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1102,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 307,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 217,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 90.53,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "68 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 90.83,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc82dad4a366767ab87c6445fb932fce9398f0c9",
          "message": "internal: Publish new version (#2819)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-18T21:45:50Z",
          "tree_id": "66a3f7300cef5290835ce42bdb2228a61409b93a",
          "url": "https://github.com/reactive/data-client/commit/cc82dad4a366767ab87c6445fb932fce9398f0c9"
        },
        "date": 1695074137682,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 320,
            "range": "±2.34%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7198,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 206,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 541,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 880,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 608,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 194,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4362,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1016,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5814,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5363,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4381,
            "range": "±3.80%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2439864,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 188,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1561,
            "range": "±3.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1513,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 494,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 317,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 141,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "599d789f9da09622a6bd978cac78c447a2bd0497",
          "message": "internal: Publish new version (#2820)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-19T05:58:28Z",
          "tree_id": "b11b2cd4296bb811afad6d9df665b071744c3333",
          "url": "https://github.com/reactive/data-client/commit/599d789f9da09622a6bd978cac78c447a2bd0497"
        },
        "date": 1695103681632,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 277,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5388,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 179,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 463,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 814,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 585,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 179,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3778,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 892,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4904,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4611,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 3546,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2265166,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 169,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1615,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1505,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 414,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 275,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 117,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 128,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1c1af568947e1530459144a30f4223ca0773bc6f",
          "message": "pkg: Update all non-major dependencies (#2821)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-19T06:46:48Z",
          "tree_id": "e9d292d5fab50e1f2baa83835cf180662cabeabc",
          "url": "https://github.com/reactive/data-client/commit/1c1af568947e1530459144a30f4223ca0773bc6f"
        },
        "date": 1695106600507,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 249,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5410,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 169,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 458,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 807,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 582,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 168,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3722,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 827,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4804,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4382,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 3556,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2229060,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 165,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1689,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1411,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 402,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLong",
            "value": 245,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 110,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 123,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ed23f0027479b29081fa5a10e057fc037b064d5c",
          "message": "internal: Publish new version (#2824)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-21T02:32:26Z",
          "tree_id": "32a409403505904627e5b282a48bde3ed668a00e",
          "url": "https://github.com/reactive/data-client/commit/ed23f0027479b29081fa5a10e057fc037b064d5c"
        },
        "date": 1695264126106,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 223,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4538,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 150,
            "range": "±3.13%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 392,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 679,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 495,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 140,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3717,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 739,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4191,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3852,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 2776,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1905550,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 138,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1324,
            "range": "±3.71%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1208,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 347,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 223,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 101,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 109,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d3e6a4d57e27b900190715cd2f2c402b26047fe7",
          "message": "pkg: Update build packages (#2828)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-23T16:01:18-07:00",
          "tree_id": "76041290637b39ad46ef6c3345fc10f08a615dc3",
          "url": "https://github.com/reactive/data-client/commit/d3e6a4d57e27b900190715cd2f2c402b26047fe7"
        },
        "date": 1695510259831,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 322,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7002,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 204,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 549,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 859,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 583,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 186,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4100,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 984,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5336,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5032,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 4293,
            "range": "±3.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2407294,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 191,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1732,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1285,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 513,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 316,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 130,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 141,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "130697604d293b08e18de7302792e67ef28bcf13",
          "message": "pkg: Update build packages (#2829)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-23T23:24:27Z",
          "tree_id": "49ea1e28d56019e48089b8287b8a35f14c381c82",
          "url": "https://github.com/reactive/data-client/commit/130697604d293b08e18de7302792e67ef28bcf13"
        },
        "date": 1695512040794,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 255,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5412,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 178,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 465,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 831,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 603,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 177,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3965,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 875,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4806,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4417,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3262,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2254924,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 167,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1719,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1503,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 420,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 252,
            "range": "±2.77%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 120,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 131,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b6f39c74ed2bb36bcd581766594ba02d49f6f75",
          "message": "internal: Publish new version (#2832)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-24T01:19:08Z",
          "tree_id": "829dd84bb3278ab18b5b685e2ab0888eca642eda",
          "url": "https://github.com/reactive/data-client/commit/9b6f39c74ed2bb36bcd581766594ba02d49f6f75"
        },
        "date": 1695518953586,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 193,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4179,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 101,
            "range": "±3.00%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 343,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 649,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 300,
            "range": "±6.07%",
            "unit": "ops/sec",
            "extra": "70 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 99.06,
            "range": "±3.78%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3036,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 620,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3259,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3248,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse",
            "value": 2459,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1783783,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 86.98,
            "range": "±3.78%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1245,
            "range": "±3.94%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1098,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 290,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLong",
            "value": 188,
            "range": "±4.06%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 84.7,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 89.7,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "01e219970f21baf09dea465d2ce6439e93b23310",
          "message": "pkg: Update build packages (#2835)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-26T17:36:55Z",
          "tree_id": "18f32a2ec9ba3f5792eef6228aee35c9253269e1",
          "url": "https://github.com/reactive/data-client/commit/01e219970f21baf09dea465d2ce6439e93b23310"
        },
        "date": 1695750400474,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 322,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7260,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 201,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 546,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 897,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 602,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 197,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4144,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1010,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5750,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5514,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4182,
            "range": "±3.47%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2426052,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 187,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1723,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1471,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 486,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 313,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 127,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 139,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "78 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1513ef868d2394a524340bd4abc718c0294d0207",
          "message": "pkg: Update all non-major dependencies (#2836)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-09-26T17:48:56Z",
          "tree_id": "33ca9fe475ec89f513444aa4eef671098cc33fa0",
          "url": "https://github.com/reactive/data-client/commit/1513ef868d2394a524340bd4abc718c0294d0207"
        },
        "date": 1695751204398,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 208,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4595,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 142,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 367,
            "range": "±3.82%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 716,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 514,
            "range": "±2.92%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 136,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3146,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 675,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3573,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3436,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse",
            "value": 2605,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1980952,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 133,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1320,
            "range": "±5.46%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1225,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 326,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "setLong",
            "value": 205,
            "range": "±3.13%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 91.06,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 100,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "14560a22889e3638572be0dac856adb07314cfd9",
          "message": "pkg: Update all non-major dependencies (#2847)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-10-06T12:51:47Z",
          "tree_id": "053ac4425f22510b391c9dc3fb147e5869c22476",
          "url": "https://github.com/reactive/data-client/commit/14560a22889e3638572be0dac856adb07314cfd9"
        },
        "date": 1696597323775,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 233,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4824,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 161,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 396,
            "range": "±2.96%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 701,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 525,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 150,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3295,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 795,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4122,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3783,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getResponse",
            "value": 3032,
            "range": "±3.66%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2018332,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 150,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1416,
            "range": "±4.00%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1284,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 364,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLong",
            "value": 236,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 103,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 109,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "52ba05f5ed3dbaf32322b37894386c28172056d3",
          "message": "pkg: Update build packages (#2852)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-10-15T08:46:32Z",
          "tree_id": "eb1ccf7001b6e08f720eb33d2ee4eb0f9bfe522f",
          "url": "https://github.com/reactive/data-client/commit/52ba05f5ed3dbaf32322b37894386c28172056d3"
        },
        "date": 1697360154940,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 253,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5551,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 129,
            "range": "±4.51%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 469,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 815,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 417,
            "range": "±3.57%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 127,
            "range": "±3.29%",
            "unit": "ops/sec",
            "extra": "72 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3605,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 874,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4563,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4614,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3459,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2257668,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 120,
            "range": "±4.11%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1684,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1513,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 422,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 250,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 116,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 129,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "17c33773f34729a97513644079c6a072404700d8",
          "message": "pkg: Update all non-major dependencies (#2854)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-10-15T09:22:08Z",
          "tree_id": "ae1af6ab9c67ca5c8303878be0830ceca64ba4a5",
          "url": "https://github.com/reactive/data-client/commit/17c33773f34729a97513644079c6a072404700d8"
        },
        "date": 1697362412281,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 211,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 4619,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 112,
            "range": "±4.49%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 387,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 664,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 345,
            "range": "±4.01%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 109,
            "range": "±3.54%",
            "unit": "ops/sec",
            "extra": "69 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3286,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 702,
            "range": "±3.20%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 3985,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 3857,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse",
            "value": 2944,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 1865830,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 105,
            "range": "±3.71%",
            "unit": "ops/sec",
            "extra": "67 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1364,
            "range": "±2.78%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1292,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 370,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLong",
            "value": 216,
            "range": "±3.22%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 100,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "73 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 111,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43b2e41ebdf3a293fbafab16e465a4193a9bc0f8",
          "message": "pkg: Update all non-major dependencies (#2856)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-10-19T17:33:25Z",
          "tree_id": "698f22adea7dd35c55f94d72b95ca8447b33f271",
          "url": "https://github.com/reactive/data-client/commit/43b2e41ebdf3a293fbafab16e465a4193a9bc0f8"
        },
        "date": 1697737460476,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 266,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5526,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 171,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 458,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 804,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 579,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 170,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3771,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 849,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4329,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4344,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 3312,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2258196,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 160,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1667,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1427,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 397,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 265,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 117,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 126,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c250cffd18f4ad73f4087f9b957dc7f402b9a3ab",
          "message": "pkg: Update all non-major dependencies (#2863)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-10-25T08:20:01Z",
          "tree_id": "6d6aa57d6016aadb3147a7e4b56b785360bc72ed",
          "url": "https://github.com/reactive/data-client/commit/c250cffd18f4ad73f4087f9b957dc7f402b9a3ab"
        },
        "date": 1698222547742,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 349,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7138,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 199,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 528,
            "range": "±3.18%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 820,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 620,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 196,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 4376,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1055,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5778,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5412,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4702,
            "range": "±3.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2340381,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 191,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1744,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1246,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 514,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 347,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 131,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 141,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a6202fcd5a5fb0a6218459056a5231ee7726326f",
          "message": "pkg: Update all non-major dependencies (#2872)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-10-28T20:12:05Z",
          "tree_id": "1771639a2171fbf6e52e5587741617625741a883",
          "url": "https://github.com/reactive/data-client/commit/a6202fcd5a5fb0a6218459056a5231ee7726326f"
        },
        "date": 1698524500464,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 271,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5424,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 176,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 460,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 798,
            "range": "±3.14%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 591,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 169,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3616,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 866,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4821,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4560,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 3587,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2228883,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 158,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1613,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1364,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 400,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLong",
            "value": 266,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 114,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 127,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "57d87d6d851c19b4fd22eb57c629a7f2cab01f87",
          "message": "feat: Allow practical combination of Query with any schema (#2837)",
          "timestamp": "2023-11-08T08:18:58-08:00",
          "tree_id": "1866e7705a229831fbc10fb11e28506fc27bd9cb",
          "url": "https://github.com/reactive/data-client/commit/57d87d6d851c19b4fd22eb57c629a7f2cab01f87"
        },
        "date": 1699460571812,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 436,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9170,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 275,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 737,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1278,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 881,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 273,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5741,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1490,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7047,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6849,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5260,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3209063,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 258,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2221,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1887,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 685,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 451,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 195,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f52abf24261c729c226dc5bf9bb50af0b394d68",
          "message": "pkg: Update all non-major dependencies (#2874)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-11-08T16:42:51Z",
          "tree_id": "f52cd029c90f78657f4c912bae3c62a80d811553",
          "url": "https://github.com/reactive/data-client/commit/9f52abf24261c729c226dc5bf9bb50af0b394d68"
        },
        "date": 1699462358788,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 404,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9301,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 275,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 720,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1272,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 870,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 265,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5797,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1433,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6866,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6871,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5575,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3072427,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 252,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2192,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1847,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 651,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 404,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 176,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 188,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "87647b98f47a992d022352d819d9f80fa07f7ad3",
          "message": "pkg: Update build packages (#2875)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-11-10T01:47:20-08:00",
          "tree_id": "7769b2fa1ff44b29a9213d749c5578f107a2a925",
          "url": "https://github.com/reactive/data-client/commit/87647b98f47a992d022352d819d9f80fa07f7ad3"
        },
        "date": 1699609830312,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 343,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7132,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 199,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 539,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 882,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 595,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 192,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5041,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1010,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5856,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5491,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 4659,
            "range": "±3.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2378791,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 186,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1710,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1231,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 517,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 338,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 126,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 137,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "576797a51c2b98975a7a9f064323454813e83ce6",
          "message": "internal: Publish new version (#2873)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-11-10T14:34:50Z",
          "tree_id": "0651687f28fee7675949005f676dc57385bb26e5",
          "url": "https://github.com/reactive/data-client/commit/576797a51c2b98975a7a9f064323454813e83ce6"
        },
        "date": 1699627503897,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 254,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 5524,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 133,
            "range": "±3.05%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 465,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 798,
            "range": "±2.61%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 422,
            "range": "±3.63%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 130,
            "range": "±3.29%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 3884,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 869,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 4259,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 4308,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 3404,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2168668,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 124,
            "range": "±3.58%",
            "unit": "ops/sec",
            "extra": "71 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1708,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1497,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 407,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLong",
            "value": 256,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 117,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 129,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9aa8b60629704b1008adee529ffd3d49c1694cb0",
          "message": "pkg: Update `prettier` to v3.1.0 (#2880)\n\n* pkg: Update `prettier` to v3.1.0\n\n* internal: Update formatting\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-11-13T10:52:17Z",
          "tree_id": "4f5669b25f3edc6dfa13a3114e59c14d1dc3ac2a",
          "url": "https://github.com/reactive/data-client/commit/9aa8b60629704b1008adee529ffd3d49c1694cb0"
        },
        "date": 1699873332441,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 411,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9091,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 273,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 719,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1275,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 848,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 269,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5781,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1420,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6434,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6445,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5390,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3138760,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 252,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2214,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1830,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 657,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 404,
            "range": "±2.50%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 176,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 191,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ee8640e2569ba9518c3b5b1ec9d6aa192b9f19d",
          "message": "pkg: Update all non-major dependencies (#2887)\n\n* pkg: Update all non-major dependencies\n\n* fix: TS next for downlevel-dts\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2023-11-22T11:59:03Z",
          "tree_id": "44bd8b7fa0ce22c690b4035a2b5e93de5a2007c6",
          "url": "https://github.com/reactive/data-client/commit/2ee8640e2569ba9518c3b5b1ec9d6aa192b9f19d"
        },
        "date": 1700654943221,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 405,
            "range": "±3.01%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9229,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 277,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 734,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1297,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 882,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 264,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6032,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1483,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6811,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6421,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5239,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3027965,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 260,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2264,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1891,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 656,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 417,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f5e359ea3fa42b6701893c037f0e567353dac1e5",
          "message": "pkg: Update all non-major dependencies (#2892)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-11-28T09:09:17Z",
          "tree_id": "cbe9d4a58c51edeb78c4a712814958c6b6cddb01",
          "url": "https://github.com/reactive/data-client/commit/f5e359ea3fa42b6701893c037f0e567353dac1e5"
        },
        "date": 1701163198327,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 418,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8662,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 284,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 730,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1292,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 889,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 268,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5896,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1492,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6448,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6473,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5612,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3127414,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 255,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2188,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1907,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 681,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 442,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 183,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a1e25623fd8f3c62c69bcfb3ba99d407c0a3ed90",
          "message": "pkg: Update build packages (#2893)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-11-30T12:04:01Z",
          "tree_id": "e6093eb7f8256430aae53b5c523609e853b21478",
          "url": "https://github.com/reactive/data-client/commit/a1e25623fd8f3c62c69bcfb3ba99d407c0a3ed90"
        },
        "date": 1701346447046,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 391,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8902,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 273,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 730,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1272,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 895,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 265,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5870,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1462,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6483,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6467,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5545,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3141072,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 239,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2223,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1900,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 687,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 405,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 164,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 192,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "10b374ed907f70b725064fa16b2ff3fce8ac461f",
          "message": "pkg: Update all non-major dependencies (#2897)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-12-05T13:51:29Z",
          "tree_id": "497163be6d993acfe790408de30d93abd78e74d3",
          "url": "https://github.com/reactive/data-client/commit/10b374ed907f70b725064fa16b2ff3fce8ac461f"
        },
        "date": 1701784907771,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 417,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8908,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 275,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 741,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1278,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 871,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 272,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5884,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1472,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6657,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6530,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6058,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3147785,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 259,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2200,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1797,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 668,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 414,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 176,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 190,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1939832b3c0133890c9d692b40427d51e4d1212f",
          "message": "internal: Publish new version (#2883)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2023-12-05T14:29:13Z",
          "tree_id": "e6995eb7d5b49ecc10b9782b34551b8278e8797b",
          "url": "https://github.com/reactive/data-client/commit/1939832b3c0133890c9d692b40427d51e4d1212f"
        },
        "date": 1701787168571,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 403,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8959,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 274,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 715,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1260,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 889,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 268,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5954,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1462,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6820,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6627,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5572,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3230299,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 253,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2224,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1902,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 672,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 393,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 178,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 190,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4cabed893b3503825fd9422e163b36c260648d0a",
          "message": "pkg: Update build packages (#2903)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-12-09T20:00:18Z",
          "tree_id": "a3307c850a490b9f95dbe1d09d84e0aa6eef3afc",
          "url": "https://github.com/reactive/data-client/commit/4cabed893b3503825fd9422e163b36c260648d0a"
        },
        "date": 1702152607794,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 449,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8768,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 271,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 734,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1258,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 875,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 272,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5880,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1491,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6768,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6380,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5229,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2867856,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 259,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2057,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1779,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 695,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 455,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 197,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6988628aafeab5ddb11b9854b8acca21bd22a5f8",
          "message": "pkg: Update all non-major dependencies (#2901)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-12-09T20:15:56Z",
          "tree_id": "232a0cfa904964a20afd0bacd561cb88312d274d",
          "url": "https://github.com/reactive/data-client/commit/6988628aafeab5ddb11b9854b8acca21bd22a5f8"
        },
        "date": 1702153535855,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 386,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8706,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 260,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 717,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1259,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 848,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 246,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5854,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1409,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6895,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6855,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5603,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2795039,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 239,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1957,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1687,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 586,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 371,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 164,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 174,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "69691e58d646ad2fc5e542d02233c80c29b71fa4",
          "message": "pkg: Update build packages (#2904)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-12-12T19:28:05Z",
          "tree_id": "d12ab3cd16d13266fe6116b5021a31dc841bf43e",
          "url": "https://github.com/reactive/data-client/commit/69691e58d646ad2fc5e542d02233c80c29b71fa4"
        },
        "date": 1702409898271,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 431,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8806,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 274,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 742,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1245,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 861,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 265,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5693,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1432,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6798,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6591,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5546,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2840126,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 244,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2038,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1806,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 645,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 441,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 180,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 187,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "18e9bc208425f4167f704a195d42a616ca89e7fd",
          "message": "pkg: Update all non-major dependencies (#2908)\n\n* docs: Update example webpack config to not show warning about sass\n\n* pkg: Update all non-major dependencies\n\n---------\n\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-12-13T16:19:59Z",
          "tree_id": "2a658c97ed9c1af542a2e7f7145af2969f79fa6c",
          "url": "https://github.com/reactive/data-client/commit/18e9bc208425f4167f704a195d42a616ca89e7fd"
        },
        "date": 1702485016011,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 395,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9027,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 273,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 749,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1275,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 877,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 271,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5772,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1467,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6533,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6480,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5165,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2847625,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 258,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1999,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1792,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 665,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 406,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 179,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a98bbc64a02969bac5e165df0deff2acc0dc7318",
          "message": "pkg: Update all non-major dependencies (#2909)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-12-13T17:13:12Z",
          "tree_id": "e56a76e3451e261ed4467302573f50989f4a7725",
          "url": "https://github.com/reactive/data-client/commit/a98bbc64a02969bac5e165df0deff2acc0dc7318"
        },
        "date": 1702488191958,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 445,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9279,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 270,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 731,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1271,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 888,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 268,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5779,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1470,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6582,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6320,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5418,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2821742,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 256,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2007,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1784,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 668,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 438,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 179,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 190,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "92783aa4e6864c50fa603378a5e0479f8af73c1d",
          "message": "docs: Update benchmark results table",
          "timestamp": "2023-12-18T15:06:41Z",
          "tree_id": "a9135cb1603f164ef58063ed0aad3f1dd5d7c3bd",
          "url": "https://github.com/reactive/data-client/commit/92783aa4e6864c50fa603378a5e0479f8af73c1d"
        },
        "date": 1702912178492,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 403,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8554,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 262,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 712,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1262,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 883,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 268,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5895,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1424,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6837,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6585,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5648,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2830616,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 254,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2032,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1751,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 641,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 398,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 174,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 188,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3ff2d3aa4e3f95874d228cc1eb984c39058444f9",
          "message": "docs: Update benchmark results table",
          "timestamp": "2023-12-18T15:08:00Z",
          "tree_id": "8e52781fb0743a28d5c3715b34f53698d954b5c6",
          "url": "https://github.com/reactive/data-client/commit/3ff2d3aa4e3f95874d228cc1eb984c39058444f9"
        },
        "date": 1702912257203,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 413,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8938,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 275,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 733,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1233,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 886,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 271,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5909,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1447,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6631,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6601,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5344,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2775527,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 263,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2018,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1739,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 646,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 411,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 179,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 192,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "0109a92914d36a4d5c4e7684ea4f5f8451fd3aec",
          "message": "docs: Link to controller",
          "timestamp": "2023-12-18T15:17:40Z",
          "tree_id": "0ed2806f6a71a422b7c88330170bd6b32b225482",
          "url": "https://github.com/reactive/data-client/commit/0109a92914d36a4d5c4e7684ea4f5f8451fd3aec"
        },
        "date": 1702912826264,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 401,
            "range": "±2.61%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9174,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 273,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 733,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1274,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 877,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 260,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5848,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1430,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6688,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6526,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5295,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2745404,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 244,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2070,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1751,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 623,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLong",
            "value": 406,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 174,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 190,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "e3e1d6a39f6bde8eff520badda510b2ed89c1be7",
          "message": "docs: Link to controller",
          "timestamp": "2023-12-18T15:20:15Z",
          "tree_id": "79181ce76d0728f6e6f20c90a78f6f77059da23c",
          "url": "https://github.com/reactive/data-client/commit/e3e1d6a39f6bde8eff520badda510b2ed89c1be7"
        },
        "date": 1702912985009,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 431,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9076,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 262,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 708,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1253,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 881,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 262,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6181,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1421,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6625,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6609,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5632,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2797592,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 243,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2060,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1720,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 599,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLong",
            "value": 437,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 173,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 186,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "922be79169a3eeea8e336eee519c165431ead474",
          "message": "enhance: null values are no longer filtered in Object or Array (#2912)",
          "timestamp": "2023-12-18T09:03:13-08:00",
          "tree_id": "2bdd0f5d3260d793434ebccbcad2c7c87cdddeca",
          "url": "https://github.com/reactive/data-client/commit/922be79169a3eeea8e336eee519c165431ead474"
        },
        "date": 1702919168325,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 410,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8985,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 280,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 731,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1282,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 882,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 272,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5931,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1443,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6685,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6523,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5311,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2998303,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 262,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2056,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1717,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 675,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 408,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 179,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 191,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "604502e68fbd43053f209778d8f24449502ed5bf",
          "message": "docs: Update legacy benchmark to properly perform date conversions",
          "timestamp": "2023-12-18T20:15:43Z",
          "tree_id": "8d3823f8ccc1f8116a6297640830b78354484c08",
          "url": "https://github.com/reactive/data-client/commit/604502e68fbd43053f209778d8f24449502ed5bf"
        },
        "date": 1702930719759,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 416,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9079,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 278,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 742,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1276,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 901,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 271,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6011,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1496,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7029,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6940,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5977,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2804038,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 259,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2101,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1782,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 676,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 407,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 176,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ba08a63a651c846e3580dbd9ecb8db5c7e4818e2",
          "message": "docs: Add benchmark for Collections",
          "timestamp": "2023-12-18T20:26:13Z",
          "tree_id": "ec959f673be8b15b4fa51d91f0dc011b17f7bf80",
          "url": "https://github.com/reactive/data-client/commit/ba08a63a651c846e3580dbd9ecb8db5c7e4818e2"
        },
        "date": 1702931352238,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 434,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9120,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 270,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 718,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1252,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 877,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 265,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5830,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1448,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6827,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6491,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5363,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2821452,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 256,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2041,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1761,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 664,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5353,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 434,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 176,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 189,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "a5d1549f31e39e5ac0ea9ea5f8137388cb72c72e",
          "message": "internal: Add some comments and rename internal variables",
          "timestamp": "2023-12-19T14:08:34Z",
          "tree_id": "5acf1bebf591f831c454a35fd97adf48fbd6ede7",
          "url": "https://github.com/reactive/data-client/commit/a5d1549f31e39e5ac0ea9ea5f8137388cb72c72e"
        },
        "date": 1702995087880,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 408,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9226,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 264,
            "range": "±2.56%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 714,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1273,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 878,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 258,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5859,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1463,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6629,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6351,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5025,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2859522,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 254,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1988,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1761,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 620,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4637,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 398,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 176,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 191,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e13a25f95ed58a1a31ff30c7a38cfbdf469d8a3a",
          "message": "pkg: Update build packages (#2916)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2023-12-30T19:54:42Z",
          "tree_id": "561e30b48453adc30aa85ea971fc1065a0a4de51",
          "url": "https://github.com/reactive/data-client/commit/e13a25f95ed58a1a31ff30c7a38cfbdf469d8a3a"
        },
        "date": 1703966715504,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 437,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9443,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 268,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 726,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1257,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 891,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 269,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5924,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1457,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6931,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6722,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5615,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2860071,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 262,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2106,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1745,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 693,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5127,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 448,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3a15445e5b44ae83f3a4c391ea480e98949afd5e",
          "message": "pkg: Update all non-major dependencies (#2918)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-01-01T04:52:07Z",
          "tree_id": "2f6e5e21b94c0168faba33dbc331d6fc7acf9b69",
          "url": "https://github.com/reactive/data-client/commit/3a15445e5b44ae83f3a4c391ea480e98949afd5e"
        },
        "date": 1704085312068,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 402,
            "range": "±2.91%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9333,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 269,
            "range": "±3.00%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 728,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1260,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 875,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 271,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5885,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1455,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6705,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6652,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5443,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2762398,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 260,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 1979,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1759,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 674,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5001,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 408,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b1b3c47f10e7e5173e8eef7b2da81e2224144f1a",
          "message": "pkg: Update all non-major dependencies (#2923)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-01-12T13:33:12Z",
          "tree_id": "56954df38fd4926d4400413c6453ca42a08d8d2b",
          "url": "https://github.com/reactive/data-client/commit/b1b3c47f10e7e5173e8eef7b2da81e2224144f1a"
        },
        "date": 1705067017952,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 443,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9086,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 271,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 722,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1264,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 889,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 271,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5788,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1483,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6879,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6618,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5573,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2809978,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 257,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2061,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1775,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 677,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4970,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 446,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 180,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 190,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2d37949a031881877f92224ea73139dca357b13d",
          "message": "pkg: Update validation packages (#2926)\n\n* pkg: Update validation packages\n\n* internal: Update formatting\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2024-01-17T15:42:22Z",
          "tree_id": "7c1401a46cb7f55e3951f79ea064658e2340a77a",
          "url": "https://github.com/reactive/data-client/commit/2d37949a031881877f92224ea73139dca357b13d"
        },
        "date": 1705506779985,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 415,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9289,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 282,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 721,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1278,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 893,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 278,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5860,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1483,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6967,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6620,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5803,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2825937,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 261,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2083,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1764,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 678,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4835,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 411,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 180,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fdc6c4d5d6082e3d53643cbf915cbcdbfef96d91",
          "message": "pkg: Update `@anansi/webpack-config` to v18 (#2928)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-01-18T10:47:51Z",
          "tree_id": "77e416de470b82c3747eb86d246bc04ed3ffce3f",
          "url": "https://github.com/reactive/data-client/commit/fdc6c4d5d6082e3d53643cbf915cbcdbfef96d91"
        },
        "date": 1705575474099,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 443,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8574,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 257,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 709,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1246,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 881,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 264,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5912,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1421,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6956,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6819,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5510,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2788300,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 252,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2024,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1786,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 627,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4768,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 429,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 172,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 184,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "bf9c79cb42e3df091eafe63fee619764a7ae4350",
          "message": "docs: Fix Entity docstring links",
          "timestamp": "2024-01-18T20:29:37Z",
          "tree_id": "bbea768a9ee7ff5fb3d1117e3ae40d8c5b1a76ee",
          "url": "https://github.com/reactive/data-client/commit/bf9c79cb42e3df091eafe63fee619764a7ae4350"
        },
        "date": 1705609949599,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 442,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9223,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 258,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 717,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1269,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 884,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 270,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5786,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1455,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6600,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6602,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5562,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2794252,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 260,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2039,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1772,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 680,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4408,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 450,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 180,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 194,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "4e6a39ea2bfdb1390051f12781e899488609e1a8",
          "message": "enhance: Limit DevToolsManager action buffer depth to 100",
          "timestamp": "2024-01-18T21:15:54Z",
          "tree_id": "edb3d966ea44a40ee127b59ce40827cad2f48bcf",
          "url": "https://github.com/reactive/data-client/commit/4e6a39ea2bfdb1390051f12781e899488609e1a8"
        },
        "date": 1705612730313,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 410,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9364,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 274,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 713,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1277,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 903,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 273,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5908,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1477,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6730,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6372,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5464,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2832596,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 259,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2127,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1759,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 679,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4927,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 410,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 179,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 195,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "90 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7240cf7b0cad99b6c3f55c2596718bf5e3cd5ada",
          "message": "pkg: Update all non-major dependencies (#2929)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-01-19T08:38:58Z",
          "tree_id": "a00cb9dcb77bd9b24363e58ba9392c5ff47a5304",
          "url": "https://github.com/reactive/data-client/commit/7240cf7b0cad99b6c3f55c2596718bf5e3cd5ada"
        },
        "date": 1705654168760,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 424,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8956,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 287,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 747,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1315,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 911,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 274,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6038,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1518,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7102,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7095,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5833,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2895891,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 266,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2144,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1790,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 675,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5012,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 424,
            "range": "±2.79%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 188,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 202,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d9cd9d1e3f8e04bc3ccabfe67569f0ce5e276a4d",
          "message": "internal: Use node 20 for benchmark (#2933)",
          "timestamp": "2024-01-20T05:16:59-08:00",
          "tree_id": "7f36629afec9804374ca3e2d9a71e44c2cc02823",
          "url": "https://github.com/reactive/data-client/commit/d9cd9d1e3f8e04bc3ccabfe67569f0ce5e276a4d"
        },
        "date": 1705756783925,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 456,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9895,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 249,
            "range": "±2.54%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 883,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1383,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 715,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 236,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7410,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1640,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6383,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6325,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5119,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3093683,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 224,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2243,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1793,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 763,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4748,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 433,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 187,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 201,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5d7fdd53ced1b11ba8c54c28c82ef84dfef11202",
          "message": "internal: Run node optimize call on denormalize-non-cached as well",
          "timestamp": "2024-01-21T11:07:26Z",
          "tree_id": "8762034147fbc41de2a583d10c2de5de279258fc",
          "url": "https://github.com/reactive/data-client/commit/5d7fdd53ced1b11ba8c54c28c82ef84dfef11202"
        },
        "date": 1705835424334,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 448,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9578,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 330,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 863,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1371,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 955,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 303,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6635,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1549,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6381,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6647,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5007,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3218567,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 299,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2308,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1793,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 699,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4536,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 430,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 191,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 204,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "37793bc91266c3fabe700fe909813675ca029a82",
          "message": "internal: Publish new version (#2910)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-01-21T12:19:25Z",
          "tree_id": "fcb8567991c3e440d4729e3f462cf16189d40fc7",
          "url": "https://github.com/reactive/data-client/commit/37793bc91266c3fabe700fe909813675ca029a82"
        },
        "date": 1705840191738,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 457,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9619,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 321,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 873,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1365,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 936,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 289,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7145,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1608,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5974,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6353,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse",
            "value": 5140,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3116142,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 300,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2300,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1790,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 697,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4979,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 454,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 193,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 206,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d8717905ac36dd6960bccf1fa3ff6654ae2f6ee",
          "message": "pkg: Update build packages (#2936)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-01-26T14:46:07Z",
          "tree_id": "5b6ada6a11700209f9769fb902cbbb84342e43f2",
          "url": "https://github.com/reactive/data-client/commit/0d8717905ac36dd6960bccf1fa3ff6654ae2f6ee"
        },
        "date": 1706280974757,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 436,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9395,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 224,
            "range": "±3.65%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 849,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1341,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 699,
            "range": "±2.54%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 223,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6819,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1548,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5796,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6118,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4987,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2959104,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 215,
            "range": "±2.80%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2219,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1771,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 669,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4834,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 435,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5771da3aad7e5354e1b8f5de61c273aa43a8b237",
          "message": "pkg: Update all non-major dependencies (#2946)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-02-04T11:39:15Z",
          "tree_id": "58342a6d999c6109aa54499f629ddc6f1f6fd69f",
          "url": "https://github.com/reactive/data-client/commit/5771da3aad7e5354e1b8f5de61c273aa43a8b237"
        },
        "date": 1707047357042,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 447,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9629,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 321,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 888,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1351,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 958,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 303,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6836,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1562,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6337,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6647,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 4951,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2888601,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2328,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1765,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 687,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5124,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 437,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 189,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 202,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "eae6fd9c1c47084e30981b44e57f74ebd83f69eb",
          "message": "fix: schema.All INVALID denormalize case when class name mangling for prod builds (#2954)",
          "timestamp": "2024-02-20T05:29:18-08:00",
          "tree_id": "b46d5c7d18ff4f858e18cb5a89369cec77f1e2fb",
          "url": "https://github.com/reactive/data-client/commit/eae6fd9c1c47084e30981b44e57f74ebd83f69eb"
        },
        "date": 1708435924382,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 447,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9527,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 242,
            "range": "±3.69%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 865,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1382,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 705,
            "range": "±2.88%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 232,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7689,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1616,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6386,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6689,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5175,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3157662,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 229,
            "range": "±2.36%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2251,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1885,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 735,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4697,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 433,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 192,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 205,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "2e169b705e4f8e2eea8005291a0e76e9d11764a4",
          "message": "fix: schema.All INVALID denormalize case when class name mangling for prod builds (#2954)",
          "timestamp": "2024-02-20T13:33:07Z",
          "tree_id": "875fe3f22f5e24532b61886905ef5ec9ee6e453b",
          "url": "https://github.com/reactive/data-client/commit/2e169b705e4f8e2eea8005291a0e76e9d11764a4"
        },
        "date": 1708436171279,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 445,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9429,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 223,
            "range": "±3.60%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 818,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1346,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 686,
            "range": "±2.93%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 220,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6945,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1541,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6358,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6351,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 4808,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2853551,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 217,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2242,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1802,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 688,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4361,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 429,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "10432b7eeab8f1e31ed764d46b0775e36ea74041",
          "message": "fix: Missing nested entities should appear once they are present (#2956)",
          "timestamp": "2024-02-20T11:04:59-08:00",
          "tree_id": "b3f767055fc7a00d3c42f9d5f19b65af60f4935a",
          "url": "https://github.com/reactive/data-client/commit/10432b7eeab8f1e31ed764d46b0775e36ea74041"
        },
        "date": 1708456067475,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 432,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9406,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 220,
            "range": "±3.90%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 843,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1355,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 689,
            "range": "±2.91%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 217,
            "range": "±2.73%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7036,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1593,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6726,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6655,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse",
            "value": 5114,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3174049,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 219,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2244,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1827,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 712,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4973,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 421,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c129a2558ecb21b5d9985c13747c555b88c51b3a",
          "message": "feat: new AbortOptimistic() -> snap.abort (#2957)",
          "timestamp": "2024-02-20T11:35:41-08:00",
          "tree_id": "3278fbcd221891a9e1beffa716f06ffbc0227e00",
          "url": "https://github.com/reactive/data-client/commit/c129a2558ecb21b5d9985c13747c555b88c51b3a"
        },
        "date": 1708457905735,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 439,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9306,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 235,
            "range": "±3.37%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 837,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1323,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 703,
            "range": "±2.73%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 229,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7567,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1600,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6079,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6498,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 4950,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3060980,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 224,
            "range": "±2.77%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2242,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1816,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 705,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4787,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 438,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 190,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 203,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "446f0b905f57c290e120c6f11a6b4708554283d1",
          "message": "fix: Properly vary cache when nested pk is a number (#2961)",
          "timestamp": "2024-02-22T02:16:07-08:00",
          "tree_id": "c26f9a9482d2e9b28b3f0545048eb4cc2dc60a2b",
          "url": "https://github.com/reactive/data-client/commit/446f0b905f57c290e120c6f11a6b4708554283d1"
        },
        "date": 1708597130176,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 445,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9403,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 242,
            "range": "±3.40%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 852,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1344,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 721,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 232,
            "range": "±2.50%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7638,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1632,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6233,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6162,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4969,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2884232,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 230,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2249,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1789,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 723,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4962,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 446,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 189,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 200,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "4bcd77a56c411a760e463eb4382fbd0a69784198",
          "message": "fix: Resource.getList.schema args types",
          "timestamp": "2024-02-23T12:08:23Z",
          "tree_id": "99fdbe9d71194604dd0d69a733ed813e86d96fe1",
          "url": "https://github.com/reactive/data-client/commit/4bcd77a56c411a760e463eb4382fbd0a69784198"
        },
        "date": 1708690845036,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 438,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8992,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 234,
            "range": "±3.29%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 851,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1351,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 697,
            "range": "±3.14%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4268,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 226,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6837,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1569,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6238,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6445,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5020,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3065740,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 227,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2182,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1777,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 703,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4936,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 435,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 184,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 194,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "9550ab4e3effa9403cad55332375c271f52e77d1",
          "message": "fix: Resource.getList.schema args types",
          "timestamp": "2024-02-23T13:32:09Z",
          "tree_id": "9ebc6edbb4efce7e8d934ba2825a212f762e615a",
          "url": "https://github.com/reactive/data-client/commit/9550ab4e3effa9403cad55332375c271f52e77d1"
        },
        "date": 1708695308067,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 448,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9393,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 236,
            "range": "±3.49%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 856,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1352,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 717,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4308,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 232,
            "range": "±2.29%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7641,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1616,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5853,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6149,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5040,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3026975,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 230,
            "range": "±2.36%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2274,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1816,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 729,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5040,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 444,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 187,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 202,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "609dad02d9e6fdb7360db8609b78007ce84375c2",
          "message": "fix: Resource.getList.schema args types",
          "timestamp": "2024-02-23T13:33:57Z",
          "tree_id": "f28c4a77efeb03e069c3c308a5a9fc3bc7e71f42",
          "url": "https://github.com/reactive/data-client/commit/609dad02d9e6fdb7360db8609b78007ce84375c2"
        },
        "date": 1708695418279,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 437,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9385,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 229,
            "range": "±3.79%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 847,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1309,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 692,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4537,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 228,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6134,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1482,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6144,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6562,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5288,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3028639,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 223,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2179,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1825,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 705,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5001,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 427,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 195,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "f750e4e039f3d1c659f481005e27b294a4d37b7a",
          "message": "fix: Resource.getList.schema args types",
          "timestamp": "2024-02-23T13:45:58Z",
          "tree_id": "d053dd914b3fcdaa4d730f88c09515a9e613499c",
          "url": "https://github.com/reactive/data-client/commit/f750e4e039f3d1c659f481005e27b294a4d37b7a"
        },
        "date": 1708696135716,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 436,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9215,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 230,
            "range": "±3.19%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 824,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1363,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 708,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4305,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 230,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7650,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1622,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6083,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6465,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 4949,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2892851,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 218,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2223,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1797,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 708,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4863,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 444,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 188,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 199,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "8377e0a157419f0f4c237c392a895fec1772854d",
          "message": "fix: Resource.getList.schema args types",
          "timestamp": "2024-02-23T13:47:13Z",
          "tree_id": "69f938355ee23110198da7680dffeec6ecd1df74",
          "url": "https://github.com/reactive/data-client/commit/8377e0a157419f0f4c237c392a895fec1772854d"
        },
        "date": 1708696212673,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 437,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9151,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 321,
            "range": "±2.64%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 855,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1358,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 959,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4370,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 296,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7191,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1625,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6282,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6584,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5214,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2918129,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 299,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2199,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1788,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 687,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5114,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 433,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 188,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 201,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "72b4551fd72b149384a48db82a1757f39668f06d",
          "message": "internal: Query bench should use actual sorting behavior",
          "timestamp": "2024-02-26T14:52:19Z",
          "tree_id": "be1aafef158a340d2b80b2b9e2dd1e2ea09380f1",
          "url": "https://github.com/reactive/data-client/commit/72b4551fd72b149384a48db82a1757f39668f06d"
        },
        "date": 1708959317199,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 449,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9410,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 227,
            "range": "±4.02%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 847,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1349,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 698,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4421,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 229,
            "range": "±2.40%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7034,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1572,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6219,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6432,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 4999,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2854033,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 224,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2219,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1805,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 648,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4874,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 433,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 184,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "226b9a8be0ec46f8e3f81695880c0d925226bc68",
          "message": "pkg: Update build packages (#2964)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-02-29T09:05:12Z",
          "tree_id": "5c9e140d1b1a7e997e6f7723f0f8156cb01433af",
          "url": "https://github.com/reactive/data-client/commit/226b9a8be0ec46f8e3f81695880c0d925226bc68"
        },
        "date": 1709198118870,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 437,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9055,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 240,
            "range": "±2.75%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 846,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1332,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 719,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4220,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 226,
            "range": "±2.40%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7702,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1585,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6037,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6260,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5318,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2959763,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 225,
            "range": "±2.61%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2161,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1801,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 638,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5283,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 431,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 186,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 194,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "72762cf8a4899470ae1ba9f1bfb5fde4e3bcaeee",
          "message": "pkg: Update all non-major dependencies (#2967)\n\n* pkg: Update all non-major dependencies\n\n* docs: Update monaco version for preloads\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2024-02-29T11:04:06Z",
          "tree_id": "77b8e29c7c29e2e2ebd9a5b26570a2bfeb4b72d8",
          "url": "https://github.com/reactive/data-client/commit/72762cf8a4899470ae1ba9f1bfb5fde4e3bcaeee"
        },
        "date": 1709205434580,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 442,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9205,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 234,
            "range": "±3.73%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 853,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1363,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 721,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4445,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 231,
            "range": "±2.56%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7007,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1585,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6137,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6590,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse",
            "value": 4936,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2914817,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 232,
            "range": "±2.39%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2226,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1784,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 650,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5242,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 428,
            "range": "±2.77%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 186,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 195,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6e550260672507592d75c4781dc2563a50e664fa",
          "message": "feat: Queries, Queryable, and useQuery (#2921)",
          "timestamp": "2024-03-06T01:15:32-08:00",
          "tree_id": "393715ff816fd0e3754def98928813a1649db920",
          "url": "https://github.com/reactive/data-client/commit/6e550260672507592d75c4781dc2563a50e664fa"
        },
        "date": 1709716703904,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 446,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9394,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 322,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 851,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1344,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 942,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4303,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 308,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7326,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1611,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6259,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6673,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5235,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3112020,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2365,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1876,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 993,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5036,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 441,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 187,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 199,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "be2049dcc339ce24b62e002bfd13b197aacb60ea",
          "message": "pkg: Update all non-major dependencies (#2969)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-03-06T09:58:16Z",
          "tree_id": "dff56101f62c7f58558788ded4d818e02d6908aa",
          "url": "https://github.com/reactive/data-client/commit/be2049dcc339ce24b62e002bfd13b197aacb60ea"
        },
        "date": 1709719717434,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 425,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9244,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 230,
            "range": "±4.07%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 827,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1344,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 698,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4344,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 216,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7225,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1572,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6144,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6502,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 4751,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3004769,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 221,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2305,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1838,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1012,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4871,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 424,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 179,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 187,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "51427ac50fb0fa2eb5098a2c15609ef408a33df5",
          "message": "pkg: Update all non-major dependencies (#2970)\n\n* pkg: Update all non-major dependencies\n\n* fix: types for 5.4\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2024-03-07T11:58:36Z",
          "tree_id": "98052f65f60eddbeeea07fcaec7007985edab480",
          "url": "https://github.com/reactive/data-client/commit/51427ac50fb0fa2eb5098a2c15609ef408a33df5"
        },
        "date": 1709813328969,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 444,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9111,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 329,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 845,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1378,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 946,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4432,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 296,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7213,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1565,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6083,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6441,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 4562,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3102452,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2327,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1871,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 985,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5071,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 431,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 184,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 195,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b738e18f7dc2976907198192ed4ec62775e52161",
          "message": "enhance: state.results -> state.endpoints (#2971)",
          "timestamp": "2024-03-07T08:26:03-06:00",
          "tree_id": "8f3764cc07689d65d0ecd98eabbfd8ccbd3b644a",
          "url": "https://github.com/reactive/data-client/commit/b738e18f7dc2976907198192ed4ec62775e52161"
        },
        "date": 1709821738436,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 441,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9279,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 233,
            "range": "±3.49%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 831,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1321,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 723,
            "range": "±2.54%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4356,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 221,
            "range": "±3.33%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6860,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1558,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6457,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6495,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5196,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3218829,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 233,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2365,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1887,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1027,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4959,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 442,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 184,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 198,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bb24601e5ca5b0d92b8db75f115fcfb99fb97563",
          "message": "enhance: Entity.useIncoming -> Entity.shouldUpdate (#2972)",
          "timestamp": "2024-03-07T07:15:06-08:00",
          "tree_id": "dfd66c9fa9fa4d96d848b50b4ed761358d55f3ff",
          "url": "https://github.com/reactive/data-client/commit/bb24601e5ca5b0d92b8db75f115fcfb99fb97563"
        },
        "date": 1709824680593,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 440,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9297,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 233,
            "range": "±3.48%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 864,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1322,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 726,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4454,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 229,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5955,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1545,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6298,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6668,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5199,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3082843,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 230,
            "range": "±2.29%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2314,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1881,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1043,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4888,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 437,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 185,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 194,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "15428d07d10738f85619410a7c43b1b268baccd9",
          "message": "internal(bench): getResponse (clear cache) - Remove extra cache initializers",
          "timestamp": "2024-03-07T17:10:15Z",
          "tree_id": "6af5189bfa53db68bc81936473ab41240c03203d",
          "url": "https://github.com/reactive/data-client/commit/15428d07d10738f85619410a7c43b1b268baccd9"
        },
        "date": 1709831593513,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 443,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9310,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 318,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 863,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1360,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 946,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4489,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 291,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6855,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1578,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6069,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6253,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 4865,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3106372,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2336,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1906,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 993,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5037,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 430,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 184,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 195,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "540156f6a5257442a83f6f364ff78b13e1b5b028",
          "message": "internal(bench): Add 'get Collection'",
          "timestamp": "2024-03-07T19:23:19Z",
          "tree_id": "048f96057f610e4db8642ad96eb6561df8f4aa14",
          "url": "https://github.com/reactive/data-client/commit/540156f6a5257442a83f6f364ff78b13e1b5b028"
        },
        "date": 1709839578663,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 436,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9361,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 224,
            "range": "±3.64%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 845,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1348,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 719,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4143,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 229,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7865,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1581,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6203,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6524,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4760,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3141311,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 227,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2375,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1903,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1023,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5063,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 4146,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 430,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "38666611e768ef59790417129a2c71c235ff984c",
          "message": "internal(bench): Fix old-normalizr state merge to correctly clone nested",
          "timestamp": "2024-03-09T23:24:04Z",
          "tree_id": "cbdb74eef100ee7e358f9ce44f997d784043a745",
          "url": "https://github.com/reactive/data-client/commit/38666611e768ef59790417129a2c71c235ff984c"
        },
        "date": 1710026843445,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 470,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9255,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 318,
            "range": "±2.86%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 857,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1345,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 948,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4304,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6492,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1553,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6604,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6579,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 488,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 189,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "73de27fadb214c3c2995ca558daa9736312de7a9",
          "message": "internal(bench): Fix old-normalizr state merge to correctly clone nested",
          "timestamp": "2024-03-09T23:33:42Z",
          "tree_id": "042623108242395c4b92388edca7e29660f80819",
          "url": "https://github.com/reactive/data-client/commit/73de27fadb214c3c2995ca558daa9736312de7a9"
        },
        "date": 1710027438013,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 486,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9198,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 320,
            "range": "±3.01%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 861,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1355,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 949,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4508,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 307,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6754,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1545,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6965,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6999,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5806,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3130755,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 305,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2296,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1860,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1046,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4947,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 4343,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 488,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 191,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 200,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "9af6c26e73b36f23ef3d70286e0ae818ebdbfb52",
          "message": "docs: Update normalizr bench charts",
          "timestamp": "2024-03-10T10:29:16Z",
          "tree_id": "ab0504aa7b9da59c52d81119e96412b18a984d9d",
          "url": "https://github.com/reactive/data-client/commit/9af6c26e73b36f23ef3d70286e0ae818ebdbfb52"
        },
        "date": 1710066739581,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 480,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9477,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 316,
            "range": "±3.34%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 831,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1346,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 953,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4518,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 307,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6599,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1526,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6234,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6150,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 4865,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3159298,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 299,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2446,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1895,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 982,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4918,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 4156,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 480,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 187,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 198,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "59a407a5bcaa8e5c6a948a85f5c52f106b24c5af",
          "message": "enhance: Schema.infer -> Schema.queryKey (#2977)",
          "timestamp": "2024-03-12T05:05:26-07:00",
          "tree_id": "b117e30d23299a091b7534867c2c7558c92c1851",
          "url": "https://github.com/reactive/data-client/commit/59a407a5bcaa8e5c6a948a85f5c52f106b24c5af"
        },
        "date": 1710245306404,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 497,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9260,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 334,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 853,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1349,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 954,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4378,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 310,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6637,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1573,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6847,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6777,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5796,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3335197,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 304,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2402,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1901,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1033,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6002,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 4940,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 476,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 186,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 198,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9a4b7e8f43f8b95f4a082009ef2a732e8935fe98",
          "message": "pkg: Update all non-major dependencies (#2979)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-03-13T11:41:52Z",
          "tree_id": "1dd126646222310e29f0d2d716c66be3dfafd4a9",
          "url": "https://github.com/reactive/data-client/commit/9a4b7e8f43f8b95f4a082009ef2a732e8935fe98"
        },
        "date": 1710330734213,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 476,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8941,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 326,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 845,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1357,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 948,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4559,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6623,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1552,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6745,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6715,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5759,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 2930120,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 302,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2324,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1876,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1024,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5091,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 4421,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 477,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 198,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4cc4ebbeb587aba2424441b8cecf5677180eae1b",
          "message": "pkg: Update build packages (#2984)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-03-20T18:45:42Z",
          "tree_id": "317d3b0686226d657c8354d7ede04105c0487dde",
          "url": "https://github.com/reactive/data-client/commit/4cc4ebbeb587aba2424441b8cecf5677180eae1b"
        },
        "date": 1710960967490,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 463,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8885,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 324,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 836,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1352,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 951,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4506,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 299,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6162,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1532,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6844,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6626,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5295,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3139879,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 296,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2368,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1935,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1017,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5551,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 4738,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 469,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 186,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 197,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e62f5cabd3aad4bb63ddfd05c1960feefb2af555",
          "message": "pkg: Update all non-major dependencies (#2987)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-03-20T20:49:03Z",
          "tree_id": "27f7ac65e66d6a8ccbc50044975a5e7353e6c2aa",
          "url": "https://github.com/reactive/data-client/commit/e62f5cabd3aad4bb63ddfd05c1960feefb2af555"
        },
        "date": 1710968349711,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 465,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9095,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 314,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 837,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1338,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 953,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4199,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 290,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6790,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1533,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6244,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6029,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 4733,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3121710,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2316,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1864,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 958,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5237,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 4633,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 461,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 194,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "83502f01e6be1ae60f0c2aa10b612d9fcded4f96",
          "message": "internal: Add setSmallResponse bench",
          "timestamp": "2024-03-21T14:27:15+01:00",
          "tree_id": "ed4ae89e8d97458c9356453a028d592512b678eb",
          "url": "https://github.com/reactive/data-client/commit/83502f01e6be1ae60f0c2aa10b612d9fcded4f96"
        },
        "date": 1711027829780,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 481,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9206,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 308,
            "range": "±3.49%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 788,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1344,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 925,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4261,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5869,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1514,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6036,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6475,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5149,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3001413,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 286,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2221,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1852,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 953,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5131,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 4300,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 480,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 180,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 194,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 825,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7a5e4f8b3695c61313aeb812323838ed1679f59e",
          "message": "pkg: Update all non-major dependencies (#2992)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-03-30T11:15:07Z",
          "tree_id": "61e75a6f8887afa214ebf65a015c831585246fd2",
          "url": "https://github.com/reactive/data-client/commit/7a5e4f8b3695c61313aeb812323838ed1679f59e"
        },
        "date": 1711797915924,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 510,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9658,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 328,
            "range": "±3.34%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 897,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1440,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 1006,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4704,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 323,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6911,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1685,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6131,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6713,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5268,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 3334935,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 319,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2498,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1980,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 1048,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5307,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 4469,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 513,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 215,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 892,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f68750f8b0cafa66f6d50521e474db5e3d3c9cdd",
          "message": "feat: Memoize queries (#2978)",
          "timestamp": "2024-04-08T09:41:13-05:00",
          "tree_id": "7288aed05b98ca1cd3a095be8616f9806f3e397c",
          "url": "https://github.com/reactive/data-client/commit/f68750f8b0cafa66f6d50521e474db5e3d3c9cdd"
        },
        "date": 1712587451985,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 489,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9748,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 322,
            "range": "±2.40%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 843,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1370,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 960,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5061,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 307,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6737,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5842,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6288,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1574,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4934,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5559792,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 301,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2478,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1818,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4628,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4978,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Collection",
            "value": 4662,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 481,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 193,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 206,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 850,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "797e9b40f0b5ee5cca4cb32f1ec8e87ddc43166c",
          "message": "pkg: Update all non-major dependencies (#2994)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-08T15:16:24Z",
          "tree_id": "7caf0041687767fbee10a72cfb546b812a41d768",
          "url": "https://github.com/reactive/data-client/commit/797e9b40f0b5ee5cca4cb32f1ec8e87ddc43166c"
        },
        "date": 1712589973995,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 476,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9300,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 236,
            "range": "±3.56%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 822,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1363,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 721,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5049,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 227,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6703,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 5933,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6160,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1499,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4639,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5441283,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 224,
            "range": "±2.29%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2412,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1827,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5418,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4877,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 4733,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 465,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 195,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 849,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "326f5e203210193478eeecc5a8509b75f9fa8b22",
          "message": "pkg: Update build packages (#2996)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-08T15:50:44Z",
          "tree_id": "91f579fa7f21ac0bf95f7d11a27aa02cf8d6714b",
          "url": "https://github.com/reactive/data-client/commit/326f5e203210193478eeecc5a8509b75f9fa8b22"
        },
        "date": 1712592055809,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 484,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9126,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 315,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 836,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1323,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 946,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5063,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6497,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6414,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6319,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1490,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5629,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5698142,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2440,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1773,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5032,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4932,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 4496,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 475,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 187,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 197,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 848,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "86261ae18ab9c3620e8f6584408cf3b96ef3602b",
          "message": "pkg: Update `@anansi/webpack-config` to v19 (#2998)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-08T16:42:52Z",
          "tree_id": "a25acbc6ac4e041a8c68f659a88d4659466e2eb0",
          "url": "https://github.com/reactive/data-client/commit/86261ae18ab9c3620e8f6584408cf3b96ef3602b"
        },
        "date": 1712595195996,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 489,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9639,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 335,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 846,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1362,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 959,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5050,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6562,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6336,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6614,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1535,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4717,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5145693,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 295,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2444,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1829,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4726,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4784,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 4420,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 482,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 190,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 200,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 855,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26f622750f1e75c23fd09c11358db4eef04f2590",
          "message": "internal: Publish new version (#2940)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-08T17:03:27Z",
          "tree_id": "e2faee89158ca645aea70f7e0a438cca1527426e",
          "url": "https://github.com/reactive/data-client/commit/26f622750f1e75c23fd09c11358db4eef04f2590"
        },
        "date": 1712596431651,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 461,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9378,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 314,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 844,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1374,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 962,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5068,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6427,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6378,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6275,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1460,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5041,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5369153,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 285,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2493,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1830,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4580,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5853,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5523,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 470,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 198,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 852,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6d6fc88a1d1291dad9530e3d176fac8f264d05b5",
          "message": "pkg: Update all non-major dependencies (#3003)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-11T08:48:08Z",
          "tree_id": "d1fbb8b8c1ef1320c71c3cfdf7b03e9d1eda6c5f",
          "url": "https://github.com/reactive/data-client/commit/6d6fc88a1d1291dad9530e3d176fac8f264d05b5"
        },
        "date": 1712825924755,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 425,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9315,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 329,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 824,
            "range": "±2.44%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1368,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 967,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5062,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6678,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7030,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6881,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1577,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 5796,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5479274,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 303,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2529,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1839,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5053,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5275,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 4632,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 425,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 189,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 799,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "390df74d0ffc7bf15447213d3ac07381c0261521",
          "message": "internal: Publish new version (#3005)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-13T10:28:11Z",
          "tree_id": "ae03e5379795d497fbed86d28b8095734f6ba4ae",
          "url": "https://github.com/reactive/data-client/commit/390df74d0ffc7bf15447213d3ac07381c0261521"
        },
        "date": 1713004701531,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 501,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9379,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 322,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 850,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1360,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 971,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4981,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 307,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7397,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6683,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6616,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1636,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5220,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6191573,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 304,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2526,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1839,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4875,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4980,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Collection",
            "value": 4833,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 196,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 207,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 848,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3af5411f18033e39dfa44a23ada7f9051e602baa",
          "message": "pkg: Update all non-major dependencies (#3007)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-13T11:10:46Z",
          "tree_id": "dfe79d5afb906323f22182cdcd4ab1143c79a663",
          "url": "https://github.com/reactive/data-client/commit/3af5411f18033e39dfa44a23ada7f9051e602baa"
        },
        "date": 1713007260076,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 479,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9583,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 318,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 830,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1350,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 956,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5022,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 299,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6468,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6030,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6526,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1536,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 4881,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5444580,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 286,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2539,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1832,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4557,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4859,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Collection",
            "value": 4751,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 481,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 189,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 205,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 852,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c9063927c7437a387f426a14c4b244cc1caa49c2",
          "message": "enhance: Improve ErrorBoundary (#3010)",
          "timestamp": "2024-04-17T10:51:36-05:00",
          "tree_id": "3b815d126e757fe3db6aae32cc09590b9aacb043",
          "url": "https://github.com/reactive/data-client/commit/c9063927c7437a387f426a14c4b244cc1caa49c2"
        },
        "date": 1713369285686,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 458,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9679,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 320,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 846,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1350,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 957,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4808,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6593,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6911,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6745,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1529,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 4752,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5989091,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 289,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2515,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1829,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4748,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5582,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 4786,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 466,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 188,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 203,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 846,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "88d6d5de18c398b15586853548c154593aea00b9",
          "message": "pkg: Update all non-major dependencies (#3012)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-17T19:44:42Z",
          "tree_id": "33980e38074f690f6c4071b399502138cf6243c6",
          "url": "https://github.com/reactive/data-client/commit/88d6d5de18c398b15586853548c154593aea00b9"
        },
        "date": 1713383661829,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 472,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9416,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 321,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 838,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1328,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 951,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5177,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 305,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6280,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6618,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6542,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1490,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5014,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5059115,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 290,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2471,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1814,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4573,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5742,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5194,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 467,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 193,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 203,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 839,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce164d286c8afcb2593a86abbf23948a08aa40ba",
          "message": "enhance: Queries passthrough suspense rather than being undefined (#3017)",
          "timestamp": "2024-04-24T19:34:03-05:00",
          "tree_id": "068eb7667e753cb82fa04f6c85a7fd4f64c14f3c",
          "url": "https://github.com/reactive/data-client/commit/ce164d286c8afcb2593a86abbf23948a08aa40ba"
        },
        "date": 1714005473896,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 477,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9438,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 313,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 820,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1340,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 937,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5006,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 288,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6778,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6392,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6322,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1507,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4964,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5596350,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2480,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1831,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4521,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 4657,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 4317,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 473,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 180,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 197,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 854,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "858cd8e8d4a326a9bbe0d7918932f9329d0c2ad5",
          "message": "internal: Publish new version (#3018)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-25T00:41:49Z",
          "tree_id": "63bb8b86560928413ca7fe22edd2d1197275e23a",
          "url": "https://github.com/reactive/data-client/commit/858cd8e8d4a326a9bbe0d7918932f9329d0c2ad5"
        },
        "date": 1714007682300,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 488,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9476,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 321,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 847,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1348,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 954,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4959,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6547,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6534,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6449,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1505,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 4803,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5102893,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 290,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2454,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1811,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4718,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5444,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 4516,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 487,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 190,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 200,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 819,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "4e009d337a50b74a0ba1b2c14c90ec6ec92a4f77",
          "message": "internal: Bump node to 22 for github actions",
          "timestamp": "2024-04-25T11:06:09-04:00",
          "tree_id": "84c92e33ef0a09e928a1fb1502b9a4f389fa5f2f",
          "url": "https://github.com/reactive/data-client/commit/4e009d337a50b74a0ba1b2c14c90ec6ec92a4f77"
        },
        "date": 1714057757394,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 433,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9603,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 307,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 854,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1358,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 980,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4904,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 292,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6570,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6772,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6580,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1517,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5793,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5833897,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 287,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2651,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1956,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5511,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6037,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5282,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLong",
            "value": 427,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 179,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 187,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 833,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dcb6b2fd4a5015242f43edc155352da6789cdb5d",
          "message": "enhance: Improve args type matching for hooks (#3020)",
          "timestamp": "2024-04-25T17:40:09-05:00",
          "tree_id": "6da1060c286f6823077ee7b7d16b95e19ac5767e",
          "url": "https://github.com/reactive/data-client/commit/dcb6b2fd4a5015242f43edc155352da6789cdb5d"
        },
        "date": 1714084989995,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 443,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9387,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 327,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 851,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1359,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 978,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4946,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 298,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6507,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6370,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6202,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1488,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5848,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5808311,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2733,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1978,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6597,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6383,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5796,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 438,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 191,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 866,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26eb02d78fa8a216a8f5e159ea3005bf929c451a",
          "message": "pkg: Update all non-major dependencies (#3024)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-26T15:21:14Z",
          "tree_id": "6d985a80af54980572d80c1a5cc3dfa8d748fd46",
          "url": "https://github.com/reactive/data-client/commit/26eb02d78fa8a216a8f5e159ea3005bf929c451a"
        },
        "date": 1714145417709,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 445,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9752,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 345,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 850,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1371,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 985,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4919,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 296,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7027,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6716,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6450,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1537,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6213,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6024331,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 295,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2662,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2059,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5613,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6606,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5287,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 442,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 875,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b1bbe6c4323ac492f6d74c1ab6c6d6e76af4a244",
          "message": "internal: Publish new version (#3021)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-26T16:05:01Z",
          "tree_id": "959622cdc983c585015b06e96005a353704b86d2",
          "url": "https://github.com/reactive/data-client/commit/b1bbe6c4323ac492f6d74c1ab6c6d6e76af4a244"
        },
        "date": 1714148049460,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 443,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9674,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 342,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 895,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1379,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 985,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5043,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 291,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5733,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6464,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6313,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1469,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6082,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5976387,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 289,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2665,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2006,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5309,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6581,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 5510,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 438,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 180,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 188,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 855,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f5368c4195fadbe082ca0eff5a1150171b66390",
          "message": "pkg: Update all non-major dependencies (#3032)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-27T23:59:33-05:00",
          "tree_id": "ecf6e4857cc85a209c51ad5f56521eb4c01abc29",
          "url": "https://github.com/reactive/data-client/commit/5f5368c4195fadbe082ca0eff5a1150171b66390"
        },
        "date": 1714280561872,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 439,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9752,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 339,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 884,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1368,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 961,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4902,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 293,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6812,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6610,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6454,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1525,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5705,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5963745,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 300,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2658,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2051,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5396,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6333,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 4786,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 443,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 186,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 198,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 849,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2152b41afc56027175bd36e7ef89c433a2e5e025",
          "message": "enhance: Environments without RequestIdleCallback will call immediately (#3033)",
          "timestamp": "2024-04-28T12:15:09-05:00",
          "tree_id": "179931134a4ad40a0579058614f616e1bec2f83b",
          "url": "https://github.com/reactive/data-client/commit/2152b41afc56027175bd36e7ef89c433a2e5e025"
        },
        "date": 1714324691008,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 450,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9584,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 330,
            "range": "±3.10%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 898,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1360,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 970,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4821,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6240,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6771,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6492,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1534,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6202,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5998849,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2649,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2040,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5510,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6434,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Collection",
            "value": 5475,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 451,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 186,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 198,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 858,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fa1f33b54d2562941dd44c4634c1cb44871ed06",
          "message": "internal: Publish new version (#3029)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-28T21:02:07Z",
          "tree_id": "dcf45bb2672a0da78f5b076a3dfc8937022a1332",
          "url": "https://github.com/reactive/data-client/commit/9fa1f33b54d2562941dd44c4634c1cb44871ed06"
        },
        "date": 1714338647360,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 455,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9808,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 348,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 883,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1397,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 990,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4920,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 295,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6169,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6701,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6493,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1560,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5991,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6009144,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 295,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2591,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1916,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6860,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6594,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5498,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 456,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 190,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 201,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 870,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "655e48bbae27eb55d3f739677ed887059926b4bd",
          "message": "pkg: Update build packages (#3039)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-04-30T15:44:21Z",
          "tree_id": "8cc153fb3394fbdf54590d001ddc69df5e8547f0",
          "url": "https://github.com/reactive/data-client/commit/655e48bbae27eb55d3f739677ed887059926b4bd"
        },
        "date": 1714492409781,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 412,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9537,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 328,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 842,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1317,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 946,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4608,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 280,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5696,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6659,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6539,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1443,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5859,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5862196,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 284,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2656,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1992,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5449,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6745,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5680,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 433,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 168,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 183,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 845,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5b64cbf3126c404b70853960a4bdedc268e3328c",
          "message": "enhance: Improve argmatch typing (#3043)\n\n* enhance: Improve argmatch typing\r\n\r\n* enhance: Change NoInfer location\r\n\r\n* enhance: Remove NoInfer for parameters",
          "timestamp": "2024-05-01T12:39:48-05:00",
          "tree_id": "327414b78f3e58fb768272003de6381cd85e2142",
          "url": "https://github.com/reactive/data-client/commit/5b64cbf3126c404b70853960a4bdedc268e3328c"
        },
        "date": 1714585372448,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 444,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9597,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 333,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 894,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1354,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 979,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5031,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6791,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6499,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6308,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1502,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6410,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5681221,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 301,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2662,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1988,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6590,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6649,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5961,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 443,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 185,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 194,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 849,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "000051e35943c8ac57ccfb3a988710862a983621",
          "message": "internal: Publish new version (#3044)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-05-01T21:14:12Z",
          "tree_id": "c387f533c179a1d30f7ac52aa38e0a5377ae97af",
          "url": "https://github.com/reactive/data-client/commit/000051e35943c8ac57ccfb3a988710862a983621"
        },
        "date": 1714598567893,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 445,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 7935,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 336,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 896,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1300,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 861,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4952,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 293,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6591,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6388,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6271,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1450,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse",
            "value": 6305,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6120708,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2685,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1937,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5299,
            "range": "±2.66%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5967,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 4569,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 448,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 188,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 197,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 817,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "92 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "fb3b32be07dcc3ec20e5d333950ce5240694ff97",
          "message": "internal: Simplify type casting for non-exposed types",
          "timestamp": "2024-05-03T16:05:50-04:00",
          "tree_id": "e9ec62003bd005888141e27b9191a3b7603f9474",
          "url": "https://github.com/reactive/data-client/commit/fb3b32be07dcc3ec20e5d333950ce5240694ff97"
        },
        "date": 1714766940814,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 434,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9659,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 326,
            "range": "±2.79%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 862,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1357,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 978,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4813,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 293,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6555,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6596,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6394,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1438,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6183,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5175200,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 285,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2636,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2036,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5385,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5979,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5358,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 422,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 178,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 187,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 863,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "8a8634c7a263cf99e9ce426b2c9b92fd2a12a259",
          "message": "enhance: Update SnapshotInterface to include improvements in getError type",
          "timestamp": "2024-05-04T13:52:43-04:00",
          "tree_id": "e4a9e395c9ac6385b280f3de54bde194b3fedef7",
          "url": "https://github.com/reactive/data-client/commit/8a8634c7a263cf99e9ce426b2c9b92fd2a12a259"
        },
        "date": 1714852422109,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 429,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9411,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 321,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 901,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1377,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 964,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5075,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 296,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6296,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6428,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6251,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1514,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5886,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6146410,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 280,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2626,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2044,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5441,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6144,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5335,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 429,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 183,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 191,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 863,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cd0408376440b47e5ed89b800440c3b97abab150",
          "message": "internal: Publish new version (#3050)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-05-06T20:13:40Z",
          "tree_id": "9bfa8c80fa63f771ed08cfc4db3d6d3aca40cadd",
          "url": "https://github.com/reactive/data-client/commit/cd0408376440b47e5ed89b800440c3b97abab150"
        },
        "date": 1715026940698,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 438,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9651,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 329,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 860,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1374,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 989,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5046,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 295,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7099,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6631,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6461,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1535,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6121,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6091773,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 290,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2723,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1989,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5391,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6566,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Collection",
            "value": 5539,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 430,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 191,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 856,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "c3481ad578c77a6dc73f45f1afcec353ba032534",
          "message": "fix: DevToolsManager() config parameter",
          "timestamp": "2024-05-08T16:25:27-05:00",
          "tree_id": "631e30ac85eb390bd116f0faa0178f94bb745dc5",
          "url": "https://github.com/reactive/data-client/commit/c3481ad578c77a6dc73f45f1afcec353ba032534"
        },
        "date": 1715203714570,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 439,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9448,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 326,
            "range": "±2.87%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 887,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1378,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 973,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5001,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6252,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6612,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6284,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1518,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6237,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5371771,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 303,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2697,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2000,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5462,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6197,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 4819,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 443,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 188,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 866,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "e4d5f019f7c3817fb740094244e8ce17ccd5452d",
          "message": "enhance: DevToolsManager uses maxAge to set buffer size",
          "timestamp": "2024-05-08T16:51:04-05:00",
          "tree_id": "179a49ec0e395c20fc474b310d8cf06f93155088",
          "url": "https://github.com/reactive/data-client/commit/e4d5f019f7c3817fb740094244e8ce17ccd5452d"
        },
        "date": 1715205250917,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 426,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9243,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 324,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 877,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1352,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 975,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4941,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7032,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6336,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6181,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1521,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5713,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6070800,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 296,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2664,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1999,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5455,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6964,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 6229,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 431,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 181,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 192,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 869,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2b0f7ae5e6dce9288839682fffc62d651819d301",
          "message": "internal: Publish new version (#3057)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-05-08T22:04:16Z",
          "tree_id": "93fd7c7c7da2d70d6ffb6115e31d92f19ff9af81",
          "url": "https://github.com/reactive/data-client/commit/2b0f7ae5e6dce9288839682fffc62d651819d301"
        },
        "date": 1715206379015,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 444,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9657,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 341,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 871,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1368,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 984,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5122,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 299,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6914,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6453,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6376,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1528,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5587,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6205848,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2655,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2021,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5292,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6368,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 4908,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 447,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 185,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 197,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 867,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "19832bc1ee15805788697748b275c134ea81ebf6",
          "message": "enhance: Add docstrings to Collection methods",
          "timestamp": "2024-05-12T21:53:19-05:00",
          "tree_id": "5144f432ec85c407b8873d60f52149699b6043c0",
          "url": "https://github.com/reactive/data-client/commit/19832bc1ee15805788697748b275c134ea81ebf6"
        },
        "date": 1715568983585,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 442,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9425,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 333,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 914,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1375,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 950,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5075,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 303,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6847,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6874,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6765,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1528,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5788,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5856347,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2692,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2017,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6771,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7082,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 6059,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 450,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 187,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 868,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1ea5c3b121ff5399de5f20372c6caa2efffa3fe4",
          "message": "internal: Publish new version (#3060)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-05-13T03:10:49Z",
          "tree_id": "8b03f1d904d0fa002eb039d1bf6454d843519d33",
          "url": "https://github.com/reactive/data-client/commit/1ea5c3b121ff5399de5f20372c6caa2efffa3fe4"
        },
        "date": 1715570458645,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 448,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9775,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 325,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 909,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1395,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 986,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4845,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 306,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6331,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6732,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6389,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1552,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5541,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5924273,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 305,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2664,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2012,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6820,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6093,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "get Collection",
            "value": 5131,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 449,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 190,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 199,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 869,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a87cc6591e94365ec9a6b752a8d274922b0cce5e",
          "message": "pkg: Update all non-major dependencies (#3061)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-05-13T14:19:35Z",
          "tree_id": "d72c6b748cd4109440c1707b4c527e40306808d9",
          "url": "https://github.com/reactive/data-client/commit/a87cc6591e94365ec9a6b752a8d274922b0cce5e"
        },
        "date": 1715610561098,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 428,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9585,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 339,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 873,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1349,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 979,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4722,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6171,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6703,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6366,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1471,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6217,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5864975,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 288,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2678,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1984,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5326,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7087,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 6329,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 439,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 184,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 860,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "4bc914574116d285f81546ffe37ead3e8aa339dc",
          "message": "enhance: Add docstrings to schema constructors",
          "timestamp": "2024-05-14T11:07:38-05:00",
          "tree_id": "befa684e061b3aa4cdaa995d39814e2f2f68d995",
          "url": "https://github.com/reactive/data-client/commit/4bc914574116d285f81546ffe37ead3e8aa339dc"
        },
        "date": 1715703046315,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 435,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9500,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 331,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 890,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1356,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 979,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5094,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 293,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6217,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6757,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6620,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1483,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 6315,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5367929,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 278,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2669,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2018,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5570,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6532,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5837,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 432,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 187,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 857,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2080c8751df147a839f03eade9804d57291d12fb",
          "message": "enhance: Union types construct class instances in ctrl.fetch() resolution value (#3063)",
          "timestamp": "2024-05-16T16:21:46-05:00",
          "tree_id": "71967696511ff9a08ada6826dbba6db6600706f9",
          "url": "https://github.com/reactive/data-client/commit/2080c8751df147a839f03eade9804d57291d12fb"
        },
        "date": 1715894687227,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 436,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9596,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 333,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 892,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1359,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 945,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4949,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 293,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7339,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6581,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6416,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1562,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5672,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5904779,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 293,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2627,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2010,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5352,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6255,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 4932,
            "range": "±1.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 445,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 186,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 192,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 854,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b21f388878a2d4e340a0906269ee7c1cbf3aca0d",
          "message": "internal: Publish new version (#3062)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-05-16T21:46:53Z",
          "tree_id": "c78e4387c4fffd325a1f0b4b9736b06c47c69a31",
          "url": "https://github.com/reactive/data-client/commit/b21f388878a2d4e340a0906269ee7c1cbf3aca0d"
        },
        "date": 1715896549304,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 443,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9883,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 342,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 872,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1255,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 922,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4894,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6232,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6723,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6387,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1510,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5797,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5571124,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2708,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1993,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6562,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5963,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5134,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 444,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 188,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 196,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 853,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bffd55b245201d007d4bf99cf228d3b86c7bb906",
          "message": "pkg: Update build packages (#3066)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-05-25T11:43:14Z",
          "tree_id": "0fc724a5a9c73f35c8dab26f129f18126c2db85f",
          "url": "https://github.com/reactive/data-client/commit/bffd55b245201d007d4bf99cf228d3b86c7bb906"
        },
        "date": 1716637906315,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 450,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9720,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 346,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 901,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1341,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 976,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5010,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 304,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7061,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6630,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6407,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1549,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5897,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5966846,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2712,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2040,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6647,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6369,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5636,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 443,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 185,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 193,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 850,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1673358d1e6e5c218129e0346766386ec7c768b5",
          "message": "pkg: Update all non-major dependencies (#3068)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-05-25T12:29:46Z",
          "tree_id": "06242fe3ff360ba83b8ce9c884a5af3e6f46585c",
          "url": "https://github.com/reactive/data-client/commit/1673358d1e6e5c218129e0346766386ec7c768b5"
        },
        "date": 1716640721054,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 443,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9900,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 345,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 896,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1365,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 995,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4912,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 304,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5832,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6461,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6381,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1518,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5979,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6044661,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2633,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2001,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5464,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6732,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5726,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 446,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 189,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 199,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 873,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7b5abf607b0f430511c4087d7fb19f447980eeed",
          "message": "pkg: Update build packages (#3083)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-06-11T23:04:33Z",
          "tree_id": "56716812fc8809c4b50b21c0ad04abf5438c8c81",
          "url": "https://github.com/reactive/data-client/commit/7b5abf607b0f430511c4087d7fb19f447980eeed"
        },
        "date": 1718147625279,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 457,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9807,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 344,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 890,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1360,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 995,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4964,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 303,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6028,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6735,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6491,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1529,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5988,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5660306,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 301,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2714,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2013,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5447,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6908,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5837,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 458,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 191,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 202,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 876,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aab27d956a9b47c2fd5f79869c1e68373c3e5745",
          "message": "feat: CacheProvider -> DataProvider (#3095)",
          "timestamp": "2024-06-13T10:10:06-05:00",
          "tree_id": "e5d62824a048fb583b92e3b044022b1c92303e9f",
          "url": "https://github.com/reactive/data-client/commit/aab27d956a9b47c2fd5f79869c1e68373c3e5745"
        },
        "date": 1718291599942,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 436,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9422,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 320,
            "range": "±2.72%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 898,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1358,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 986,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4938,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 298,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6659,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6442,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6155,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1498,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6377,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6003637,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 295,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2692,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1995,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5545,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6655,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5544,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 439,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 182,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 843,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf770de244ad890b286c59ac305ceb6c3b1288ea",
          "message": "feat: Add controller.set() (#3105)",
          "timestamp": "2024-06-17T06:25:15-07:00",
          "tree_id": "3ba73cfa21128e1b8c76f01c6346d463f37155d4",
          "url": "https://github.com/reactive/data-client/commit/cf770de244ad890b286c59ac305ceb6c3b1288ea"
        },
        "date": 1718630907231,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 431,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9579,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 329,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 871,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1342,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 969,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4848,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6815,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6944,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6831,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1496,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6245,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5984274,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 289,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2687,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1977,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6537,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6803,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5566,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 423,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 164,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 181,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 848,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "94c496464eb74f7d593b466aa33f17adf342701d",
          "message": "internal: Publish new version (#3106)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-06-17T18:54:41Z",
          "tree_id": "918b040c0f0c9922ed8f85ca6acc73313b73cfb0",
          "url": "https://github.com/reactive/data-client/commit/94c496464eb74f7d593b466aa33f17adf342701d"
        },
        "date": 1718651117826,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 440,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9550,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 335,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 883,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1356,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 966,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4843,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 295,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6472,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6439,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6196,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1500,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6019,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5974215,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 291,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2699,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2026,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5455,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6624,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5483,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 437,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 182,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 191,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 861,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f819b22ab61b0d14860a601eef7f6107c9a7d64",
          "message": "internal: Publish new version (#3109)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-06-19T10:25:04Z",
          "tree_id": "2e91082fb52923d74c088faf127f32b407ce9afe",
          "url": "https://github.com/reactive/data-client/commit/5f819b22ab61b0d14860a601eef7f6107c9a7d64"
        },
        "date": 1718793301962,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 441,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9608,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 337,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 891,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1349,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 952,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4903,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7177,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6410,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6100,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1509,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6187,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5962360,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 286,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2631,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2028,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5276,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6425,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5460,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 441,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 185,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 190,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 822,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "91 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "29c879b742047deb3e8d3f4bb909f7d38a77a8af",
          "message": "internal: Publish new version (#3119)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-06-21T14:13:53Z",
          "tree_id": "4ead4e3eb47275f765326c95a2704e61e9cffecf",
          "url": "https://github.com/reactive/data-client/commit/29c879b742047deb3e8d3f4bb909f7d38a77a8af"
        },
        "date": 1718979880069,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 447,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9561,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 346,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 895,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1382,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 965,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5049,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 302,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6199,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6591,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6417,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1534,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6011,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6095253,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 296,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2672,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2046,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6536,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6210,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5398,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 444,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 190,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 201,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 864,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c18fbf7fdc7c421d15dc26cc5add3b5840ddca6d",
          "message": "enhance(native): Reduce chance of frame drops with InteractionManager (#3127)",
          "timestamp": "2024-06-22T06:02:15-05:00",
          "tree_id": "33bf58ebd8619019959276a32c04ef48fde00ca2",
          "url": "https://github.com/reactive/data-client/commit/c18fbf7fdc7c421d15dc26cc5add3b5840ddca6d"
        },
        "date": 1719054318564,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 417,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9209,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 299,
            "range": "±3.64%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 847,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1334,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 954,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4700,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 276,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6938,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6490,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6419,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1437,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6205,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5800428,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 278,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2614,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1952,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 4939,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6016,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 4774,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 403,
            "range": "±2.36%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 167,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 173,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 831,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2503402c28a51b2a686bf61132b74d673950e63e",
          "message": "feat: Allow ctrl.set() value to be a function (#3129)",
          "timestamp": "2024-06-22T07:19:36-05:00",
          "tree_id": "65d30f3b4dd901fc1eac2c8b6c089533da85c87e",
          "url": "https://github.com/reactive/data-client/commit/2503402c28a51b2a686bf61132b74d673950e63e"
        },
        "date": 1719058957339,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 433,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9232,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 331,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 904,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1361,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 954,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4909,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 293,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6421,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6544,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6498,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1518,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6123,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6047292,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2710,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2037,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5502,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6573,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5377,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 437,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 185,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 194,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 866,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "35b4e7f49bfdc85519f14b3ccbd2c01cec221af2",
          "message": "internal: Publish new version (#3128)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-06-22T12:26:37Z",
          "tree_id": "0b81fa4b59fca27dba8b52c5bd45cb9eadd87cdb",
          "url": "https://github.com/reactive/data-client/commit/35b4e7f49bfdc85519f14b3ccbd2c01cec221af2"
        },
        "date": 1719059781340,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 420,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9516,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 323,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 838,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1346,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 939,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4916,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 281,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6775,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6837,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6791,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1446,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5878,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5852784,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 280,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2617,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1995,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5582,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6587,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5385,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 414,
            "range": "±2.50%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 174,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 181,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 834,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "91 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7bd322d585b0893561b3ffb3c5ad47b2764c18bd",
          "message": "enhance: Entity runs validate after marking circular reference point (#3133)",
          "timestamp": "2024-06-23T06:54:31-05:00",
          "tree_id": "c0c9a9836f0737977f09f661f97ae5d9400ff9ea",
          "url": "https://github.com/reactive/data-client/commit/7bd322d585b0893561b3ffb3c5ad47b2764c18bd"
        },
        "date": 1719143851574,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 450,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9576,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 328,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 888,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1351,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 986,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4966,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 302,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7339,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6888,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6540,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1571,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6046,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6178925,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2683,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2027,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6579,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6281,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5455,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 454,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 188,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 195,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 831,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ad1811149cdc419f6462ace08efdb7766195b36",
          "message": "enhance: normalize/denormalize interface updates (#3134)\n\n* enhance: Change Schema.normalize interface\r\n* enhance: Update denormalize() args order\r\n* enhance: Reorder normalize arguments\r\n* enhance: Make argsKey optional in memo.query and memo.buildQueryKey\r\n* enhance: Extract EntitySchema type helpers into own file\r\n* enhance: Destructure store in normalize()",
          "timestamp": "2024-07-08T05:40:37-05:00",
          "tree_id": "0fe11f724627940f51f52becd389fe3303cdb52f",
          "url": "https://github.com/reactive/data-client/commit/2ad1811149cdc419f6462ace08efdb7766195b36"
        },
        "date": 1720435431329,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 506,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9677,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 327,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 896,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1367,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 969,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4885,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 289,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6241,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6614,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6317,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1514,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 5788,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5167211,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 290,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2712,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2028,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5586,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6418,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5790,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 513,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 213,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 886,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ee509fb9c7681f060521f358f76b55ca0cb600ec",
          "message": "enhance: Remove throttle from fetch action (#3138)",
          "timestamp": "2024-07-08T09:16:11-05:00",
          "tree_id": "5449e483e1603bfdd63bcd3de0759584b247bdf6",
          "url": "https://github.com/reactive/data-client/commit/ee509fb9c7681f060521f358f76b55ca0cb600ec"
        },
        "date": 1720448354946,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 510,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9523,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 325,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 897,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1362,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 987,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4941,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 290,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6221,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6794,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6721,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1527,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6117,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5554386,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 286,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2678,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2079,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6787,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6350,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5668,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 512,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 199,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 210,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 892,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9df0f7c670c919d956312d2535c298d2553f5840",
          "message": "enhance: Get rid of fetch action.meta.nm (#3139)",
          "timestamp": "2024-07-08T09:25:36-05:00",
          "tree_id": "2c674b3a97081477ed8340a2b50be3b5096c1a7e",
          "url": "https://github.com/reactive/data-client/commit/9df0f7c670c919d956312d2535c298d2553f5840"
        },
        "date": 1720448915442,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 518,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9610,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 327,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 908,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1369,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 967,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4997,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 293,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6724,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6567,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6471,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1502,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6624,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5116871,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 293,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2590,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2099,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5511,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6369,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5496,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 506,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 899,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "96f7eb0c97db75bd0ec663d0fb0db8cf3ee808d5",
          "message": "enhance: fetchAction.meta.createdAt -> fetchAction.meta.fetchedAt",
          "timestamp": "2024-07-08T16:39:01+02:00",
          "tree_id": "86f1147b43b5e9241bc4ebc83014d5a177e6c5ac",
          "url": "https://github.com/reactive/data-client/commit/96f7eb0c97db75bd0ec663d0fb0db8cf3ee808d5"
        },
        "date": 1720449729403,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 518,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9517,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 323,
            "range": "±3.37%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 886,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1363,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 963,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4775,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 303,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7118,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6753,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6451,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1524,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5899,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5452100,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 289,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2680,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1991,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5508,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5955,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5130,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 509,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 200,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 209,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 877,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3ffa454def38b35a23520444f80b307732a8a89b",
          "message": "enhance: Simplify fetchReducer code",
          "timestamp": "2024-07-08T16:50:50+02:00",
          "tree_id": "d0a3c5959d422bb74f974ffe64ae3f0fcb9bfef6",
          "url": "https://github.com/reactive/data-client/commit/3ffa454def38b35a23520444f80b307732a8a89b"
        },
        "date": 1720450442668,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 491,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9392,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 317,
            "range": "±2.54%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 874,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1351,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 967,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4777,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 291,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7396,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6546,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6292,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1526,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6257,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5229459,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 285,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2676,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2079,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5352,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6885,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5954,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 484,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 195,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 892,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d2255959489b71cfdfcaf4be72fd272231d392f1",
          "message": "enhance: setResponseAction.payload -> setResponseAction.response; remove fetchAction.payload (#3141)",
          "timestamp": "2024-07-09T06:27:09-05:00",
          "tree_id": "937a70ec34da3e0610838f616899a24e447d2e6b",
          "url": "https://github.com/reactive/data-client/commit/d2255959489b71cfdfcaf4be72fd272231d392f1"
        },
        "date": 1720524609356,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 508,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9576,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 328,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 878,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1368,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 976,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4846,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 303,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6434,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6788,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6691,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1473,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6013,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5589476,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 293,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2736,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2024,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6641,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6249,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5379,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 511,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 207,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 894,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f4cf8a4df3dfe852d98058abd06178f751ae8716",
          "message": "enhance: Simplify action shapes (#3143)",
          "timestamp": "2024-07-12T08:19:45-05:00",
          "tree_id": "5868340f1ca3b8d07af092614cd11edf58eafee8",
          "url": "https://github.com/reactive/data-client/commit/f4cf8a4df3dfe852d98058abd06178f751ae8716"
        },
        "date": 1720790569688,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 513,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9310,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 327,
            "range": "±3.03%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 888,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1378,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 969,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4705,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 292,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5957,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6494,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6283,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1477,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6271,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5070918,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 281,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2573,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2038,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5397,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6021,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Collection",
            "value": 5405,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 514,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 200,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 210,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 881,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "b831a3c25fd9ac213e635e9f87888bc8b297e1a2",
          "message": "internal: Split normalize into multiple files",
          "timestamp": "2024-07-12T15:30:32+02:00",
          "tree_id": "e0696fc103d521da0fbe0a7a15c8d0b4e2f5249d",
          "url": "https://github.com/reactive/data-client/commit/b831a3c25fd9ac213e635e9f87888bc8b297e1a2"
        },
        "date": 1720791229330,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 520,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9510,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 331,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 906,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1347,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 926,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4859,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6952,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6739,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6584,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1537,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6314,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5425311,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2709,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2062,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5575,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5721,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Collection",
            "value": 4722,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 495,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 200,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 886,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "7d87f57648fb48212fb07761c848fe0d772e8d89",
          "message": "internal: Split normalize into multiple files",
          "timestamp": "2024-07-12T15:32:27+02:00",
          "tree_id": "a8b126cb12a49d27b76d8daceae0f1670d0538d7",
          "url": "https://github.com/reactive/data-client/commit/7d87f57648fb48212fb07761c848fe0d772e8d89"
        },
        "date": 1720791335198,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 528,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9539,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 343,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 882,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1373,
            "range": "±0.05%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 983,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4962,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 295,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6748,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6577,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6542,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1546,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5649,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5301600,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 299,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2672,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2042,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6915,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6640,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5543,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 525,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 205,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 216,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 913,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "28b698a6c23e565e486e99f80f3e16daa000f8c1",
          "message": "pkg: Update build packages (#3144)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-13T13:22:54Z",
          "tree_id": "4ce64abbafe24d9066e6d10f824292ed13e72002",
          "url": "https://github.com/reactive/data-client/commit/28b698a6c23e565e486e99f80f3e16daa000f8c1"
        },
        "date": 1720877536152,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 508,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9615,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 342,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 894,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1387,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 979,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4824,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 296,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6632,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6617,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6628,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1501,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6067,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5354762,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2669,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2029,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5505,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5940,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5259,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 507,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 215,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 907,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "226823ae1629b1435e698647b1b2bb77b730086f",
          "message": "pkg: Update validation packages (#3145)\n\n* pkg: Update validation packages\n\n* internal: Update formatting based on prettier changes\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2024-07-13T13:49:02Z",
          "tree_id": "1108a230211c7af00ee46e2048cb1d7511f9c172",
          "url": "https://github.com/reactive/data-client/commit/226823ae1629b1435e698647b1b2bb77b730086f"
        },
        "date": 1720879097461,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 536,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9749,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 347,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 886,
            "range": "±2.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1366,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 987,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4936,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 303,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6808,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6811,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6593,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1569,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5799,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5695869,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2667,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2077,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5586,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6679,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 6052,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 530,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 209,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 218,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 913,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5935ff7201105ff508ebd7bd38074c3e77f88ee7",
          "message": "internal: Publish new version (#3132)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-13T18:50:09Z",
          "tree_id": "eabc6ef6bd6b2ef56f1324cd5f49f5f6fa53d65c",
          "url": "https://github.com/reactive/data-client/commit/5935ff7201105ff508ebd7bd38074c3e77f88ee7"
        },
        "date": 1720897164832,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 527,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9920,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 363,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 911,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1434,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 1008,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5058,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 312,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7167,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7025,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6889,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1584,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6433,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5602422,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 312,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2698,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2104,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5647,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6294,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5620,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 527,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 208,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 218,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 931,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "428d618ce057d4eef23592a64ec9d1c6fb82f43f",
          "message": "fix: Collections work with polymorphic schemas and class name mangling (#3151)",
          "timestamp": "2024-07-15T12:22:19+01:00",
          "tree_id": "445414c6c7e538dff4f25cc014a55ee3e312f818",
          "url": "https://github.com/reactive/data-client/commit/428d618ce057d4eef23592a64ec9d1c6fb82f43f"
        },
        "date": 1721042722814,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 507,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9217,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 331,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 866,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1389,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 975,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5019,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 290,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6673,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6548,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6376,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1515,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5950,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5542403,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 293,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2705,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2062,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5626,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6205,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5145,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 508,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 905,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8ce3570096bb1687cd15671a72432773c478fa85",
          "message": "pkg: Update build packages (#3152)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-15T12:30:49Z",
          "tree_id": "9f9566fe762660e8ee618937c470dcadaa26e958",
          "url": "https://github.com/reactive/data-client/commit/8ce3570096bb1687cd15671a72432773c478fa85"
        },
        "date": 1721047205744,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 479,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9685,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 309,
            "range": "±2.68%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 863,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1366,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 967,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4787,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7699,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6625,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6156,
            "range": "±11.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1527,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse",
            "value": 5937,
            "range": "±6.66%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5312458,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 282,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2721,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2062,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5633,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6474,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5745,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 463,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 189,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 203,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 889,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a7e20299e0c365c1f3b35053ab931b82db3c7d8c",
          "message": "internal: Publish new version (#3150)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-16T07:24:22Z",
          "tree_id": "62d1261d375f74acd15c092081f313a4ea35d791",
          "url": "https://github.com/reactive/data-client/commit/a7e20299e0c365c1f3b35053ab931b82db3c7d8c"
        },
        "date": 1721115317078,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 521,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9651,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 347,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 899,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1373,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 974,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4953,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7212,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6328,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6335,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1537,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5788,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5503783,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 296,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2658,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2039,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6720,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6419,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5797,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 523,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 215,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 905,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "06df291a1f1d91afa331310dfb8319bc8d1a3ba8",
          "message": "enhance: Reorder action members for easier readability",
          "timestamp": "2024-07-18T12:35:02+02:00",
          "tree_id": "8d6c02a1129451c685edffbb61fc43ccae2e252a",
          "url": "https://github.com/reactive/data-client/commit/06df291a1f1d91afa331310dfb8319bc8d1a3ba8"
        },
        "date": 1721299090584,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 512,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9300,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 335,
            "range": "±2.83%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 902,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1357,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 963,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4982,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 300,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6705,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6469,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6386,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1496,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6189,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5748077,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 296,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2654,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1860,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5438,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6405,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5402,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 514,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 211,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 886,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "597a1b228c81940bdbaf15900ab1e624be3f520e",
          "message": "enhance: Correctly log throttlable fetch actions in devtool",
          "timestamp": "2024-07-18T12:40:53+02:00",
          "tree_id": "4c03de440a9fc603a97daac5da9f259a9bd1fb37",
          "url": "https://github.com/reactive/data-client/commit/597a1b228c81940bdbaf15900ab1e624be3f520e"
        },
        "date": 1721299445109,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 514,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9562,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 333,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 877,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1344,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 974,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4973,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6323,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6622,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6476,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1473,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5934,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4989808,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2617,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1949,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5479,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6032,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 4860,
            "range": "±1.65%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 508,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 196,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 207,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 888,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "d45faac33e25f40df9d896629e4c095cbb879d06",
          "message": "enhance: Move args above endpoint in action",
          "timestamp": "2024-07-18T13:20:35+02:00",
          "tree_id": "25ed2f89c3f2522a948f703593617f8d73a9400e",
          "url": "https://github.com/reactive/data-client/commit/d45faac33e25f40df9d896629e4c095cbb879d06"
        },
        "date": 1721301828144,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 513,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9333,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 328,
            "range": "±2.66%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 864,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1370,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 979,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4973,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6212,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6797,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6689,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1525,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5923,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5461354,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 287,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2635,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2042,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6846,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6149,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5530,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 510,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 905,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "d8666bf9e059a24b35c8f22b7525ce55c23c84f3",
          "message": "enhance: Minor optimizations to store creation",
          "timestamp": "2024-07-18T13:21:44+02:00",
          "tree_id": "0af23ad6dde60b9fddda11494ec9ecc04c84d510",
          "url": "https://github.com/reactive/data-client/commit/d8666bf9e059a24b35c8f22b7525ce55c23c84f3"
        },
        "date": 1721301896597,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 515,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9650,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 336,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 887,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1348,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 971,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4843,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 285,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6563,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6502,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6185,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1454,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5874,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5411374,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 279,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2588,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2008,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5473,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6183,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Collection",
            "value": 5633,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 189,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 199,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 880,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "d84b43cf728d714da7182f2c19b39f49e0ec0366",
          "message": "enhance: Move NetworkManager not found detection to applyManager()",
          "timestamp": "2024-07-18T13:55:43+02:00",
          "tree_id": "638707092eb8bd5692d9849f7d240ae6414b5965",
          "url": "https://github.com/reactive/data-client/commit/d84b43cf728d714da7182f2c19b39f49e0ec0366"
        },
        "date": 1721303954426,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 508,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9595,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 325,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 910,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1350,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 964,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4998,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 303,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7039,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6568,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6555,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1527,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5703,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5028672,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 300,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2655,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2045,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6932,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6513,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5639,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 514,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 902,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "5a90fe4fffc3e021b64fef6fb3e5437fa398564a",
          "message": "internal: Publish new version (#3155)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-18T17:33:10+02:00",
          "tree_id": "43f1a7734e1e9bd7888b5324660a0e951a59d026",
          "url": "https://github.com/reactive/data-client/commit/5a90fe4fffc3e021b64fef6fb3e5437fa398564a"
        },
        "date": 1721316991785,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 510,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9688,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 352,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 884,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1388,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 972,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4947,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 302,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7087,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6512,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6223,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1534,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5751,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5444614,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 299,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2624,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2034,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6933,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6308,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5468,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 496,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 211,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 899,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3058a8a7738eeea0a197c9ba2db2e8ee51e2fca3",
          "message": "enhance: Collection non-known (not Array/Values) key format improvement",
          "timestamp": "2024-07-20T12:57:07+02:00",
          "tree_id": "54af3379d6533ecafe09b9a691eec3039f7f2e8f",
          "url": "https://github.com/reactive/data-client/commit/3058a8a7738eeea0a197c9ba2db2e8ee51e2fca3"
        },
        "date": 1721473220614,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 523,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9406,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 335,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 904,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1352,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 983,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4871,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 300,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7697,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6643,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6459,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1576,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6549,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5424502,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 295,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2639,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2080,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6686,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6841,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Collection",
            "value": 5780,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 513,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 207,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 215,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 898,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3b2f528616587ff4cb5a16cb5d617fb493a41e83",
          "message": "enhance: Remove name in toJSON() for Entities",
          "timestamp": "2024-07-21T13:38:23+02:00",
          "tree_id": "c9b61f2d56393f605e718574a92f57196be0945f",
          "url": "https://github.com/reactive/data-client/commit/3b2f528616587ff4cb5a16cb5d617fb493a41e83"
        },
        "date": 1721562096696,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 527,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9433,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 347,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 891,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1405,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 980,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4952,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 305,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7830,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6805,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6564,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1608,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6403,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5396293,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2691,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2066,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5570,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5959,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 4917,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 519,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 207,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 217,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 903,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "8ff2bf90ba3f38445420d1b6fbf9d85f58bcf91a",
          "message": "docs: Handle network error for nested user in post fixture",
          "timestamp": "2024-07-21T13:57:47+02:00",
          "tree_id": "9248c601f7ec50f0272f721fa2f5a6370ab23a14",
          "url": "https://github.com/reactive/data-client/commit/8ff2bf90ba3f38445420d1b6fbf9d85f58bcf91a"
        },
        "date": 1721563257402,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 518,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9457,
            "range": "±2.66%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 338,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 914,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1356,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 986,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5011,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 299,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6083,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6751,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6513,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1448,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6094,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5438888,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 298,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2630,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2045,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6771,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6241,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5376,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 517,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 207,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 217,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 902,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f73e7f77a3532d701f532f68fd2a99f7192c324",
          "message": "internal: Publish new version (#3157)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-21T16:45:33Z",
          "tree_id": "159a1243e728aba41020eee3ebe08f14be28e7ee",
          "url": "https://github.com/reactive/data-client/commit/5f73e7f77a3532d701f532f68fd2a99f7192c324"
        },
        "date": 1721580974327,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 508,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9693,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 342,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 879,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1362,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 968,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4927,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6360,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6629,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6619,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1488,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6229,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5527211,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 293,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2675,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2073,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6550,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6103,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5395,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 507,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 903,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "cbf6a25588ed1666745bbfa31453a3b011eb623b",
          "message": "enhance: Move state.endpoints above state.indexes",
          "timestamp": "2024-07-22T11:21:08+02:00",
          "tree_id": "1c6c026e66f91a75fc25042bdd8519242d63dd62",
          "url": "https://github.com/reactive/data-client/commit/cbf6a25588ed1666745bbfa31453a3b011eb623b"
        },
        "date": 1721640262780,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 517,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9542,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 335,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 879,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1375,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 966,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5016,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 298,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5982,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6602,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6440,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1509,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6199,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5376041,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 295,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2635,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2065,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5471,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5787,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 4746,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 510,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 895,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "09ad848879db55bb441d93336dd7442d3f484d49",
          "message": "enhance: Move state.endpoints above state.indexes",
          "timestamp": "2024-07-22T11:33:18+02:00",
          "tree_id": "60306c6e5c54875f868dad878df0182c8c1f70b9",
          "url": "https://github.com/reactive/data-client/commit/09ad848879db55bb441d93336dd7442d3f484d49"
        },
        "date": 1721640987034,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 523,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9388,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 340,
            "range": "±1.68%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 878,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1391,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 981,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5052,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 299,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6765,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6694,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6345,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1535,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6743,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5159382,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 300,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2635,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2063,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7046,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6391,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5589,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 523,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 211,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 855,
            "range": "±2.67%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "0c826c203f68e30b1a00c6fa44ad6b75aad84472",
          "message": "docs: guides/debugging -> getting-started/debugging",
          "timestamp": "2024-07-22T11:48:40+02:00",
          "tree_id": "22460768e084c0aa42e8c3e72c8c4398d3bef216",
          "url": "https://github.com/reactive/data-client/commit/0c826c203f68e30b1a00c6fa44ad6b75aad84472"
        },
        "date": 1721641911978,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 522,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9598,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 323,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 858,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1338,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 981,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4829,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6918,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6395,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6273,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1532,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5700,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5222833,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 300,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2643,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2058,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5545,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6081,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5672,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 526,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 199,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 211,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 905,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "0adad9209265c388eb6d334afe681610bccfb877",
          "message": "docs: guides/debugging -> getting-started/debugging",
          "timestamp": "2024-07-22T12:05:48+02:00",
          "tree_id": "82461848d423016f7931e437b449527aee78e372",
          "url": "https://github.com/reactive/data-client/commit/0adad9209265c388eb6d334afe681610bccfb877"
        },
        "date": 1721642936459,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 515,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9400,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 326,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 885,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1362,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 964,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4817,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 291,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6494,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6638,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6476,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1474,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5766,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5450496,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 287,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2662,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2037,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5482,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5731,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 5045,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 504,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 196,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 205,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 901,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "e4751d9cd0ee26567d7632ea4707ca181901ff89",
          "message": "enhance: NetworkManager constructor uses keyword args",
          "timestamp": "2024-07-22T13:15:04+02:00",
          "tree_id": "0954e2ffbe9b6e840b9773a78ff325e241307300",
          "url": "https://github.com/reactive/data-client/commit/e4751d9cd0ee26567d7632ea4707ca181901ff89"
        },
        "date": 1721647093829,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 469,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9422,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 315,
            "range": "±2.46%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 897,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1363,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 986,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5030,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 300,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6917,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6686,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6448,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1515,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5988,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5240260,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 289,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2644,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2084,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6797,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5911,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 4915,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 485,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 194,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 896,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b932dca45a4fcf60c00db8da509162f253065769",
          "message": "feat: Add configuration to getDefaultManagers() (#3161)",
          "timestamp": "2024-07-23T04:44:19-05:00",
          "tree_id": "78073306e706d5f5f046664bbe53e237ff8f6ccb",
          "url": "https://github.com/reactive/data-client/commit/b932dca45a4fcf60c00db8da509162f253065769"
        },
        "date": 1721728044758,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 536,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9797,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 332,
            "range": "±2.74%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 911,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1391,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 984,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4879,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 305,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7136,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6735,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6392,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1583,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6263,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5516698,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2632,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2038,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5612,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6223,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5303,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 532,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 208,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 221,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 919,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "785208ced300097d29c304481fbb2d6b62d27e4a",
          "message": "internal: Publish new version (#3160)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-23T09:52:27Z",
          "tree_id": "8a2e3b34ea5c6f194547c31d9dcad3e7b108c323",
          "url": "https://github.com/reactive/data-client/commit/785208ced300097d29c304481fbb2d6b62d27e4a"
        },
        "date": 1721728926453,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 502,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9740,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 338,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 884,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1347,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 965,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4915,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 289,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5956,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6462,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6413,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1479,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5673,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5514157,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 288,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2715,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2044,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5444,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5507,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 4560,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 499,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 200,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 212,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 908,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "82fbb8595d3bec835b3cd4a41f154b7935ccaee2",
          "message": "enhance: Middleware type includes union of possible actions",
          "timestamp": "2024-07-23T17:35:25+02:00",
          "tree_id": "868ea4375dc7d26318f8119d1cbb4f7da93a3a12",
          "url": "https://github.com/reactive/data-client/commit/82fbb8595d3bec835b3cd4a41f154b7935ccaee2"
        },
        "date": 1721749115763,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 524,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9732,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 327,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 910,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1387,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 981,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4823,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 304,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7405,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6766,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6680,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1547,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6752,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5457494,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 293,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2673,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2057,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5357,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5929,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 5052,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 515,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 902,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "262587c0c3e4bc8b779b1ff22ac84d4bddddf5bc",
          "message": "feat: Export EntityInterface, Queryable, SchemaClass",
          "timestamp": "2024-07-24T13:30:47+02:00",
          "tree_id": "baf219c59b2e17a4fea2e99f9593f72e9de20065",
          "url": "https://github.com/reactive/data-client/commit/262587c0c3e4bc8b779b1ff22ac84d4bddddf5bc"
        },
        "date": 1721820835290,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 525,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9353,
            "range": "±2.56%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 335,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 880,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1372,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 957,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4990,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 299,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6119,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6227,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6058,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1517,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5999,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5294998,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2622,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2038,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5561,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6513,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5892,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 520,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 216,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 913,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ffea6fcfe142e966d1b9527bf2505a5695b98300",
          "message": "enhance: Manager.getMiddleware() -> Manager.middleware (#3164)",
          "timestamp": "2024-07-25T07:04:38-05:00",
          "tree_id": "927a09a5b4b3d0f401e0704177d8185f759e3b5d",
          "url": "https://github.com/reactive/data-client/commit/ffea6fcfe142e966d1b9527bf2505a5695b98300"
        },
        "date": 1721909260131,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 505,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9356,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 325,
            "range": "±2.99%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 890,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1381,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 974,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4757,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 299,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6067,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6556,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6517,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1511,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6126,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5465266,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2626,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2037,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5665,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6003,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 4965,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 210,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 915,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5a3287e7beac8d9ecc6a82e583a8d6567d8d2cf6",
          "message": "internal: Publish new version (#3163)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-25T12:50:25Z",
          "tree_id": "61ad5f816b02e9cfe5b2497ce1db7e50faa6e9ca",
          "url": "https://github.com/reactive/data-client/commit/5a3287e7beac8d9ecc6a82e583a8d6567d8d2cf6"
        },
        "date": 1721912499263,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 510,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9634,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 344,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 907,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1383,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 967,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5021,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6645,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6907,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6747,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1543,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6178,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5371625,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 290,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2720,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2061,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6851,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6324,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5267,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 511,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 915,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "dbe7cfa25d179ae9aa8b8a358bb6791bb7e815f7",
          "message": "docs: Fix vote demo highlight lines",
          "timestamp": "2024-07-26T11:11:22+02:00",
          "tree_id": "2cc40d5e8041d548572343cacfd7b0adf88ff698",
          "url": "https://github.com/reactive/data-client/commit/dbe7cfa25d179ae9aa8b8a358bb6791bb7e815f7"
        },
        "date": 1721985272302,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 519,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9508,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 331,
            "range": "±3.22%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 891,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1365,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 979,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5003,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6244,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6736,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6557,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1523,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6071,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5793714,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 296,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2673,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2047,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5461,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6183,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5285,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 492,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 198,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 216,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 921,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3fa9eb907d8760171da065168796b87e802d6666",
          "message": "feat: Queries can take object schemas (#3165)",
          "timestamp": "2024-07-26T06:33:10-05:00",
          "tree_id": "831a03c35422a59327f221a16a3519c2b58b869e",
          "url": "https://github.com/reactive/data-client/commit/3fa9eb907d8760171da065168796b87e802d6666"
        },
        "date": 1721993772267,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 517,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9514,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 332,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 906,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1374,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 977,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4836,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6884,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6644,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6306,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1531,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6129,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5311557,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 293,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2620,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1952,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6729,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6459,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5654,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 513,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 212,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 894,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2aaf110777da857063cfca6fc200452495ad7203",
          "message": "internal: Publish new version (#3166)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-26T11:45:48Z",
          "tree_id": "1732b53efd2ac821869d1eba7443d04dc8f4146f",
          "url": "https://github.com/reactive/data-client/commit/2aaf110777da857063cfca6fc200452495ad7203"
        },
        "date": 1721994924998,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 518,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9676,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 347,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 876,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1351,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 986,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4965,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 298,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7330,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6413,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6409,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1587,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6410,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5400415,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 301,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2682,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2074,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5538,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5959,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Collection",
            "value": 5194,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 506,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 908,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "842820fb4731db8d77a237e552e4f16eb8b6e885",
          "message": "pkg: Update build packages (#3172)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-28T14:42:27Z",
          "tree_id": "52bbb114984596a8f3e1a133c1fe858f2f2d50a8",
          "url": "https://github.com/reactive/data-client/commit/842820fb4731db8d77a237e552e4f16eb8b6e885"
        },
        "date": 1722178334683,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 525,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9659,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 348,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 890,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1369,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 985,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5023,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 300,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7140,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7002,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6774,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1554,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5593,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5091089,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 301,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2632,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2062,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6842,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6553,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Collection",
            "value": 5653,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 524,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 206,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 217,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 914,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2a9e7422f4d62c7e37bc775cb2b17216a79d5817",
          "message": "internal: Publish new version (#3175)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-07-30T11:22:04Z",
          "tree_id": "4763feeb3852902195468cb5f86bd1da650326f4",
          "url": "https://github.com/reactive/data-client/commit/2a9e7422f4d62c7e37bc775cb2b17216a79d5817"
        },
        "date": 1722339133088,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 503,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9699,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 335,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 909,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1381,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 966,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4941,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 295,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6604,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6666,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6346,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1504,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6492,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5261355,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2682,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2074,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5670,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6481,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5782,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 198,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 900,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2058e67fa4e54d88127e6562399463cfd88db06c",
          "message": "pkg: Update build packages (#3182)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-08-05T05:08:01-05:00",
          "tree_id": "1b4a49d81f7046e5e08a5ea774c234a3886f2d97",
          "url": "https://github.com/reactive/data-client/commit/2058e67fa4e54d88127e6562399463cfd88db06c"
        },
        "date": 1722852673877,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 516,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9573,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 344,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 870,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1378,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 976,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5107,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 306,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6478,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6688,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6615,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1489,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6106,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5134112,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 301,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2670,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2063,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6715,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6183,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5332,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLong",
            "value": 511,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 213,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 902,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1e8a95d18cb022df7433caef48c3fd00caac4492",
          "message": "pkg: Update `@anansi/webpack-config` to v20 (#3186)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-08-06T09:20:44Z",
          "tree_id": "4093fdde154dedd2e0138878da304252e9d07338",
          "url": "https://github.com/reactive/data-client/commit/1e8a95d18cb022df7433caef48c3fd00caac4492"
        },
        "date": 1722936616437,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 525,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9498,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 344,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 877,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1389,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 983,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5072,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 302,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6245,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6559,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6195,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1516,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5931,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5519711,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 295,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2623,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2038,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5425,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5985,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 4957,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLong",
            "value": 516,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 197,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 890,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cde71212706a46bbfd13dd76e8cfc478b22fe2ab",
          "message": "enhance: Entity.pk() default provided that uses id (#3188)",
          "timestamp": "2024-08-14T08:45:54-05:00",
          "tree_id": "d8181da880c71b6879745a9a4a4c0bd02d8ab938",
          "url": "https://github.com/reactive/data-client/commit/cde71212706a46bbfd13dd76e8cfc478b22fe2ab"
        },
        "date": 1723643341409,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 505,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9369,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 332,
            "range": "±2.57%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 874,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1349,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 981,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4888,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 298,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6523,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6468,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6296,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1515,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5936,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5128008,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 290,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2688,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2008,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5285,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6125,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5053,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 511,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 911,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e4b71ac04643b706a4a14de2f14d2423e2dd1dfe",
          "message": "internal: Publish new version (#3190)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-08-14T16:20:14Z",
          "tree_id": "c1319eb129f601b31e00cce2291fa43f1d227e52",
          "url": "https://github.com/reactive/data-client/commit/e4b71ac04643b706a4a14de2f14d2423e2dd1dfe"
        },
        "date": 1723653058813,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 507,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9576,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 348,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 868,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1373,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 979,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5035,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7398,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6802,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6648,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1568,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 6165,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5358675,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 296,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2626,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2048,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5456,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6132,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 5283,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 195,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 207,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 907,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "14f0249235b088c8419906933e1169fb6a8af734",
          "message": "docs: Move actions to own page",
          "timestamp": "2024-08-15T22:27:35+02:00",
          "tree_id": "47d7ac3445714911a86cd9758b442b86de5af7a8",
          "url": "https://github.com/reactive/data-client/commit/14f0249235b088c8419906933e1169fb6a8af734"
        },
        "date": 1723753840983,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 524,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9235,
            "range": "±2.66%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 332,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 912,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1392,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 967,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4996,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6259,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6713,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6458,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1491,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6460,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5227779,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2665,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2050,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6968,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6262,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5482,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 513,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 209,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 912,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "23f315ff8c0da2b0520ab9f9cd727ff8c7cf2231",
          "message": "pkg: Update all non-major dependencies (#3197)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-08-24T10:03:42Z",
          "tree_id": "021bf1f734a0041509b1471769a1110bf97b6579",
          "url": "https://github.com/reactive/data-client/commit/23f315ff8c0da2b0520ab9f9cd727ff8c7cf2231"
        },
        "date": 1724494414894,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 525,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9636,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 346,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 874,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1340,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 975,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4870,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 299,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6081,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6662,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6449,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1493,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5906,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5351996,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2643,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2034,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5462,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5820,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5169,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 525,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 205,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 216,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 905,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "89814ee19e81c16117bbee3fbf74d33959d3c849",
          "message": "internal: Publish new version (#3193)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-09-01T14:24:32-05:00",
          "tree_id": "2420edd84617082b8e99e739f6cdf5ea3b5016ad",
          "url": "https://github.com/reactive/data-client/commit/89814ee19e81c16117bbee3fbf74d33959d3c849"
        },
        "date": 1725218861800,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 521,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9542,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 345,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 893,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1373,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 977,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4651,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6226,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6735,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6603,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1517,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6508,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5401785,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2700,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2074,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5395,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6216,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5189,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 518,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 914,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1ce07be35f52dc51f3d3ee8ff1db5f0ebb15d058",
          "message": "pkg: Update `@anansi/eslint-plugin` to v1 (#3202)\n\n* pkg: Update `@anansi/eslint-plugin` to v1\r\n\r\n* internal: Use eslint flat config\r\n\r\n---------\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2024-09-09T09:22:53-05:00",
          "tree_id": "e34d2415288aa347d0bc78b0b64e335349d87168",
          "url": "https://github.com/reactive/data-client/commit/1ce07be35f52dc51f3d3ee8ff1db5f0ebb15d058"
        },
        "date": 1725891963932,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 510,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9608,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 344,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 887,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1386,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 982,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5047,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 304,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6190,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6850,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6727,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1521,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6444,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4946074,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2631,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2093,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5521,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6862,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 6261,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 497,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 199,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 209,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 906,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7c294466edb208ecb4442991d71543deb32d24fc",
          "message": "pkg: Update all non-major dependencies (#3205)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-09-09T15:05:55Z",
          "tree_id": "2f656092f7a9f0bc3c013adb8e159b25dbbc5e93",
          "url": "https://github.com/reactive/data-client/commit/7c294466edb208ecb4442991d71543deb32d24fc"
        },
        "date": 1725894955733,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 508,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9377,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 341,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 874,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1338,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 970,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4810,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6006,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6628,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6560,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1531,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse",
            "value": 6287,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5426303,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 283,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2685,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1976,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5439,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6156,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 5533,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 503,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 200,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 903,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "11d4ccfb4c630c25b847bf59ca1028eed8c2369e",
          "message": "fix: Collection adders (push/unshift) should *not* be Queryable",
          "timestamp": "2024-09-09T15:42:07-04:00",
          "tree_id": "3761a8132f59eef9a0db8c7451cac352caa87f9d",
          "url": "https://github.com/reactive/data-client/commit/11d4ccfb4c630c25b847bf59ca1028eed8c2369e"
        },
        "date": 1725911120859,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 508,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9186,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 318,
            "range": "±3.76%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 883,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1395,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 965,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4855,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 293,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6687,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6142,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6081,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1460,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5881,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5388826,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 283,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2659,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2013,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5316,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5536,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Collection",
            "value": 5179,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 495,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 195,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 901,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4c5156df2c8343267eea0c2e54e5ec4310e193f5",
          "message": "internal: Publish new version (#3201)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-09-11T17:42:32Z",
          "tree_id": "3ffcf5e94ab39a623e06e26a39d29bbcaf1019f5",
          "url": "https://github.com/reactive/data-client/commit/4c5156df2c8343267eea0c2e54e5ec4310e193f5"
        },
        "date": 1726077191019,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 534,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9385,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 346,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 900,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1393,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 980,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4867,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 306,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7104,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6600,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6454,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1531,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6483,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5971654,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 300,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2714,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2063,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5397,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5987,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Collection",
            "value": 4923,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 534,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 213,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 915,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "62437cde42ab3c52becc1c90e02ef88452013753",
          "message": "internal: Publish new version (#3214)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-09-13T15:06:48Z",
          "tree_id": "4dad4ce76331c810c787913a535f700e8e561f93",
          "url": "https://github.com/reactive/data-client/commit/62437cde42ab3c52becc1c90e02ef88452013753"
        },
        "date": 1726240619978,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 498,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9201,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 331,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 901,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1381,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 978,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4968,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 285,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6040,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6635,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6296,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1476,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5906,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5362461,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 284,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2630,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2047,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5405,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6266,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5562,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 491,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 199,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 890,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b72017b871bcf3d8c5fb29b46a4cf73b52897162",
          "message": "pkg: Update all non-major dependencies (#3224)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-09-19T10:08:20Z",
          "tree_id": "2e37a3a2568fa3e85397f069c35e01829ad64b43",
          "url": "https://github.com/reactive/data-client/commit/b72017b871bcf3d8c5fb29b46a4cf73b52897162"
        },
        "date": 1726741092212,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 502,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9269,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 334,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 858,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1336,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 964,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4933,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 288,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6045,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6309,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6155,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1395,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5947,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5477824,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 285,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2656,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2039,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5518,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5306,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "get Collection",
            "value": 4392,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 194,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 204,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 888,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f77a068b9987339312e459caceb80bc732dce750",
          "message": "pkg: Update all non-major dependencies (#3231)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-09-27T08:53:03Z",
          "tree_id": "e2fe4628fc49cdc353a7cbd6dc4e6321cdadc78c",
          "url": "https://github.com/reactive/data-client/commit/f77a068b9987339312e459caceb80bc732dce750"
        },
        "date": 1727427952339,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 493,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9319,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 342,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 901,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1356,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 969,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4849,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 301,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5755,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6531,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6242,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1469,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6101,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5490974,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2655,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2037,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6604,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6017,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5222,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 498,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 196,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 207,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 903,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ecfb41c350e08aaa0006b648ae6225658f846d5c",
          "message": "docs: Add Embed and AutoPlayVideo components to website",
          "timestamp": "2024-09-27T09:28:55-04:00",
          "tree_id": "ec9b639b594cb0e093146c72dc0eb262bdca2a66",
          "url": "https://github.com/reactive/data-client/commit/ecfb41c350e08aaa0006b648ae6225658f846d5c"
        },
        "date": 1727443931134,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 507,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9244,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 324,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 882,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1356,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 948,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4980,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 300,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7002,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6745,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6606,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1488,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6381,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5249638,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2603,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1977,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5446,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6053,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5592,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 508,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 198,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 209,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 896,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "746266d7187ad3a21e91af79d9573ddaaf79160e",
          "message": "docs: Add Embed and AutoPlayVideo components to website",
          "timestamp": "2024-09-27T14:45:50+01:00",
          "tree_id": "413fdaadf83ec8cf72ca1eaddedab2eeaab30407",
          "url": "https://github.com/reactive/data-client/commit/746266d7187ad3a21e91af79d9573ddaaf79160e"
        },
        "date": 1727444945914,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 500,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9167,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 321,
            "range": "±2.64%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 898,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1326,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 925,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4819,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 273,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6082,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6443,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6061,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1444,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 6305,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5480092,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 260,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2559,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1962,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5367,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6462,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5908,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 510,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 195,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 201,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 903,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "1f7b1913e9301230d9fdae23baba9e3c582e005c",
          "message": "docs: Update Entity docstring",
          "timestamp": "2024-09-27T15:00:11+01:00",
          "tree_id": "b37df387fc027494ad157c6207e5427f7b0fa640",
          "url": "https://github.com/reactive/data-client/commit/1f7b1913e9301230d9fdae23baba9e3c582e005c"
        },
        "date": 1727445806701,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 509,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9138,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 323,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 868,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1355,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 980,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4800,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 287,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7241,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6692,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6566,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1536,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5564,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4863569,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 299,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2670,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2017,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5506,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6330,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5078,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 520,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 213,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 902,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6381423f2729c5e556ca695460b27bc1d823653e",
          "message": "pkg: Update all non-major dependencies (#3233)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-09-29T16:16:46Z",
          "tree_id": "7eaee93759b06233ad69e34e0a48281055673fc0",
          "url": "https://github.com/reactive/data-client/commit/6381423f2729c5e556ca695460b27bc1d823653e"
        },
        "date": 1727627221956,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 502,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9285,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 344,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 879,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1341,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 958,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4877,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 296,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6936,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6590,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6474,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1491,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6413,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5246021,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 288,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2674,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1946,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5415,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5952,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 4988,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLong",
            "value": 501,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 198,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 206,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 887,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b314d7f0a683edd71e113256479979af2c271df",
          "message": "pkg: Update all non-major dependencies (#3235)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-10-02T19:37:42Z",
          "tree_id": "30696d418ebd072bf787a39fdc234242d82b4a89",
          "url": "https://github.com/reactive/data-client/commit/3b314d7f0a683edd71e113256479979af2c271df"
        },
        "date": 1727898439686,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 511,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9477,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 336,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 881,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1362,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 978,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4609,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 292,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6349,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6558,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6355,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1502,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5881,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5546829,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 294,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2590,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2019,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5633,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6019,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5266,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 510,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 213,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 906,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9d5c59a415ec2b5dc4c04ad53dd7c58404f48f2e",
          "message": "pkg: Update build packages (#3236)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-10-02T20:07:53Z",
          "tree_id": "ba88b5734311b5d62cee3e934c08629861750879",
          "url": "https://github.com/reactive/data-client/commit/9d5c59a415ec2b5dc4c04ad53dd7c58404f48f2e"
        },
        "date": 1727900298571,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 494,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9309,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 330,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 882,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1335,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 932,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4725,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 295,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6083,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6723,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6601,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1463,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5853,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5437424,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 288,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2615,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2011,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5414,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6126,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Collection",
            "value": 5340,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 490,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 189,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 200,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 880,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f81737ceeeba38b0ec962c8c26e66a4ccd44cfb0",
          "message": "pkg: Update build packages (#3242)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-10-11T08:27:23Z",
          "tree_id": "c7502ba770f4ed49743256be78d7d2358fe04233",
          "url": "https://github.com/reactive/data-client/commit/f81737ceeeba38b0ec962c8c26e66a4ccd44cfb0"
        },
        "date": 1728635818460,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 507,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9577,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 346,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 882,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1374,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 972,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4795,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 300,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6201,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6394,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6292,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1505,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5941,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5273056,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 297,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2692,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2071,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6638,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6231,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5406,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 504,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 212,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 910,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43a955c18684b4e0f5c1d79b2504e8ad2910816b",
          "message": "enhance: schema.Entity -> EntityMixin (#3243)",
          "timestamp": "2024-10-13T02:35:31-07:00",
          "tree_id": "e45966a52b9f128b4c7893d98fd883ef6f10178c",
          "url": "https://github.com/reactive/data-client/commit/43a955c18684b4e0f5c1d79b2504e8ad2910816b"
        },
        "date": 1728812313741,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 506,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9221,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 320,
            "range": "±2.82%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 883,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1391,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 977,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4909,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 294,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6039,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6684,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6568,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1514,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5760,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5362557,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2661,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2056,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5529,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6136,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5487,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 518,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 912,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "109c922919ef401dee3c3c34d705819271f9e140",
          "message": "enhance: Remove _TYPE suffix from actionTypes (#3244)",
          "timestamp": "2024-10-13T03:08:21-07:00",
          "tree_id": "d7147d346fbfea0c347fb9e20a324408d031aa51",
          "url": "https://github.com/reactive/data-client/commit/109c922919ef401dee3c3c34d705819271f9e140"
        },
        "date": 1728814283277,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 514,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9198,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 339,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 884,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1376,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 987,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4970,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 305,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7024,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6683,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6401,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1541,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6078,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5876626,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 299,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2659,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2054,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5668,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6225,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5345,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 514,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 215,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 910,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5a5c95fe78b6fd5c129357733aefc61327be8736",
          "message": "internal: Publish new version (#3232)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-10-13T10:16:46Z",
          "tree_id": "65f41a23f970d808edd58bc197735697b0b65ff3",
          "url": "https://github.com/reactive/data-client/commit/5a5c95fe78b6fd5c129357733aefc61327be8736"
        },
        "date": 1728815166898,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 509,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9627,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 342,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 870,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1353,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 956,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4867,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6079,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6655,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6536,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1502,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5793,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5472804,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 293,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2633,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2046,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5560,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6516,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5532,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 507,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 212,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 912,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "36697eeaeb1a2283d4ca7e75c2c75d22e5a1417d",
          "message": "pkg: Update build packages (#3253)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-10-22T21:16:42Z",
          "tree_id": "1538c7430b807a2fbb7b3208e0aff7c2dbe578a8",
          "url": "https://github.com/reactive/data-client/commit/36697eeaeb1a2283d4ca7e75c2c75d22e5a1417d"
        },
        "date": 1729632423406,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 518,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9504,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 333,
            "range": "±3.21%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 890,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1382,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 980,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4728,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 292,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6874,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6734,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6626,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1514,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 5654,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5318493,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 286,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2588,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2006,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5381,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5876,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5070,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLong",
            "value": 507,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 200,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 210,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 898,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0ece46c7ee60f640c04decc6abb6d0220ed70b0b",
          "message": "pkg: Update all non-major dependencies (#3255)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-10-23T08:29:36Z",
          "tree_id": "f6f82ec51fd0bb7618a40e3939408b4d297104a7",
          "url": "https://github.com/reactive/data-client/commit/0ece46c7ee60f640c04decc6abb6d0220ed70b0b"
        },
        "date": 1729672797003,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 496,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9369,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 328,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 859,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1352,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 933,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4687,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 282,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7604,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6562,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6367,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1503,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5948,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5243343,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 286,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2624,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2115,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5550,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6355,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5374,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 492,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 197,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 889,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f34cc4306ca3664dae7df47e4e9fab29e23660a2",
          "message": "pkg: Update build packages (#3259)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-10-26T14:16:06Z",
          "tree_id": "ff79111ed8a1253543611a1e61ce02981f4c2deb",
          "url": "https://github.com/reactive/data-client/commit/f34cc4306ca3664dae7df47e4e9fab29e23660a2"
        },
        "date": 1729952700505,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 518,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9381,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 341,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 875,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1361,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 982,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4927,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 297,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6740,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6378,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6345,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1523,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6180,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5488733,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 292,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2703,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2045,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5634,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6475,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5397,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 516,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 213,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 891,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "fa8f6003ebd9350a6b11e524c471105342564b35",
          "message": "internal: Use latest node 22 in github actions",
          "timestamp": "2024-10-30T13:13:42Z",
          "tree_id": "32e9b5f839e01468deb67d9c261c1f9b9a28b156",
          "url": "https://github.com/reactive/data-client/commit/fa8f6003ebd9350a6b11e524c471105342564b35"
        },
        "date": 1730294214369,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 509,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9169,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 266,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 880,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1346,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 777,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4750,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 251,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6996,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6370,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6222,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1609,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5858,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5192436,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 251,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2569,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2112,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6366,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6887,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 6152,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 511,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 212,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 909,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "99cd04152532e13d8fb092ea800d381391d5aacd",
          "message": "fix: Collections work with nested args (#3281)",
          "timestamp": "2024-11-24T06:08:33-08:00",
          "tree_id": "4e94d3cb00a196a8af316e05f78b40dea12c322c",
          "url": "https://github.com/reactive/data-client/commit/99cd04152532e13d8fb092ea800d381391d5aacd"
        },
        "date": 1732457513265,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 505,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9162,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 258,
            "range": "±3.28%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 904,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1326,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 773,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4715,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 247,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7317,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6532,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6257,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1627,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6084,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5157033,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 249,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2669,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2056,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6658,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6904,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 6059,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 504,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 886,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "156e3fe30bdc5c1ed53eb4d0c4db5f732f2133e8",
          "message": "enhance: Use React 19 rc1 (#3279)",
          "timestamp": "2024-11-24T12:01:11-08:00",
          "tree_id": "e08b100f2be4e3eca8f26f720f34db16a9138641",
          "url": "https://github.com/reactive/data-client/commit/156e3fe30bdc5c1ed53eb4d0c4db5f732f2133e8"
        },
        "date": 1732478661322,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 517,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9195,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 264,
            "range": "±2.63%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 879,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1326,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 758,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4791,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 248,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7508,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6389,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6218,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1582,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5952,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5301570,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 248,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2580,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1985,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6465,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6340,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "get Collection",
            "value": 5464,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 514,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 211,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 908,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "4095003f40f4f6436a790d108ee13bcae1a2cdfa",
          "message": "enhance: Use React 19 rc1 (#3279)",
          "timestamp": "2024-11-24T22:52:46Z",
          "tree_id": "9c1b678b1073b3db6d8b358e1a3b7cc66ed6dd5e",
          "url": "https://github.com/reactive/data-client/commit/4095003f40f4f6436a790d108ee13bcae1a2cdfa"
        },
        "date": 1732488952175,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 521,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9000,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 255,
            "range": "±3.11%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 887,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1355,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 770,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4853,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 255,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7666,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6503,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6272,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1604,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 6026,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5123731,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 256,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2550,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1994,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6557,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6906,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 6073,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 501,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 213,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 897,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "00d6a229d4331ed0ccb0e59ba219b0c5119b1a2c",
          "message": "internal: Publish new version (#3245)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-11-25T00:10:56Z",
          "tree_id": "2e08bec7e5170717300600de44006b03024730ca",
          "url": "https://github.com/reactive/data-client/commit/00d6a229d4331ed0ccb0e59ba219b0c5119b1a2c"
        },
        "date": 1732494091269,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 523,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9087,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 270,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 890,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1354,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 783,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5091,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 251,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7203,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6789,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6208,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1628,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5704,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5136912,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 253,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2528,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2036,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6513,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6856,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5897,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 521,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 214,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 884,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1d4e12ca0875bd1ad1d8cdf58ac6a7cc168e5300",
          "message": "pkg: Update validation packages (#3295)\n\n* pkg: Update validation packages\n\n* internal: Formatting\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2024-12-01T17:45:37Z",
          "tree_id": "ce14a4b04fbcba7a584e6e836b206f86ff6e93a2",
          "url": "https://github.com/reactive/data-client/commit/1d4e12ca0875bd1ad1d8cdf58ac6a7cc168e5300"
        },
        "date": 1733075732176,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 503,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9054,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 262,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 855,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1359,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 771,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4840,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 248,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5912,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6292,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6210,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1580,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5675,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4889779,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 246,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2526,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2026,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6579,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6135,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5760,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 501,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 209,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 900,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ebfbe143b894f1ae550939de3141b88e8f4bfe2d",
          "message": "pkg: Update react (#3298)\n\n* pkg: Update react\n\n* pkg: Update type packages too\n\n* internal: Update tests for react 19\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2024-12-06T11:01:58Z",
          "tree_id": "adb291f9e253f8f6deb2db3011313417d6da41bc",
          "url": "https://github.com/reactive/data-client/commit/ebfbe143b894f1ae550939de3141b88e8f4bfe2d"
        },
        "date": 1733483559944,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 507,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9049,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 265,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 883,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1359,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 768,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4960,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 252,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7388,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6660,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6549,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1593,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6041,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5193196,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 247,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2620,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2072,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6534,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6423,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5591,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 510,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 210,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 897,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fe8c7cbc147b710fbaacd39032a8dbcbf0585b7f",
          "message": "pkg: Update all non-major dependencies (#3303)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-12-06T17:41:34Z",
          "tree_id": "143c61bb1f9d6deb90f16652a066b413d69ed5cc",
          "url": "https://github.com/reactive/data-client/commit/fe8c7cbc147b710fbaacd39032a8dbcbf0585b7f"
        },
        "date": 1733507546720,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 490,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9064,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 266,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 876,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1349,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 781,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4937,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 248,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5880,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6486,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6404,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1549,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6007,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5621732,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 248,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2582,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2008,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6602,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5982,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5746,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 506,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 203,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 209,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 895,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "024d572db353bc91f3ecff5b59896c62db69bfd2",
          "message": "pkg: Update all non-major dependencies (#3314)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-12-19T08:09:43Z",
          "tree_id": "7647ba98e0520047afb9ada3f2d902fd58edf2eb",
          "url": "https://github.com/reactive/data-client/commit/024d572db353bc91f3ecff5b59896c62db69bfd2"
        },
        "date": 1734596457278,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 512,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9253,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 268,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 901,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1372,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 788,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4798,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 249,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7347,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6316,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6194,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1639,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5841,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5161350,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 250,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2666,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1970,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6525,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6346,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5710,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 511,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 212,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 911,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "07dce8f4644ac96ab329daf50f539f5f00897489",
          "message": "pkg: Update `webpack-cli` to v6 (#3318)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2024-12-20T10:18:02Z",
          "tree_id": "a6a29ccc6f7a16207b55c2ae731238ee40a841eb",
          "url": "https://github.com/reactive/data-client/commit/07dce8f4644ac96ab329daf50f539f5f00897489"
        },
        "date": 1734690515857,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 509,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9228,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 269,
            "range": "±2.40%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 882,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1375,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 793,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4825,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 251,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6949,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6594,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6390,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1590,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5445,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5004018,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 250,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2668,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1977,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6310,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5802,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 4907,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 508,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 199,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 212,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 906,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3906fc2fec2b958a44d718934919b524e851f298",
          "message": "enhance: Make SUBSCRIBE action field ordering consistent with other actions",
          "timestamp": "2024-12-22T11:11:42Z",
          "tree_id": "51cb702193edaf549762c1c9f66a499a403038cf",
          "url": "https://github.com/reactive/data-client/commit/3906fc2fec2b958a44d718934919b524e851f298"
        },
        "date": 1734866090762,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 514,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9075,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 268,
            "range": "±2.41%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 894,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1375,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 780,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4889,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 247,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7381,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6484,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6367,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1613,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6118,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5635038,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 249,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2724,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2046,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6427,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6328,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5341,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 515,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 211,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 896,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af07e7a1ba9eaa6fe56ebd4c79a3732d541507f5",
          "message": "internal: Publish new version (#3322)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2024-12-28T18:55:30Z",
          "tree_id": "97e01a1e1de5cdf7a4c9a12c0b6fd5ca3f787588",
          "url": "https://github.com/reactive/data-client/commit/af07e7a1ba9eaa6fe56ebd4c79a3732d541507f5"
        },
        "date": 1735412568121,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 507,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8891,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 266,
            "range": "±2.47%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 837,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1333,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 770,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4820,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 251,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7533,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6399,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6328,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1623,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6049,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5488573,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 248,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2710,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2051,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6376,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7040,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 6235,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 494,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 195,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 205,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 890,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1df829e0a005f5973d59669aaf0a226250346a40",
          "message": "enhance: Add garbage collection based on expiry time (#3343)",
          "timestamp": "2025-01-06T01:37:38-08:00",
          "tree_id": "d0b0b15fdd1c4763f36e1d0a04084cd3757f6053",
          "url": "https://github.com/reactive/data-client/commit/1df829e0a005f5973d59669aaf0a226250346a40"
        },
        "date": 1736156448162,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 484,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8783,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 255,
            "range": "±2.84%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 880,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1371,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 769,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4851,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 241,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7513,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6195,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 5941,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1600,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5486,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4704748,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 243,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2454,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1944,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6195,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6557,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5788,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 493,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 197,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 207,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 903,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "657d9ba9cf42bc20aad4ba5aabf71fd0d48b339b",
          "message": "pkg: Update all non-major dependencies (#3346)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-08T20:10:29Z",
          "tree_id": "5ebff1cae7f308a596697ca33fd04d5eb66ba3a6",
          "url": "https://github.com/reactive/data-client/commit/657d9ba9cf42bc20aad4ba5aabf71fd0d48b339b"
        },
        "date": 1736367473425,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 503,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8731,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 256,
            "range": "±3.14%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 877,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1378,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 754,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4760,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 240,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6453,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6375,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6328,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1494,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5715,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5190967,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 240,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2597,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1965,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6373,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6512,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5809,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 510,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 195,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 206,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 897,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "012df5f7f0c1960c9b3a0c7352372b0b52d7f70c",
          "message": "pkg: Update all non-major dependencies (#3348)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-21T09:49:54Z",
          "tree_id": "ef0a392f8258bb4e9e93fedd1c2061da50691790",
          "url": "https://github.com/reactive/data-client/commit/012df5f7f0c1960c9b3a0c7352372b0b52d7f70c"
        },
        "date": 1737453442780,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 505,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8743,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 263,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 872,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1389,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 774,
            "range": "±2.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4768,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 244,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7482,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6169,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6033,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1607,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5726,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4670217,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 247,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2606,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1990,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6429,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6353,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5803,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 520,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 204,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 212,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 915,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a6bf39b34d33fdbccbf07817203b5b94b9259e5e",
          "message": "pkg: Update all non-major dependencies (#3352)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-25T21:34:23Z",
          "tree_id": "ef99b25ee1d7068449c4f0a8a3dbdd78fb106a95",
          "url": "https://github.com/reactive/data-client/commit/a6bf39b34d33fdbccbf07817203b5b94b9259e5e"
        },
        "date": 1737841262518,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 486,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8629,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 237,
            "range": "±3.84%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 871,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1329,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 764,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4797,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 244,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7357,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6439,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6205,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1598,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5954,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4221448,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 243,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2534,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1695,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6360,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6818,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 6267,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 493,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 196,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 206,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 895,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "165afed083c0c63e9356bc8d1ee30dee8b916ed6",
          "message": "pkg: Update build packages (#3353)\n\n* pkg: Update build packages\r\n\r\n* enhance: Polyfills no longer pollute global scope\r\n\r\n---------\r\n\r\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2025-02-17T08:38:39-08:00",
          "tree_id": "0ecc3bab4f77f6e25c0b6e4bc5e12b5d2bdf0f70",
          "url": "https://github.com/reactive/data-client/commit/165afed083c0c63e9356bc8d1ee30dee8b916ed6"
        },
        "date": 1739810512861,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 490,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8613,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 263,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 900,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1351,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 770,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4461,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 235,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7639,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6468,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6191,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1604,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5652,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4854182,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 253,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2401,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1907,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6534,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6740,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 6292,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 489,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 201,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 207,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 880,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a49526897ab995907587d32ba3b530d913be0302",
          "message": "pkg: Update all non-major dependencies (#3357)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-17T16:47:54Z",
          "tree_id": "8f6608be64d0be03bf4927b9198a003a297e3c0b",
          "url": "https://github.com/reactive/data-client/commit/a49526897ab995907587d32ba3b530d913be0302"
        },
        "date": 1739811312149,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 484,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8694,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 245,
            "range": "±3.48%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 880,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1356,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 761,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4619,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 234,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7360,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6293,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6099,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1553,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5626,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4729970,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 233,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2497,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1953,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6371,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6648,
            "range": "±0.81%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5710,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 489,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 191,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 202,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 891,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "66e7336bab0f6768d93c76882188894d36f84f88",
          "message": "fix: Interceptors work on manager-dispatched actions (#3365)",
          "timestamp": "2025-02-23T13:50:13-06:00",
          "tree_id": "82023f54230a24467d0eddb8cf7c2e3f4e934b7f",
          "url": "https://github.com/reactive/data-client/commit/66e7336bab0f6768d93c76882188894d36f84f88"
        },
        "date": 1740340401763,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 513,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9082,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 259,
            "range": "±2.89%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 900,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1373,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 790,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4524,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 249,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7731,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6402,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6229,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1624,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6147,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4747177,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 248,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2587,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1954,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6191,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5632,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "get Collection",
            "value": 4852,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 513,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 202,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 213,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 881,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f796b6cbd33cce1f258bd5e95a7d6b1d51365f2f",
          "message": "enhance: Add GC counting to useQuery() (#3373)\n\n* enhance: Add GC counting to useQuery()\n\n* enhance: Stronger controller.snapshot() method types",
          "timestamp": "2025-02-24T10:36:47-06:00",
          "tree_id": "89caf7bfe575b055b6a74f4e7ff3159d66485da1",
          "url": "https://github.com/reactive/data-client/commit/f796b6cbd33cce1f258bd5e95a7d6b1d51365f2f"
        },
        "date": 1740415190446,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 481,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8963,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 254,
            "range": "±3.14%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 885,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1373,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 769,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4461,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 248,
            "range": "±1.77%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7547,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6373,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6230,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1592,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6080,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4750933,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 245,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2502,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1925,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6572,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6781,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 6041,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "setLong",
            "value": 480,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 194,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 204,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 883,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "57df2c280009cf06e6e5b4bdb9331063a32bc656",
          "message": "feat: Add hasExpired and expiryMultiplier options to GCPolicy (#3374)\n\n* feat: Add hasExpired and expiryMultiplier options to GCPolicy\n\n* enhance: Change to expiresAt for expiry policy",
          "timestamp": "2025-02-24T12:51:46-08:00",
          "tree_id": "5bc7ed548f492f8bbec9ea6b97007f8d43c9a9aa",
          "url": "https://github.com/reactive/data-client/commit/57df2c280009cf06e6e5b4bdb9331063a32bc656"
        },
        "date": 1740430489021,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 489,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8754,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 251,
            "range": "±2.98%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 876,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1331,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 755,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4506,
            "range": "±0.98%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 249,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7101,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6478,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6183,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1553,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5709,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4977753,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 243,
            "range": "±2.33%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2486,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1933,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6307,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6554,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5863,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 490,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 192,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 203,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 887,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "926743218b1249610c6dcb4373338b1ac249d1e9",
          "message": "internal: Publish new version (#3337)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-24T21:04:52Z",
          "tree_id": "425df7b4a039ef81f8bc8e1707ff3e5b50dd93db",
          "url": "https://github.com/reactive/data-client/commit/926743218b1249610c6dcb4373338b1ac249d1e9"
        },
        "date": 1740431493493,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 486,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8517,
            "range": "±2.50%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 254,
            "range": "±2.68%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 881,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1348,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 787,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4515,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 249,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7251,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6461,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6130,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1595,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5841,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4681139,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 248,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2519,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1925,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6428,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6423,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Collection",
            "value": 5649,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 492,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 194,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 208,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 875,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b5c3f36ea7c3dfc0b080ad2f959c398fcc57c80b",
          "message": "internal: Publish new version (#3378)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-26T16:21:59Z",
          "tree_id": "fe03e6f7c7c83a1e6a5d986fba4ce13ca8a80cd6",
          "url": "https://github.com/reactive/data-client/commit/b5c3f36ea7c3dfc0b080ad2f959c398fcc57c80b"
        },
        "date": 1740587338684,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 479,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8533,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 251,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 854,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1369,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 763,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4832,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 244,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6856,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6369,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6193,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1560,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5687,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4963125,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 244,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2513,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1926,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6295,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6461,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5390,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 492,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 195,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 205,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 871,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "43adef3e3fa815320524e74bbf90456a70499edd",
          "message": "internal: Publish new version (#3387)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-27T16:37:17Z",
          "tree_id": "33f0a0fca1b2c59f5e9e72c6a27cff84986deef6",
          "url": "https://github.com/reactive/data-client/commit/43adef3e3fa815320524e74bbf90456a70499edd"
        },
        "date": 1740674627973,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 500,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8699,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 264,
            "range": "±2.61%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 880,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1361,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 773,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4719,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 247,
            "range": "±2.09%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7243,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6281,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6048,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1579,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 5828,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4687845,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 249,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2536,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1951,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6635,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6517,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5963,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 504,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 195,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 209,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 884,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "32cccdb921cd8d7643b641a9e8872aa89782a94a",
          "message": "enhance: Improve performance by using Map (#3390)\n\n* enhance: Improve performance by using Map\n\n* enhance: Use maps in networkmanager\n\n* enhance: Map in RestHelpers\n\n* enhance: queryKeys to Map\n\n* enhance: Map in addEntities\n\n* internal: Changeset\n\n* docs: Update benchmarks for new performance results\n\n* enhance: Interceptors that have args specified will still work, and warn about args.\n\n* enhance: Remove NM changes for now as they are breaking",
          "timestamp": "2025-03-01T05:00:45-08:00",
          "tree_id": "15e1e85ffb818c96064afd3eb7486ec689ba2d7f",
          "url": "https://github.com/reactive/data-client/commit/32cccdb921cd8d7643b641a9e8872aa89782a94a"
        },
        "date": 1740834226501,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 532,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8956,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 259,
            "range": "±2.78%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 886,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1426,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 775,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5686,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 255,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7447,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7827,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7564,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1729,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 8125,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4969667,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 259,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2829,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2106,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7541,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6297,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5754,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 532,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 233,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 245,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 933,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a363145b390736e52795f6554e7bfeec5af6b3d5",
          "message": "pkg: Update all non-major dependencies (#3391)\n\n* pkg: Update all non-major dependencies\n\n* fix: type errors\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2025-03-01T13:24:31Z",
          "tree_id": "d1a0c6a30424c1870c850908da1cbae59098a953",
          "url": "https://github.com/reactive/data-client/commit/a363145b390736e52795f6554e7bfeec5af6b3d5"
        },
        "date": 1740835871048,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 537,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8283,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 258,
            "range": "±3.07%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 879,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1400,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 789,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5669,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 258,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7275,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7538,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7385,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1729,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 7757,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5387454,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 263,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2656,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2102,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7313,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6639,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5706,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 534,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 233,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 249,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 919,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56d8beba7a1aa31b3b1b70e070780011ea5a8653",
          "message": "internal: Publish new version (#3392)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-01T13:49:45Z",
          "tree_id": "a40e8432be518ad1d8c72901a5e680fa3004f178",
          "url": "https://github.com/reactive/data-client/commit/56d8beba7a1aa31b3b1b70e070780011ea5a8653"
        },
        "date": 1740837378921,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 501,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8925,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 243,
            "range": "±4.26%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 864,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1400,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 777,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5453,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 248,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7156,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7268,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6974,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1674,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 7181,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4650456,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 247,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2778,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2088,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7366,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6567,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5914,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 505,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 216,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 230,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 933,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f59f4be857f32ffb2113d4b7a8b7ecb6c2280e0",
          "message": "internal: Publish new version (#3393)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-01T14:07:59Z",
          "tree_id": "573cc9165e27afe9320a6096cc6a44b870fe511d",
          "url": "https://github.com/reactive/data-client/commit/5f59f4be857f32ffb2113d4b7a8b7ecb6c2280e0"
        },
        "date": 1740838466347,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 546,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8682,
            "range": "±1.62%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 273,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 888,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1427,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 807,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5854,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 261,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7020,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8894,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8506,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1732,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 7560,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4959639,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 270,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2822,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2086,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7934,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6819,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Collection",
            "value": 5850,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 549,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 236,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 251,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 934,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "39f9f7be58caceb879cea42f821ea8282080f79a",
          "message": "internal: Publish new version (#3395)\n\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-01T14:24:43Z",
          "tree_id": "faca8168fddcc32a48786da29edecd7b642ed958",
          "url": "https://github.com/reactive/data-client/commit/39f9f7be58caceb879cea42f821ea8282080f79a"
        },
        "date": 1740839505078,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 521,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8146,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 258,
            "range": "±2.38%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 843,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1394,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 774,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5520,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 253,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6130,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8668,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8659,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1668,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 6489,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4853744,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 260,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2863,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2101,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6248,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6703,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5989,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 527,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 227,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 246,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 928,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d84899de4fb784375ab7a34fff6fe23a2ed98037",
          "message": "feat: Support dynamic invalidation/deletes (#3407)",
          "timestamp": "2025-03-10T06:51:47-05:00",
          "tree_id": "330591afba03c5c224e7e7c19bca6106b1f700ec",
          "url": "https://github.com/reactive/data-client/commit/d84899de4fb784375ab7a34fff6fe23a2ed98037"
        },
        "date": 1741607689795,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 531,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8892,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 248,
            "range": "±3.53%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 861,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1406,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 780,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5657,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 252,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7227,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7302,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7150,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1685,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 7825,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4452454,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 253,
            "range": "±2.21%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2721,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2094,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7536,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7432,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 6328,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 534,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 230,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 241,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 925,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7a7bfc570fa819a64de347cb5d69ee16c0764c36",
          "message": "internal: Move normalize files (#3409)",
          "timestamp": "2025-03-11T03:21:55-07:00",
          "tree_id": "1125293bf14c7e3239bca673acbeb8c80f212258",
          "url": "https://github.com/reactive/data-client/commit/7a7bfc570fa819a64de347cb5d69ee16c0764c36"
        },
        "date": 1741688697665,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 543,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8971,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 257,
            "range": "±3.99%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 896,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1423,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 792,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5501,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 255,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7043,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8990,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8406,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1709,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 7887,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5117246,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 259,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2815,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2067,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7681,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6818,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 5899,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 540,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 237,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 248,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 923,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "1f8f4da9f04f546cac4e5e9c4f444eb179465d03",
          "message": "enhance: Use controller.getResponseMeta() in fetchIfStale",
          "timestamp": "2025-03-11T10:52:12Z",
          "tree_id": "2bd8d74f0186a55831b166722deb162d3c6c6319",
          "url": "https://github.com/reactive/data-client/commit/1f8f4da9f04f546cac4e5e9c4f444eb179465d03"
        },
        "date": 1741690522753,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 538,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8987,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 253,
            "range": "±3.55%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 876,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1415,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 782,
            "range": "±2.29%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5552,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 249,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7319,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8897,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8369,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1719,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 7527,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5036878,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 260,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2876,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1978,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6902,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6871,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5781,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "setLong",
            "value": 529,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 223,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 244,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 927,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6442c566577daadf4625acd46f9e512ede5cadd2",
          "message": "pkg: Update `@anansi/webpack-config` to v21 (#3410)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-12T11:00:40Z",
          "tree_id": "20f65faef85496cd0196215796699605691698d3",
          "url": "https://github.com/reactive/data-client/commit/6442c566577daadf4625acd46f9e512ede5cadd2"
        },
        "date": 1741777635494,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 521,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9017,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 269,
            "range": "±3.07%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 906,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1414,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 801,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5670,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 251,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7265,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 9020,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8259,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1738,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 7538,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5332543,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 264,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2792,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2113,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7088,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6516,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "get Collection",
            "value": 5810,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 554,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 231,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 244,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 916,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c76da3431e3a1a3a88adc0f816d4e9d2099e0d41",
          "message": "pkg: Update build packages (#3415)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-12T11:40:10Z",
          "tree_id": "2670bc471029fbc688ff7d97017ac120e61c1007",
          "url": "https://github.com/reactive/data-client/commit/c76da3431e3a1a3a88adc0f816d4e9d2099e0d41"
        },
        "date": 1741780020113,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 512,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8836,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 247,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 889,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1396,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 782,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5474,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 255,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7455,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 9037,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8837,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1713,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6568,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5023957,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 248,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2681,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2089,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6585,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7322,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 6301,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 540,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 235,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 249,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 923,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "69ae187f1a99ab5d03a0f8bad7c90d8fe52005e3",
          "message": "internal: Publish new version (#3400)\n\nCo-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-12T17:45:00Z",
          "tree_id": "d68c0d0c1f41eb3316534c29fc50ac5bd65f53bc",
          "url": "https://github.com/reactive/data-client/commit/69ae187f1a99ab5d03a0f8bad7c90d8fe52005e3"
        },
        "date": 1741801887574,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 530,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8551,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 265,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 859,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1424,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 785,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5602,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 258,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7093,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8782,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8816,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1727,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 7803,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4684198,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 254,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2718,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2017,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7096,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7138,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 6332,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 535,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 230,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 243,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 904,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "bde297f5e068444074bca425a21a6ab20ef55e34",
          "message": "internal: Add direct pk to benchmark Entity",
          "timestamp": "2025-03-18T14:42:03Z",
          "tree_id": "5b7e868c9dcd8d6dea951ba21e58a678b1c4b978",
          "url": "https://github.com/reactive/data-client/commit/bde297f5e068444074bca425a21a6ab20ef55e34"
        },
        "date": 1742309113027,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 508,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8929,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 239,
            "range": "±3.24%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 843,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1390,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 711,
            "range": "±2.83%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5234,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 234,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6958,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7474,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7153,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1612,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 8028,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4829081,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 244,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2757,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2051,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7381,
            "range": "±0.73%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6930,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 6032,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 510,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 222,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 234,
            "range": "±0.82%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 901,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "fb134aa46ff35be26f2e6477cdbd4c7068bfeba7",
          "message": "internal: Remove OptimizeFunctionOnNextCall call in benchmark setup",
          "timestamp": "2025-03-18T17:31:38Z",
          "tree_id": "6de0e63f1c897d006a3a08d4ad6d17edd974fd2d",
          "url": "https://github.com/reactive/data-client/commit/fb134aa46ff35be26f2e6477cdbd4c7068bfeba7"
        },
        "date": 1742319285236,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 544,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9137,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 262,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 884,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1414,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 779,
            "range": "±2.77%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5396,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 255,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7468,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 9135,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8256,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1771,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 7651,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5211864,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 264,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2781,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2051,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7684,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6800,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 6054,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 544,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 235,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 248,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 916,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "78574b1c9ac8908dc9eeb47963686fba75e20f75",
          "message": "pkg: Update all non-major dependencies (#3423)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-19T12:28:50Z",
          "tree_id": "67aed4ff66c771d1471b7bfbe484e5a7cf5f377d",
          "url": "https://github.com/reactive/data-client/commit/78574b1c9ac8908dc9eeb47963686fba75e20f75"
        },
        "date": 1742387730558,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 497,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8900,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 252,
            "range": "±3.80%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 869,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1407,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 778,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5662,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 255,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6929,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7275,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6965,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1718,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 7725,
            "range": "±1.40%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4748007,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 253,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2768,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2069,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7301,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7029,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 6402,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 522,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 225,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 236,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 919,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "397c11333d243739a7ffc1e0a65d5a42f7ac5c9b",
          "message": "pkg: Update react-navigation monorepo (#3424)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-20T08:54:56Z",
          "tree_id": "dba6dbdce106e1b901265de397a3aac369ef7586",
          "url": "https://github.com/reactive/data-client/commit/397c11333d243739a7ffc1e0a65d5a42f7ac5c9b"
        },
        "date": 1742461087577,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 540,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8900,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 248,
            "range": "±3.49%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 893,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1403,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 770,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5522,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 245,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6776,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8278,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7744,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1692,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 7172,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4953127,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 250,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2815,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2047,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7300,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6492,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5712,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 541,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 230,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 246,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 915,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "246cde6dbeca59eafd10e59d8cd05a6f232fb219",
          "message": "enhance: ImmutableJS always denormalizes to normal JS (#3421)",
          "timestamp": "2025-03-20T05:17:16-07:00",
          "tree_id": "53cefaac7a96c5c752144571eaf7b04d19837eba",
          "url": "https://github.com/reactive/data-client/commit/246cde6dbeca59eafd10e59d8cd05a6f232fb219"
        },
        "date": 1742473217280,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 533,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8974,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 268,
            "range": "±2.48%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 969,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1399,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 757,
            "range": "±2.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5237,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 257,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7316,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8967,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8816,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1745,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse",
            "value": 7906,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4864323,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 266,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2732,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1982,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7597,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7115,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 6397,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 537,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 234,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 249,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 927,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa85d4e04067c67f958f5f3e5197248de4092f54",
          "message": "pkg: Update all non-major dependencies (#3426)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-20T12:45:52Z",
          "tree_id": "1408a39b3c99fd03425b8e970ded706402340684",
          "url": "https://github.com/reactive/data-client/commit/aa85d4e04067c67f958f5f3e5197248de4092f54"
        },
        "date": 1742475187416,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 530,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8847,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 271,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 980,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1383,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 786,
            "range": "±2.07%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5163,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 263,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7319,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8938,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8089,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1734,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 7790,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5088135,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 263,
            "range": "±2.01%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2748,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1986,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7071,
            "range": "±1.46%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6757,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5874,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 532,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 235,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 250,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 930,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fe8c93a87e862dcef4581edf890db670be046ac8",
          "message": "enhance: Optimize normalize call construction (#3432)",
          "timestamp": "2025-03-25T10:01:21-05:00",
          "tree_id": "37babb05e45377e98cc44860015181d33177da7f",
          "url": "https://github.com/reactive/data-client/commit/fe8c93a87e862dcef4581edf890db670be046ac8"
        },
        "date": 1742915074736,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 492,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8963,
            "range": "±1.66%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 259,
            "range": "±2.94%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 954,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1373,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 753,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5089,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 244,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5968,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8683,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8087,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1652,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6203,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4808907,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 245,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2700,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2019,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6232,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6705,
            "range": "±1.02%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 6155,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 486,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 217,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 229,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 906,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "19d9644059d0708970e548bad62e4aad73a7b2de",
          "message": "pkg: Update all non-major dependencies (#3437)\n\n* pkg: Update all non-major dependencies\n\n* fix: Use Temporal.Instant.fromEpochMilliseconds as fromSeconds is gone\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2025-03-29T12:12:38Z",
          "tree_id": "73b378cdbe66cc708c1040b105dbc92b9045cb8d",
          "url": "https://github.com/reactive/data-client/commit/19d9644059d0708970e548bad62e4aad73a7b2de"
        },
        "date": 1743250766954,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 520,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9069,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 270,
            "range": "±3.30%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 971,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1425,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 795,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5281,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 265,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7173,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 9079,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8878,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1764,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6157,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5160613,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 262,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2514,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2018,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6443,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 7327,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Collection",
            "value": 6295,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 512,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 225,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 243,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 905,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "b607a4a0f9880b3986e6133a04b8e0877b05987d",
          "message": "internal: Add queryShort withCache benchmark",
          "timestamp": "2025-03-31T11:50:23+01:00",
          "tree_id": "af4bcdb7ed78154d46a8848c74e5d8dc1e005dc7",
          "url": "https://github.com/reactive/data-client/commit/b607a4a0f9880b3986e6133a04b8e0877b05987d"
        },
        "date": 1743418417376,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 528,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9016,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 264,
            "range": "±3.42%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 970,
            "range": "±0.93%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1402,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 785,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5010,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2231,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 265,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6921,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6998,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6804,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1711,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6118,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4814405,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 261,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2711,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2008,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6321,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6811,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 6058,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 525,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 229,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 244,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 904,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f17d751cb22b9352a936ce3b66d5e1b831653a34",
          "message": "pkg: Update all non-major dependencies (#3447)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-02T15:55:10Z",
          "tree_id": "d84617e29b16eaf2a666c35425c523d63b3ab354",
          "url": "https://github.com/reactive/data-client/commit/f17d751cb22b9352a936ce3b66d5e1b831653a34"
        },
        "date": 1743609727661,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 521,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8861,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 279,
            "range": "±2.76%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 990,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1390,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 786,
            "range": "±2.23%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5064,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2200,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 260,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6728,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7145,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6731,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1716,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 7030,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4164000,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 257,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2700,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1911,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7369,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6746,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5802,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 519,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 227,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 245,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 881,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "3c776af418fcc11967983ef8056b935c55eca7b6",
          "message": "internal: Rename and reorder core bench",
          "timestamp": "2025-04-07T12:21:00+01:00",
          "tree_id": "bbf1b11b7ebfeb70869a1c4f08fe3c0e9f8955fc",
          "url": "https://github.com/reactive/data-client/commit/3c776af418fcc11967983ef8056b935c55eca7b6"
        },
        "date": 1744025053101,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 506,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9031,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 271,
            "range": "±3.09%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 973,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1425,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 770,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5021,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2228,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 258,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6303,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7400,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6865,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1650,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6002,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4897876,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 255,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2706,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2008,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6505,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5703,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6744,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 498,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 221,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 237,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 909,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "fdfb34d7c84cd1a1ec674b9fa725e370c52cdf9d",
          "message": "internal: Disable babel cache when building benchmark",
          "timestamp": "2025-04-07T12:54:41+01:00",
          "tree_id": "459625d3732e6915d6cb56eb2e61d9d09d2c1fcf",
          "url": "https://github.com/reactive/data-client/commit/fdfb34d7c84cd1a1ec674b9fa725e370c52cdf9d"
        },
        "date": 1744027074518,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 500,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8930,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 245,
            "range": "±3.48%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 952,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1375,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 741,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4737,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2297,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 231,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6368,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7677,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7519,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1692,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 7458,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 4824745,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 240,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2588,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 1970,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6922,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 6093,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7928,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 213,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 224,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 879,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca4536f3ace6a09b104706b4c3d8335fc4eae9a5",
          "message": "enhance: Add consolidate callbacks for queryKey and normalize in 'delegates' (#3427)",
          "timestamp": "2025-04-07T09:54:21-07:00",
          "tree_id": "8b6ce1d9195ab421aa5f793e8d4b0dd6dff5b701",
          "url": "https://github.com/reactive/data-client/commit/ca4536f3ace6a09b104706b4c3d8335fc4eae9a5"
        },
        "date": 1744045050869,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 504,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9209,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 266,
            "range": "±2.80%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 985,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1389,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 762,
            "range": "±2.30%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5369,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2407,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 256,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6848,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8080,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7845,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1634,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6099,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5782251,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 248,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2547,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2071,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6571,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 6082,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6659,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 523,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 230,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 242,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 906,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f491a9e0082dca64ad042aaf7d377e17f459ae7",
          "message": "enhance: Add consolidate callbacks for queryKey and normalize in 'delegates'  (#3449)",
          "timestamp": "2025-04-07T10:03:53-07:00",
          "tree_id": "b0a303418c72b1d417421c8a0f7bc7c05cd1c9a1",
          "url": "https://github.com/reactive/data-client/commit/1f491a9e0082dca64ad042aaf7d377e17f459ae7"
        },
        "date": 1744045618469,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 503,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9308,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 283,
            "range": "±2.49%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 985,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1403,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 792,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5343,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2437,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 263,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6686,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6995,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6495,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1698,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 6367,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6185278,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 266,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2635,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2106,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6598,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5808,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7278,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 497,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 230,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 242,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 876,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "49a5fd36c881a4c8689d33404751ccef6cebab1f",
          "message": "enhance: Consolidate controller expiry logic in private getExpiryStatus() (#3450)",
          "timestamp": "2025-04-07T10:32:46-07:00",
          "tree_id": "00968c4650827abb5162e96312fc1c8b744c4fb4",
          "url": "https://github.com/reactive/data-client/commit/49a5fd36c881a4c8689d33404751ccef6cebab1f"
        },
        "date": 1744047352782,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 496,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9212,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 268,
            "range": "±2.61%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 971,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1404,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 763,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5193,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2374,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 253,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6799,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7888,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7556,
            "range": "±0.77%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1686,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6156,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5506274,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 247,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2643,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2138,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5969,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 5441,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6728,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 489,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 218,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 235,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 809,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "91 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4939456598c213ee81c1abef476a1aaccd19f82d",
          "message": "enhance: state.entityMeta -> state.entitiesMeta (#3451)",
          "timestamp": "2025-04-07T10:55:36-07:00",
          "tree_id": "02a26784543cbf11be6b6427c714ef761350e95e",
          "url": "https://github.com/reactive/data-client/commit/4939456598c213ee81c1abef476a1aaccd19f82d"
        },
        "date": 1744048722753,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 503,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9258,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 275,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1010,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1408,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 777,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5203,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2302,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 258,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6928,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7201,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6818,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1703,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6061,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5139703,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 261,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2679,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2096,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6530,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5950,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6735,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 508,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 228,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 240,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 919,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "66e19064d21225c70639f3b4799e54c259ce6905",
          "message": "enhance: MemoCache.query() and MemoCache.buildQueryKey() take state as one argument (#3454)",
          "timestamp": "2025-04-07T13:07:19-07:00",
          "tree_id": "0deebe61a88220a5aa394a9df931cffdabb74ec6",
          "url": "https://github.com/reactive/data-client/commit/66e19064d21225c70639f3b4799e54c259ce6905"
        },
        "date": 1744056627831,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 521,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9493,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 279,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1020,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1418,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 781,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5444,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2421,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 259,
            "range": "±2.51%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6592,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8029,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7691,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1713,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 6228,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5809261,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 269,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2653,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2098,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6769,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 6152,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6686,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 524,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 229,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 243,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 918,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "25b153a9d80db1bcd17ab5558dfa13b333f112b8",
          "message": "enhance: MemoCache.query returns {data, paths} just like denormalize (#3372)",
          "timestamp": "2025-04-07T15:12:57-07:00",
          "tree_id": "6071d14daeac3765da381ad2f3bade127f5e1a14",
          "url": "https://github.com/reactive/data-client/commit/25b153a9d80db1bcd17ab5558dfa13b333f112b8"
        },
        "date": 1744064173823,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 497,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8961,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 276,
            "range": "±2.59%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 994,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1391,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 766,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5313,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2436,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 256,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6897,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7331,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6867,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1688,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6323,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5163782,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 259,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2607,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2066,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6595,
            "range": "±1.07%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5604,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7219,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 508,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 224,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 239,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 908,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d44d36a7de0a18817486c4f723bf2f0e86ac9677",
          "message": "enhance: Change NetworkManager bookkeeping data structure for inflight fetches (#3394)",
          "timestamp": "2025-04-07T15:44:14-07:00",
          "tree_id": "29609e298317235dcacd9adb3903f6a1dc2ab595",
          "url": "https://github.com/reactive/data-client/commit/d44d36a7de0a18817486c4f723bf2f0e86ac9677"
        },
        "date": 1744066044157,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 496,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9366,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 270,
            "range": "±3.02%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 977,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1406,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 780,
            "range": "±2.04%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 4944,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2394,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 260,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6713,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8124,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7535,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1690,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 6308,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6051005,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 262,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2598,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2034,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6614,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "get Collection",
            "value": 5946,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6733,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 222,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 236,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 906,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ce792ac5bc51df7acf5d61ba4ec1c798da72a31c",
          "message": "docs: Update useDebounce() import",
          "timestamp": "2025-04-08T09:58:51+01:00",
          "tree_id": "34ddd80d1826306a7ce2c8b7e34c789c97d56ea4",
          "url": "https://github.com/reactive/data-client/commit/ce792ac5bc51df7acf5d61ba4ec1c798da72a31c"
        },
        "date": 1744102928313,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 486,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9385,
            "range": "±0.90%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 281,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1019,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1344,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 755,
            "range": "±2.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5187,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2400,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 259,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6528,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8190,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8147,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1750,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6834,
            "range": "±0.89%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6020982,
            "range": "±1.75%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 268,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2549,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2081,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6857,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 6173,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7129,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 512,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 228,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 244,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 887,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "939a4b01127ea1df9b4653931593487e4b0c23a2",
          "message": "enhance: Remove INVALID symbol from endpoints in favor of delegate access (#3461)",
          "timestamp": "2025-04-08T05:09:42-07:00",
          "tree_id": "c6cf7bcce890e813d403ddbd627f7300e52f38bf",
          "url": "https://github.com/reactive/data-client/commit/939a4b01127ea1df9b4653931593487e4b0c23a2"
        },
        "date": 1744114371340,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 513,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9247,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 270,
            "range": "±2.89%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 992,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1378,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 760,
            "range": "±3.07%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5137,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2400,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 261,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6971,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6935,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6560,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1717,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6679,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5463884,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 262,
            "range": "±1.89%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2643,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2056,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6540,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Collection",
            "value": 6019,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7361,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 514,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 228,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 241,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 917,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "422120f352ad585b6e5fce2b56e44f7c088a33dd",
          "message": "enhance: Make 'symbol' return types more specific (INVALID) \\ (#3462)",
          "timestamp": "2025-04-08T11:04:34-07:00",
          "tree_id": "505f457706efda01a684afafeece2fdefd119fe7",
          "url": "https://github.com/reactive/data-client/commit/422120f352ad585b6e5fce2b56e44f7c088a33dd"
        },
        "date": 1744135660239,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 516,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9432,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 268,
            "range": "±3.28%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 997,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1407,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 779,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5141,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2419,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 258,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6618,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8289,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7787,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1680,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse",
            "value": 6637,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6068233,
            "range": "±1.04%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 250,
            "range": "±2.15%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2553,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2027,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6543,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "get Collection",
            "value": 5936,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 7090,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 503,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 224,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 242,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 904,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ee18951e06c6f1539a8d972302f07dea0565f4f8",
          "message": "internal: Specify fixed versions of packages in benchmark",
          "timestamp": "2025-04-09T10:14:50+01:00",
          "tree_id": "f50df69a5367774f3393f1b5a456aa2bc4d3096e",
          "url": "https://github.com/reactive/data-client/commit/ee18951e06c6f1539a8d972302f07dea0565f4f8"
        },
        "date": 1744190288801,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 501,
            "range": "±1.43%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9218,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 270,
            "range": "±2.90%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 980,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1399,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 783,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5209,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2446,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 246,
            "range": "±2.42%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6847,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8084,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7211,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1645,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6098,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5733604,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 256,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2598,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2027,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6366,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "get Collection",
            "value": 5389,
            "range": "±0.47%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6605,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 511,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 225,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 235,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 907,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "1cfdd2c7e92d58fd6147af886db25256454a474e",
          "message": "docs: Update entity lifecycle to include delegate.mergeEntity",
          "timestamp": "2025-04-10T11:40:42+01:00",
          "tree_id": "76ea915f0a1edc523dd56ef46f974e2f64248bee",
          "url": "https://github.com/reactive/data-client/commit/1cfdd2c7e92d58fd6147af886db25256454a474e"
        },
        "date": 1744281894907,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 533,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9531,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 280,
            "range": "±2.95%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1020,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1425,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 793,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5416,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2395,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 269,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 5983,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8154,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7681,
            "range": "±1.14%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1675,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6034,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5854832,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 260,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2703,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2082,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6254,
            "range": "±0.84%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5623,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6709,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 530,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 234,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 245,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 913,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "167871bb3abf974abc099fe913b35ea6e029bfd3",
          "message": "pkg: Update all non-major dependencies (#3471)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-16T17:48:20Z",
          "tree_id": "7c51d71832fbcb2e3dff6a8de34a96a8de6355c0",
          "url": "https://github.com/reactive/data-client/commit/167871bb3abf974abc099fe913b35ea6e029bfd3"
        },
        "date": 1744826133704,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 507,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 8964,
            "range": "±2.58%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 274,
            "range": "±3.00%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 993,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1431,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 769,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5379,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2418,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 265,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6824,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8220,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7518,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1726,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 6114,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6207133,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 264,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2621,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2078,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6739,
            "range": "±1.03%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5799,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6846,
            "range": "±0.68%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLong",
            "value": 502,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 225,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 234,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 900,
            "range": "±1.54%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1c3facad885db127a1b96b8f38877b74de078b7",
          "message": "pkg: Update build packages (#3477)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-23T18:28:23Z",
          "tree_id": "6ebcee16c0c69a1a652b937f535d16ae10ca5639",
          "url": "https://github.com/reactive/data-client/commit/c1c3facad885db127a1b96b8f38877b74de078b7"
        },
        "date": 1745433318355,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 505,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9093,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 279,
            "range": "±3.36%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1000,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1438,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 787,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5336,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2348,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 256,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6643,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8191,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7915,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1707,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 6008,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5985961,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 259,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2697,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2081,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6830,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 6065,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6706,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 498,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 230,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 243,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 920,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d340d0fc8426a064da5687b02dae1a733568f2f6",
          "message": "pkg: Update build packages (#3481)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-01T04:01:12Z",
          "tree_id": "a66e7d7d4980ac320135df8180e97f1c04f1c13a",
          "url": "https://github.com/reactive/data-client/commit/d340d0fc8426a064da5687b02dae1a733568f2f6"
        },
        "date": 1746072483377,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 519,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9331,
            "range": "±2.53%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 277,
            "range": "±2.87%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1004,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1414,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 784,
            "range": "±1.98%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5060,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2416,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 268,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6570,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6834,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6592,
            "range": "±0.78%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1739,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 6481,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5751397,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 265,
            "range": "±2.03%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2561,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2128,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6611,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 6154,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6743,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 521,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 231,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 247,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 918,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a1572807cd62f3e19925db23b3db030f605f1c5e",
          "message": "pkg: Update build packages (#3487)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-15T14:03:29Z",
          "tree_id": "abf05599a83043381e3587ecef64f22d070939f9",
          "url": "https://github.com/reactive/data-client/commit/a1572807cd62f3e19925db23b3db030f605f1c5e"
        },
        "date": 1747318241340,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 512,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9164,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 275,
            "range": "±2.80%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 980,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1394,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 774,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5305,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2334,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 263,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6866,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "100 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8027,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7373,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1701,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 6386,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5812448,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 261,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2616,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2093,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6613,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5709,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6844,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 511,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 229,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 245,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 911,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "a127d137dabe5dc41c1b8982a4d793ce6ad401e9",
          "message": "internal: Update benchmark action to node 24",
          "timestamp": "2025-05-15T10:17:51-04:00",
          "tree_id": "fd6d84b2dd53fb10b4550bf468bb14ae87edf649",
          "url": "https://github.com/reactive/data-client/commit/a127d137dabe5dc41c1b8982a4d793ce6ad401e9"
        },
        "date": 1747318869685,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 538,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9549,
            "range": "±1.61%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 294,
            "range": "±2.45%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1038,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1539,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 830,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5491,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2390,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 285,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 8034,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7189,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7021,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1824,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5590,
            "range": "±1.09%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5935506,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 279,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2873,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2112,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5623,
            "range": "±1.60%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5775,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6609,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 550,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 245,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 262,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 950,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d34c7412e88332ed4af77bdfa4b312f6d22441d9",
          "message": "pkg: Update all non-major dependencies (#3489)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-15T14:26:07Z",
          "tree_id": "95d5d6991c2831ff9e02310bec6543949fab2de3",
          "url": "https://github.com/reactive/data-client/commit/d34c7412e88332ed4af77bdfa4b312f6d22441d9"
        },
        "date": 1747319606456,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 539,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9999,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 286,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1000,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1519,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 817,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5427,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2335,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 264,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7658,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8303,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8214,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1697,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5658,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5488619,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 266,
            "range": "±2.62%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2778,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2138,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5723,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5882,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6784,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 521,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 243,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 254,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 935,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bdc1326f9e7f0bb832770773bc878fbc07d0d89b",
          "message": "pkg: Update `@anansi/webpack-config` to v21.0.6 (#3491)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-15T18:32:10Z",
          "tree_id": "15b050616a1a202d20fb38ef0bf60c206a7c015b",
          "url": "https://github.com/reactive/data-client/commit/bdc1326f9e7f0bb832770773bc878fbc07d0d89b"
        },
        "date": 1747334349923,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 536,
            "range": "±1.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9941,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 297,
            "range": "±2.19%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1061,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1505,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 835,
            "range": "±2.11%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5514,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2402,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 286,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6960,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7578,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7670,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1779,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5670,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5530516,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 285,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2808,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2066,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5657,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5542,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6568,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 546,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 246,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 259,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 953,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "b97836216eb9e8d9a403dd1ed88797f2db777dbb",
          "message": "docs: Remove useResource() reference",
          "timestamp": "2025-05-20T14:38:27-04:00",
          "tree_id": "503797a49da86820c7c8eef8c652e5f0c8a5800b",
          "url": "https://github.com/reactive/data-client/commit/b97836216eb9e8d9a403dd1ed88797f2db777dbb"
        },
        "date": 1747766501473,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 534,
            "range": "±1.24%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9880,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 285,
            "range": "±3.07%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1054,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1516,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 815,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5348,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2426,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 279,
            "range": "±1.97%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 8174,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8020,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8183,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1843,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5673,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5683147,
            "range": "±0.79%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 273,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2863,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2093,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5744,
            "range": "±1.38%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "get Collection",
            "value": 5824,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6711,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 546,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 249,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 262,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 948,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e5b60e78f802637f688122f3d66edac44ab8267f",
          "message": "pkg: Update build packages (#3494)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-27T21:09:02Z",
          "tree_id": "d098d6b62caaa12f193b68b7c115b626e81bacee",
          "url": "https://github.com/reactive/data-client/commit/e5b60e78f802637f688122f3d66edac44ab8267f"
        },
        "date": 1748380581628,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 540,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9814,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 289,
            "range": "±2.43%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1024,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1507,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 812,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5089,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2377,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 285,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 8048,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7653,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7622,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1821,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5935,
            "range": "±1.53%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5188221,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 272,
            "range": "±2.06%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2724,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2105,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5752,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "get Collection",
            "value": 5979,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6820,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 539,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 244,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 248,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 951,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "79f4eabb332cb80ae43368b20425c4c150e8ba4d",
          "message": "pkg: Update all non-major dependencies (#3495)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-27T21:23:13Z",
          "tree_id": "83680424d8d7fd5d7de3d01eaf3421c66411d11e",
          "url": "https://github.com/reactive/data-client/commit/79f4eabb332cb80ae43368b20425c4c150e8ba4d"
        },
        "date": 1748381387895,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 541,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 10013,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 291,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1054,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1534,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 834,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 5157,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2403,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 284,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 8214,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7313,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7268,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1777,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5642,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 5527559,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 273,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2800,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2089,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5753,
            "range": "±1.50%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5624,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6852,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 544,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 248,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 256,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 944,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4dde1d616e38d59b645573b12bbaba2f9cac7895",
          "message": "enhance: Hoist ImmutableJS vs Pojo split to import-time (#3468)",
          "timestamp": "2025-06-05T06:57:14-04:00",
          "tree_id": "32a6d4581b5f0090173f2c166e3e089b5dc8215c",
          "url": "https://github.com/reactive/data-client/commit/4dde1d616e38d59b645573b12bbaba2f9cac7895"
        },
        "date": 1749121226839,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 533,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9545,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 291,
            "range": "±2.60%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1047,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1590,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 846,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6296,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2663,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 274,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7504,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7754,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7609,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1791,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5548,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7637808,
            "range": "±1.73%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 274,
            "range": "±1.86%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3094,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2330,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5529,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5566,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6619,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 544,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 247,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 259,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 945,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "6b12666ee1c85bf3e54fac2d207b834ac7525698",
          "message": "docs: Update denormalize benchmark results",
          "timestamp": "2025-06-05T12:10:23+01:00",
          "tree_id": "05f94d5f4935c21c03e888415d71fb98b33e4670",
          "url": "https://github.com/reactive/data-client/commit/6b12666ee1c85bf3e54fac2d207b834ac7525698"
        },
        "date": 1749122029336,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 543,
            "range": "±1.18%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9671,
            "range": "±1.67%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 282,
            "range": "±3.05%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1033,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1581,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 852,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6020,
            "range": "±0.59%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2680,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 273,
            "range": "±2.54%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7772,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7036,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7218,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1786,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5666,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7062622,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 274,
            "range": "±1.95%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3032,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2352,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5531,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5635,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6638,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 549,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 245,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 263,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 938,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1b8b64cdefc69446b0b831aa104d0375bb4012de",
          "message": "pkg: Update build packages (#3499)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-05T11:23:21Z",
          "tree_id": "eaaa2ffc9519f0bfce3329bb92214182dfe20f49",
          "url": "https://github.com/reactive/data-client/commit/1b8b64cdefc69446b0b831aa104d0375bb4012de"
        },
        "date": 1749122997701,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 509,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9857,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 290,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1047,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1605,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 854,
            "range": "±2.13%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6442,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2763,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 276,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7891,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7094,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7125,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1784,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5578,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7472526,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 277,
            "range": "±1.84%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2955,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2280,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5424,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5523,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6652,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 515,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 244,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 255,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 932,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "ac05f9d8d51476479ce64c7ce724b89043a074f4",
          "message": "internal: Add query all bench",
          "timestamp": "2025-06-07T11:13:32+01:00",
          "tree_id": "33d261d409cc24ed9f01472949e2be54b60980f2",
          "url": "https://github.com/reactive/data-client/commit/ac05f9d8d51476479ce64c7ce724b89043a074f4"
        },
        "date": 1749291473124,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 509,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 272,
            "range": "±2.85%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1049,
            "range": "±1.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1592,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 818,
            "range": "±2.32%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6006,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2767,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 9936,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "query All withCache",
            "value": 7584,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 270,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 8181,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7652,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7648,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1787,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse",
            "value": 5582,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7051115,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 264,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3030,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2315,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5671,
            "range": "±1.59%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5777,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6587,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 549,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 244,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 258,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 953,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5699005700206306bc70ff8237bf7ceaac241b82",
          "message": "enhance: delegate.getEntities() returns restricted EntitiesInterface (#3501)",
          "timestamp": "2025-06-07T10:45:36-04:00",
          "tree_id": "dd3f55ec51915f600ad72783abb7d14b1239395d",
          "url": "https://github.com/reactive/data-client/commit/5699005700206306bc70ff8237bf7ceaac241b82"
        },
        "date": 1749307734704,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 514,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 275,
            "range": "±3.53%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1050,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1580,
            "range": "±0.86%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 864,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6216,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2764,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 54818,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "query All withCache",
            "value": 8255,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 277,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7701,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8207,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8255,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1783,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5772,
            "range": "±1.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6545509,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 275,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3097,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2341,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 6010,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5801,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6808,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 533,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 247,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 259,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 958,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "f3507274aa4d7392d740ec8aac9a7e70205c61a3",
          "message": "internal: benchmark rename infer All -> buildQueryKey All",
          "timestamp": "2025-06-07T16:00:48+01:00",
          "tree_id": "4ca83cc5d11ef74d18d49ba42d1199c93d13f60a",
          "url": "https://github.com/reactive/data-client/commit/f3507274aa4d7392d740ec8aac9a7e70205c61a3"
        },
        "date": 1749308647360,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 513,
            "range": "±1.82%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 274,
            "range": "±3.50%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1036,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1549,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 824,
            "range": "±1.99%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6514,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2712,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 55796,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "query All withCache",
            "value": 7917,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 267,
            "range": "±3.70%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7515,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7935,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7976,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1765,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5696,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6751024,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 268,
            "range": "±2.26%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3091,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2370,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5490,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5658,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6758,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 525,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 238,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 254,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 953,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "57f2ca2d384be120e951649742833918829f60ce",
          "message": "pkg: Update all non-major dependencies (#3505)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-12T08:34:40Z",
          "tree_id": "2bce9abab84cac73037943776dd75f74e6e49c30",
          "url": "https://github.com/reactive/data-client/commit/57f2ca2d384be120e951649742833918829f60ce"
        },
        "date": 1749717708681,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 538,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 292,
            "range": "±2.39%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1048,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1594,
            "range": "±0.74%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 843,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6308,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2816,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 54062,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "query All withCache",
            "value": 8033,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 274,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 8006,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 8011,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7951,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1803,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse",
            "value": 5572,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7048530,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 271,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3066,
            "range": "±0.50%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2350,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5554,
            "range": "±1.06%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5579,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6536,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 551,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 247,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 259,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 958,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5979fa4d450bbfe005f7feb1f52f65ef1dc30817",
          "message": "internal: Jest prep (#3509)\n\n* pkg: Update validation packages to v30\n\n* internal: jest 30 upgrades\n\n* internal: Revert jest package updates\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-15T09:04:49-04:00",
          "tree_id": "1f7d65757a6758d2c1aa90c1234b268f07ca3d59",
          "url": "https://github.com/reactive/data-client/commit/5979fa4d450bbfe005f7feb1f52f65ef1dc30817"
        },
        "date": 1749992890971,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 549,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 289,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1038,
            "range": "±0.96%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1593,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 843,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6105,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2787,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 53605,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "query All withCache",
            "value": 6890,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 274,
            "range": "±2.70%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7192,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6997,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6837,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1759,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5762,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7068812,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 272,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3113,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2335,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5695,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "get Collection",
            "value": 5732,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6806,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 544,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 245,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 259,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 957,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bdb427a9956dad298ab4034603e5cd9b30263f9c",
          "message": "pkg: Update validation packages to v30 (major) (#3508)\n\n* pkg: Update validation packages to v30\n\n* internal: Upgrades for jest 30\n\n* fix: Test jest detection\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2025-06-20T14:32:04Z",
          "tree_id": "802aa41e1ace1b258cb728ace9d3ba707d8b3d67",
          "url": "https://github.com/reactive/data-client/commit/bdb427a9956dad298ab4034603e5cd9b30263f9c"
        },
        "date": 1750430350893,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 527,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 296,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1073,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1605,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 1101,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6639,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2847,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 51987,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "query All withCache",
            "value": 7372,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 367,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7902,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7260,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7342,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1836,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5587,
            "range": "±1.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7071923,
            "range": "±0.69%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 357,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3050,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2383,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5516,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5594,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5600,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 540,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 246,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 262,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 946,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b58f6c4950830415749ba313a916e1a823b61ab2",
          "message": "internal: Uncap test workers in CI (#3510)",
          "timestamp": "2025-06-20T14:08:31-04:00",
          "tree_id": "21677341f2c28c9905b6a51c660b2b48b700869f",
          "url": "https://github.com/reactive/data-client/commit/b58f6c4950830415749ba313a916e1a823b61ab2"
        },
        "date": 1750443111283,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 529,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 283,
            "range": "±2.69%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1043,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1593,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 865,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6709,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2793,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 54695,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "query All withCache",
            "value": 7129,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 282,
            "range": "±2.08%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7762,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7271,
            "range": "±0.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7211,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1820,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5705,
            "range": "±1.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7246353,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 276,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3168,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2295,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5571,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5658,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6627,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 533,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 248,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 259,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 958,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "distinct": true,
          "id": "783f133d577ef8f6b4ed4fa123638258b239551b",
          "message": "fix: Remove circular dependency",
          "timestamp": "2025-06-27T12:44:27+02:00",
          "tree_id": "d0390859bba14e4e8363e988b5b998bc499d1275",
          "url": "https://github.com/reactive/data-client/commit/783f133d577ef8f6b4ed4fa123638258b239551b"
        },
        "date": 1751021271246,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 531,
            "range": "±1.45%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 280,
            "range": "±2.65%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1032,
            "range": "±1.58%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1587,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 845,
            "range": "±1.92%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6362,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2817,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 53053,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "query All withCache",
            "value": 7538,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 272,
            "range": "±2.55%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7044,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7199,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7609,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1750,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5685,
            "range": "±1.26%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7034246,
            "range": "±0.72%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 281,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3153,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2378,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5556,
            "range": "±1.12%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5677,
            "range": "±0.94%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6721,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 551,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 247,
            "range": "±0.95%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 262,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 948,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b30806d5b540650df2829a36ddc62e9203cd94dd",
          "message": "pkg: Update build packages (#3515)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-27T10:51:51Z",
          "tree_id": "04f605e0666a558f05d59c6d53b08174a718ff32",
          "url": "https://github.com/reactive/data-client/commit/b30806d5b540650df2829a36ddc62e9203cd94dd"
        },
        "date": 1751021924662,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 524,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 284,
            "range": "±2.16%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1009,
            "range": "±0.88%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1596,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 863,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6357,
            "range": "±0.76%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2762,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 55270,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "query All withCache",
            "value": 6788,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 281,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6522,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6416,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6861,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1702,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5587,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7377465,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 276,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3045,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2379,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5646,
            "range": "±1.30%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5936,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6636,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "setLong",
            "value": 526,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 241,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 262,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 931,
            "range": "±0.46%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "819d1ac5c6a7c5b9b490376c52a630be364ab123",
          "message": "pkg: Update build packages (#3519)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-03T11:30:55Z",
          "tree_id": "216579b5fb2f4d3a179c2abe6a1d5c4e168d3111",
          "url": "https://github.com/reactive/data-client/commit/819d1ac5c6a7c5b9b490376c52a630be364ab123"
        },
        "date": 1751542711966,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 537,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 293,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1043,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1598,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 855,
            "range": "±1.88%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6359,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2800,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 53866,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "query All withCache",
            "value": 8051,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 268,
            "range": "±2.20%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6696,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7873,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8162,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1703,
            "range": "±0.91%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5875,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7072663,
            "range": "±0.83%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 278,
            "range": "±1.79%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3176,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2384,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5689,
            "range": "±1.56%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5888,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6776,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 543,
            "range": "±1.48%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 249,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 262,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 936,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6ccb310eee297cb1284646849faedaf867ff9e3c",
          "message": "pkg: Update build packages (#3524)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-22T17:38:50Z",
          "tree_id": "d892ba0793be28527cdb12ff283c7351a02fa3e6",
          "url": "https://github.com/reactive/data-client/commit/6ccb310eee297cb1284646849faedaf867ff9e3c"
        },
        "date": 1753206389809,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 543,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 289,
            "range": "±2.14%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1006,
            "range": "±1.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1600,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 866,
            "range": "±1.74%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6449,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2746,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 54379,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "query All withCache",
            "value": 7411,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 276,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6574,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7022,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7380,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1696,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5669,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7117831,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 277,
            "range": "±1.91%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3030,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2424,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5633,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5738,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6705,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLong",
            "value": 552,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 248,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 258,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 947,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "52b822d50287d48229936f7dfdbeba18c22b0d50",
          "message": "pkg: Update all non-major dependencies (#3529)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-31T14:06:03Z",
          "tree_id": "fd65f828ca06c01b319fbfd8d18d8c6ceb914fc0",
          "url": "https://github.com/reactive/data-client/commit/52b822d50287d48229936f7dfdbeba18c22b0d50"
        },
        "date": 1753971188300,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 538,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 286,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1031,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1630,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 838,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6651,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2726,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 54888,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "query All withCache",
            "value": 6791,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 275,
            "range": "±2.00%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7019,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6604,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6867,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1713,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5627,
            "range": "±1.36%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6264655,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 277,
            "range": "±1.80%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3039,
            "range": "±1.57%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2255,
            "range": "±0.75%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5503,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Collection",
            "value": 5852,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6583,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 544,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 246,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 258,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 959,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9e564e1236d535c934d79f6c439ec253258a46c5",
          "message": "pkg: Update build packages (#3532)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-09T23:33:45Z",
          "tree_id": "642efd8cfb94b66837e362804f4fa661700a280e",
          "url": "https://github.com/reactive/data-client/commit/9e564e1236d535c934d79f6c439ec253258a46c5"
        },
        "date": 1754782838342,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 519,
            "range": "±1.22%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 289,
            "range": "±2.27%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1013,
            "range": "±0.85%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1587,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 846,
            "range": "±1.64%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6376,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2723,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 53096,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "query All withCache",
            "value": 6747,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 273,
            "range": "±2.17%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6617,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6530,
            "range": "±0.43%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6845,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1702,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5818,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6485017,
            "range": "±0.62%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 275,
            "range": "±2.02%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3128,
            "range": "±0.40%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2386,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5733,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5822,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6847,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "setLong",
            "value": 536,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 244,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 260,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 965,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b10128ef07e8880032d1d877c800106aa9c2c906",
          "message": "pkg: Update all non-major dependencies (#3534)\n\n* pkg: Update all non-major dependencies\n\n* fix: Patch react-native jest to work correctly\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2025-08-12T21:53:27Z",
          "tree_id": "2e062877f04dd327865ba76a1ebe889205a5ad70",
          "url": "https://github.com/reactive/data-client/commit/b10128ef07e8880032d1d877c800106aa9c2c906"
        },
        "date": 1755036038002,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 532,
            "range": "±1.01%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 293,
            "range": "±1.96%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1035,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1581,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 868,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6600,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2728,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 55270,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "query All withCache",
            "value": 6899,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 281,
            "range": "±1.83%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6930,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6644,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6951,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1769,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5747,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6655816,
            "range": "±0.61%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 270,
            "range": "±1.72%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3118,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2354,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5705,
            "range": "±1.35%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5896,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6762,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 545,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 244,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 263,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 966,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58f21816964cd9d7c8eed30b5b6cc49c05002984",
          "message": "pkg: Update build packages (#3541)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-06T01:41:36Z",
          "tree_id": "3d123398fb58daa1b5ce207833f7090e4d9c651e",
          "url": "https://github.com/reactive/data-client/commit/58f21816964cd9d7c8eed30b5b6cc49c05002984"
        },
        "date": 1757123321247,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 535,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 310,
            "range": "±2.93%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1031,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1623,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 1076,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6450,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2718,
            "range": "±0.92%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 54074,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "query All withCache",
            "value": 7198,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 359,
            "range": "±0.56%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6672,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6852,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7180,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1748,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5769,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7121821,
            "range": "±0.71%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 353,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3114,
            "range": "±0.55%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2337,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5691,
            "range": "±1.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5796,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5622,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 539,
            "range": "±0.34%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 242,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 258,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 943,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "08c9b9809452fbcdbd2fce5d63665f5e012273da",
          "message": "pkg: Update actions/checkout action to v5 (#3543)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-06T01:52:03Z",
          "tree_id": "cc952d018358beaa83e5903e92cd2db2f2a4c89d",
          "url": "https://github.com/reactive/data-client/commit/08c9b9809452fbcdbd2fce5d63665f5e012273da"
        },
        "date": 1757123928748,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 528,
            "range": "±1.16%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 295,
            "range": "±2.05%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1018,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1585,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 869,
            "range": "±1.76%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6606,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2751,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 55096,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "query All withCache",
            "value": 6430,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 273,
            "range": "±2.35%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6915,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6420,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6554,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1716,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5707,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6765613,
            "range": "±0.67%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 277,
            "range": "±1.81%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3109,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2356,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5611,
            "range": "±1.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Collection",
            "value": 5753,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6653,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 558,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 248,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 263,
            "range": "±0.31%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 956,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f481c7624b8da6566ed893617a3368a0759ef6",
          "message": "pkg: Update actions/setup-node action to v5 (#3544)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-06T02:07:46Z",
          "tree_id": "e1181fe3e4eb2b043eda75c5243bbf20e1da1cef",
          "url": "https://github.com/reactive/data-client/commit/f1f481c7624b8da6566ed893617a3368a0759ef6"
        },
        "date": 1757124884880,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 535,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 292,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1014,
            "range": "±0.99%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1584,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 854,
            "range": "±1.71%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6435,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2734,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 52213,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "query All withCache",
            "value": 8002,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 271,
            "range": "±2.52%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6767,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7822,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 8258,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1762,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5776,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7070114,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 275,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3033,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2298,
            "range": "±0.53%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5540,
            "range": "±1.15%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5721,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6599,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 550,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 250,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 262,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 958,
            "range": "±0.06%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "621dfc07d7efa1cb32aa146006e8ab49e8e74321",
          "message": "pkg: Update validation packages (#3542)\n\n* pkg: Update validation packages\n\n* internal: Update snap for latest jest version\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2025-09-06T02:27:34Z",
          "tree_id": "78864af37e908f0d7b8197bdf478aaeeed3385e4",
          "url": "https://github.com/reactive/data-client/commit/621dfc07d7efa1cb32aa146006e8ab49e8e74321"
        },
        "date": 1757126090051,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 533,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 281,
            "range": "±3.14%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1043,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1597,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 1070,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6609,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2698,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 54209,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "query All withCache",
            "value": 6441,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 354,
            "range": "±0.54%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7398,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6308,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6564,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1793,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5718,
            "range": "±1.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7166969,
            "range": "±0.70%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 341,
            "range": "±0.51%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3106,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2292,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5519,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5861,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5416,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 536,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 246,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 258,
            "range": "±0.49%",
            "unit": "ops/sec",
            "extra": "87 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 951,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e266b94740917967753625f759ba83473146b2d1",
          "message": "pkg: Update all non-major dependencies (#3545)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-06T02:40:25Z",
          "tree_id": "c96ce848f8bc21586e19d5d2425ebf88ba7f2980",
          "url": "https://github.com/reactive/data-client/commit/e266b94740917967753625f759ba83473146b2d1"
        },
        "date": 1757126874911,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 537,
            "range": "±1.08%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 295,
            "range": "±2.28%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1039,
            "range": "±1.28%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1584,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 858,
            "range": "±1.69%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6359,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2679,
            "range": "±0.11%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 52626,
            "range": "±0.30%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "query All withCache",
            "value": 6700,
            "range": "±0.29%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 276,
            "range": "±1.94%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7093,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6643,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6941,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1750,
            "range": "±0.19%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5635,
            "range": "±1.39%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7236199,
            "range": "±0.66%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 273,
            "range": "±2.18%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3091,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2318,
            "range": "±0.14%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5505,
            "range": "±0.97%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5425,
            "range": "±0.27%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6681,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 553,
            "range": "±0.33%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 247,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 264,
            "range": "±0.07%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 946,
            "range": "±1.63%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1b393b853b2fe3812d861734bcb58e9a1cae23b",
          "message": "pkg: Update react to v19.1.1 (#3526)\n\n* pkg: Update react to v19.1.1\n\n* pkg: Upgrade react-native to 82.0-rc.0\n\n---------\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>\nCo-authored-by: Nathaniel Tucker <me@ntucker.me>",
          "timestamp": "2025-09-07T18:21:05Z",
          "tree_id": "306f9d150cf682189cd49f1fcc3ff5c12f22dbe1",
          "url": "https://github.com/reactive/data-client/commit/c1b393b853b2fe3812d861734bcb58e9a1cae23b"
        },
        "date": 1757269675966,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 538,
            "range": "±1.31%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 291,
            "range": "±2.25%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1020,
            "range": "±1.05%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1607,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 855,
            "range": "±1.52%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6523,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2645,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 51716,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "query All withCache",
            "value": 6978,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 270,
            "range": "±2.12%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7072,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7010,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7008,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1718,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse",
            "value": 5642,
            "range": "±1.27%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7003962,
            "range": "±0.63%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 276,
            "range": "±1.85%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 2952,
            "range": "±0.48%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2295,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5584,
            "range": "±1.19%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5714,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6648,
            "range": "±0.37%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 543,
            "range": "±0.39%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 247,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 262,
            "range": "±0.10%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 959,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "29139614+renovate[bot]@users.noreply.github.com",
            "name": "renovate[bot]",
            "username": "renovate[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "beaa03e62e4b2bb6cf5f9cbf1c7c68f1a4d3bfca",
          "message": "pkg: Update build packages (#3557)\n\nCo-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-02T09:29:19Z",
          "tree_id": "55a8246bf8df885ca9f0ca252f4ed2e0e3249c41",
          "url": "https://github.com/reactive/data-client/commit/beaa03e62e4b2bb6cf5f9cbf1c7c68f1a4d3bfca"
        },
        "date": 1759397858481,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 529,
            "range": "±1.21%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 275,
            "range": "±2.81%",
            "unit": "ops/sec",
            "extra": "77 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 996,
            "range": "±0.28%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1609,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 865,
            "range": "±1.70%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6361,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2705,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 55207,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "query All withCache",
            "value": 6693,
            "range": "±0.57%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 352,
            "range": "±0.58%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6774,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6409,
            "range": "±0.13%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6756,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1701,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5614,
            "range": "±1.41%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7044933,
            "range": "±0.80%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 346,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3098,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2308,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5643,
            "range": "±1.47%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5847,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 5381,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "setLong",
            "value": 540,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 241,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 253,
            "range": "±0.87%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 934,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fcb7d7db8061c2a7e12632071ecb9c6ddd8d154f",
          "message": "feat: Unions can query() without type discriminator (#3558)\n\n* feat: Unions can query() without type discriminator\n\n* enhance: Normalize delegate.invalidate() first argument only has  param.",
          "timestamp": "2025-10-05T15:13:38-04:00",
          "tree_id": "3374c27d1757715a62bcebb0e0292a97786c62db",
          "url": "https://github.com/reactive/data-client/commit/fcb7d7db8061c2a7e12632071ecb9c6ddd8d154f"
        },
        "date": 1759691818921,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 534,
            "range": "±1.55%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 280,
            "range": "±3.25%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1024,
            "range": "±1.00%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1618,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 846,
            "range": "±1.78%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6722,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2682,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 55354,
            "range": "±0.38%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "query All withCache",
            "value": 7343,
            "range": "±0.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 276,
            "range": "±2.37%",
            "unit": "ops/sec",
            "extra": "84 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 6797,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 7209,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 7446,
            "range": "±1.13%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1707,
            "range": "±0.18%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse",
            "value": 5647,
            "range": "±1.42%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 6765613,
            "range": "±0.65%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 273,
            "range": "±1.87%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3076,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2304,
            "range": "±0.12%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5560,
            "range": "±1.11%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Collection",
            "value": 5651,
            "range": "±0.26%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6771,
            "range": "±0.21%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "setLong",
            "value": 553,
            "range": "±0.17%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 243,
            "range": "±0.64%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 261,
            "range": "±0.09%",
            "unit": "ops/sec",
            "extra": "88 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 944,
            "range": "±0.08%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me@ntucker.me",
            "name": "Nathaniel Tucker",
            "username": "ntucker"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ba31c9b2d3c4ec5620bb64e49daf9b18994b9290",
          "message": "feat: Add Collection.remove (#3560)",
          "timestamp": "2025-10-05T19:10:59-07:00",
          "tree_id": "9b5257206a5e3df53e5cc867acbae43e118ebd61",
          "url": "https://github.com/reactive/data-client/commit/ba31c9b2d3c4ec5620bb64e49daf9b18994b9290"
        },
        "date": 1759716853010,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "normalizeLong",
            "value": 515,
            "range": "±1.17%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "denormalizeLong",
            "value": 279,
            "range": "±2.71%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "denormalizeLong donotcache",
            "value": 1012,
            "range": "±2.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeShort donotcache 500x",
            "value": 1624,
            "range": "±0.15%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeShort 500x",
            "value": 859,
            "range": "±1.93%",
            "unit": "ops/sec",
            "extra": "85 samples"
          },
          {
            "name": "denormalizeShort 500x withCache",
            "value": 6538,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "queryShort 500x withCache",
            "value": 2730,
            "range": "±0.24%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "buildQueryKey All",
            "value": 55210,
            "range": "±0.35%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "query All withCache",
            "value": 6736,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "denormalizeLong with mixin Entity",
            "value": 275,
            "range": "±1.90%",
            "unit": "ops/sec",
            "extra": "83 samples"
          },
          {
            "name": "denormalizeLong withCache",
            "value": 7224,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "denormalizeLong All withCache",
            "value": 6535,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "denormalizeLong Query-sorted withCache",
            "value": 6812,
            "range": "±0.25%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "denormalizeLongAndShort withEntityCacheOnly",
            "value": 1775,
            "range": "±0.45%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "getResponse",
            "value": 5592,
            "range": "±1.32%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "getResponse (null)",
            "value": 7031288,
            "range": "±0.60%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "getResponse (clear cache)",
            "value": 278,
            "range": "±2.10%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "getSmallResponse",
            "value": 3104,
            "range": "±0.16%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getSmallInferredResponse",
            "value": 2328,
            "range": "±0.52%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "getResponse Collection",
            "value": 5577,
            "range": "±1.10%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "get Collection",
            "value": 5651,
            "range": "±0.20%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "get Query-sorted",
            "value": 6672,
            "range": "±0.36%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLong",
            "value": 540,
            "range": "±0.41%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "setLongWithMerge",
            "value": 242,
            "range": "±0.22%",
            "unit": "ops/sec",
            "extra": "86 samples"
          },
          {
            "name": "setLongWithSimpleMerge",
            "value": 252,
            "range": "±0.23%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "setSmallResponse 500x",
            "value": 934,
            "range": "±0.44%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      }
    ]
  }
}